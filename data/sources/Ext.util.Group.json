{"tagname":"class","name":"Ext.util.Group","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":1}],"doc":"<p>Encapsulates a grouped collection of records within a <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a></p>\n","aliases":{},"alternateClassNames":[],"extends":"Ext.util.Collection","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"autoFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":78}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":78,"type":"Boolean","default":"true","accessor":true,"evented":null,"id":"cfg-autoFilter","owner":"Ext.util.Collection","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"autoGroup","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":92}],"doc":"<p><code>true</code> to sort by the grouper</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoGroup","owner":"Ext.util.Collection","short_doc":"true to sort by the grouper ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"autoSort","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":80}],"doc":"<p><code>true</code> to maintain sorted order when items\nare added regardless of requested insertion point, or when an item mutation\nresults in a new sort position.</p>\n\n<p>This does not affect a filtered Collection's reaction to mutations of the source\nCollection. If sorters are present when the source Collection is mutated,\nthis Collection's sort order will always be maintained.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-autoSort","owner":"Ext.util.Collection","short_doc":"true to maintain sorted order when items\nare added regardless of requested insertion point, or when an item mutation\n...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"decoder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":98}],"doc":"<p>A function that can convert newly added items to a proper type before being\nadded to this collection.</p>\n","type":"Function","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-decoder","owner":"Ext.util.Collection","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"cfg","name":"defaultSortDirection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":281}],"doc":"<p>The default sort direction to use if one is not specified.</p>\n","type":"String","default":"'ASC'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-defaultSortDirection","owner":"Ext.util.Collection","short_doc":"The default sort direction to use if one is not specified. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"extraKeys","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":105}],"doc":"<p>One or more <code><a href=\"#!/api/Ext.util.CollectionKey\" rel=\"Ext.util.CollectionKey\" class=\"docClass\">Ext.util.CollectionKey</a></code> configuration objects or key properties.\nEach property of the given object is the name of the <code>CollectionKey</code> instance\nthat is stored on this collection. The value of each property configures the\n<code>CollectionKey</code> instance.</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n     extraKeys: {\n         byName: 'name' // based on \"name\" property of each item\n     }\n });\n</code></pre>\n\n<p>Or equivalently:</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n     extraKeys: {\n         byName: {\n             property: 'name'\n         }\n     }\n });\n</code></pre>\n\n<p>To provide a custom key extraction function instead:</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n     extraKeys: {\n         byName: {\n             keyFn: function (item) {\n                 return item.name;\n             }\n         }\n     }\n });\n</code></pre>\n\n<p>Or to call a key getter method from each item:</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n     extraKeys: {\n         byName: {\n             keyFn: 'getName'\n         }\n     }\n });\n</code></pre>\n\n<p>To use the above:</p>\n\n<pre><code> var item = collection.byName.get('somename');\n</code></pre>\n\n<p><strong>NOTE</strong> Either a <code>property</code> or <code>keyFn</code> must be be specified to define each\nkey.</p>\n","type":"Object","default":null,"properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-extraKeys","owner":"Ext.util.Collection","short_doc":"One or more Ext.util.CollectionKey configuration objects or key properties. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"filters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":160}],"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> for this collection. At the\ntime a collection is created <code>filters</code> can be specified as a unit. After that\ntime the normal <code>setFilters</code> method can also be given a set of replacement\nfilters for the collection.</p>\n\n<p>Individual filters can be specified as an <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code> instance, a config\nobject for <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code> or simply a function that will be wrapped in a\ninstance with its <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> set.</p>\n\n<p>For fine grain control of the filters collection, call <code>getFilters</code> to return\nthe <code><a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a></code> instance that holds this collection's filters.</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>();\n var filters = collection.getFilters(); // an <a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>\n\n function legalAge (item) {\n     return item.age &gt;= 21;\n }\n\n filters.add(legalAge);\n\n //...\n\n filters.remove(legalAge);\n</code></pre>\n\n<p>Any changes to the <code>filters</code> collection will cause this collection to adjust\nits items accordingly (if <code>autoFilter</code> is <code>true</code>).</p>\n","type":"Array/Ext.util.FilterCollection","default":null,"properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-filters","owner":"Ext.util.Collection","short_doc":"The collection of Filters for this collection. ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>"},{"tagname":"cfg","name":"groupConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":217}],"doc":"<p>A default configuration to be passed to any groups created by the\n<a href=\"#!/api/Ext.util.GroupCollection\" rel=\"Ext.util.GroupCollection\" class=\"docClass\">Ext.util.GroupCollection</a>. See <a href=\"#!/api/Ext.util.Collection-cfg-groups\" rel=\"Ext.util.Collection-cfg-groups\" class=\"docClass\">groups</a>.</p>\n","type":"Object","default":null,"properties":null,"private":true,"since":"6.5.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groupConfig","owner":"Ext.util.Collection","short_doc":"A default configuration to be passed to any groups created by the\nExt.util.GroupCollection. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"groupKey","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":10}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":10,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-groupKey","owner":"Ext.util.Group","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"grouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":193}],"doc":"<p>A configuration object for this collection's <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">grouper</a>.</p>\n\n<p>For example, to group items by the first letter of the last name:</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n     grouper: {\n         groupFn: function (item) {\n             return item.lastName.substring(0, 1);\n         }\n     }\n });\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-grouper","owner":"Ext.util.Collection","short_doc":"A configuration object for this collection's grouper. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"groups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":209}],"doc":"<p>The collection of to hold each group container. This collection is created and\nremoved dynamically based on <code>grouper</code>. Application code should only need to\ncall <code>getGroups</code> to retrieve the collection and not <code>setGroups</code>.</p>\n","type":"Ext.util.GroupCollection","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-groups","owner":"Ext.util.Collection","short_doc":"The collection of to hold each group container. ...","html_type":"<a href=\"#!/api/Ext.util.GroupCollection\" rel=\"Ext.util.GroupCollection\" class=\"docClass\">Ext.util.GroupCollection</a>"},{"tagname":"cfg","name":"keyFn","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":672}],"doc":"<p>A function to retrieve the key of an item in the collection. If provided,\nthis replaces the default <code>getKey</code> method. The default <code>getKey</code> method handles\nitems that have either an \"id\" or \"_id\" property or failing that a <code>getId</code>\nmethod to call.</p>\n","type":"Function","default":null,"properties":null,"since":"5.0.0","id":"cfg-keyFn","owner":"Ext.util.Collection","short_doc":"A function to retrieve the key of an item in the collection. ...","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":289}],"doc":"<p>A config object containing one or more event handlers to be added to this object during\ninitialization. This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\",\n\"mouseover\" etc), this is usually only done when extra value can be added. For example\nthe <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>\nevent passing the node clicked on. To access DOM events directly from a child element\nof a Component, we need to specify the <code>element</code> option to identify the Component\nproperty to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during\ninitialization. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"multiSortLimit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":268}],"doc":"<p>The maximum number of sorters which may be applied to this Sortable when using\nthe \"multi\" insertion position when adding sorters.</p>\n\n<p>New sorters added using the \"multi\" insertion position are inserted at the top\nof the sorters list becoming the new primary sort key.</p>\n\n<p>If the sorters collection has grown to longer then <strong><code>multiSortLimit</code></strong>, then\nthe it is trimmed.</p>\n","type":"Number","default":"3","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-multiSortLimit","owner":"Ext.util.Collection","short_doc":"The maximum number of sorters which may be applied to this Sortable when using\nthe \"multi\" insertion position when ad...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"rootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":227}],"doc":"<p>The root property to use for aggregation, filtering and sorting. By default\nthis is <code>null</code> but when containing things like <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a>\nthis config would likely be set to \"data\" so that property names are applied\nto the fields of each record.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-rootProperty","owner":"Ext.util.Collection","short_doc":"The root property to use for aggregation, filtering and sorting. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"sorters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":236}],"doc":"<p>Array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">sorters</a> for this collection. At the time a\ncollection is created the <code>sorters</code> can be specified as a unit. After that time\nthe normal <code>setSorters</code> method can be also be given a set of replacement\nsorters.</p>\n\n<p>Individual sorters can be specified as an <code><a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a></code> instance, a config\nobject for <code><a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a></code> or simply the name of a property by which to sort.</p>\n\n<p>An alternative way to extend the sorters is to call the <code>sort</code> method and pass\na property or sorter config to add to the sorters.</p>\n\n<p>For fine grain control of the sorters collection, call <code>getSorters</code> to return\nthe <code><a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a></code> instance that holds this collection's sorters.</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>();\n var sorters = collection.getSorters(); // an <a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>\n\n sorters.add('name');\n\n //...\n\n sorters.remove('name');\n</code></pre>\n\n<p>Any changes to the <code>sorters</code> collection will cause this collection to adjust\nits items accordingly (if <code>autoSort</code> is <code>true</code>).</p>\n","type":"Array/Ext.util.SorterCollection","default":null,"properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-sorters","owner":"Ext.util.Collection","short_doc":"Array of sorters for this collection. ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>"},{"tagname":"cfg","name":"source","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":287}],"doc":"<p>The base <code>Collection</code>. This collection contains the items to which filters\nare applied to populate this collection. In this configuration, only the\nroot <code>source</code> collection can have items truly added or removed.</p>\n","type":"Ext.util.Collection","default":null,"properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-source","owner":"Ext.util.Collection","short_doc":"The base Collection. ...","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"cfg","name":"trackGroups","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":296}],"doc":"<p><code>true</code> to track individual groups in a <a href=\"#!/api/Ext.util.GroupCollection\" rel=\"Ext.util.GroupCollection\" class=\"docClass\">Ext.util.GroupCollection</a></p>\n","type":"Boolean","default":"true","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-trackGroups","owner":"Ext.util.Collection","short_doc":"true to track individual groups in a Ext.util.GroupCollection ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1230}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","type":"Object/Array","default":"{}","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configTransforms","owner":"Ext.Base","short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$endUpdatePriority","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":13}],"doc":"<p>Group collections must have a higher priority than normal collections.  This ensures\nthat their endupdate handlers for filters and sorters run prior to the endupdate\nhandler of the store's main collection, and so when the user handles events such\nas sort/datachanged, the groups have already been sorted and filtered.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Number","default":"2001","readonly":null,"id":"property-S-endUpdatePriority","owner":"Ext.util.Group","overrides":[{"name":"$endUpdatePriority","owner":"Ext.util.Collection","link":"<a href=\"#!/api/Ext.util.Collection-property-S-endUpdatePriority\" rel=\"Ext.util.Collection-property-S-endUpdatePriority\" class=\"docClass\">Ext.util.Collection.$endUpdatePriority</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"Group collections must have a higher priority than normal collections. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","readonly":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"_eventToMethodMap","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3011}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3011,"type":"Object","default":"{add: 'onCollectionAdd', beforeitemchange: 'onCollectionBeforeItemChange', beginupdate: 'onCollectionBeginUpdate', endupdate: 'onCollectionEndUpdate', itemchange: 'onCollectionItemChange', filtereditemchange: 'onCollectionFilteredItemChange', refresh: 'onCollectionRefresh', remove: 'onCollectionRemove', beforesort: 'beforeCollectionSort', sort: 'onCollectionSort', filter: 'onCollectionFilter', filteradd: 'onCollectionFilterAdd', updatekey: 'onCollectionUpdateKey'}","readonly":null,"id":"property-_eventToMethodMap","owner":"Ext.util.Collection","short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","type":"Boolean/\"async\"","default":"true","properties":null,"protected":true,"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"since":"6.2.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-destroyed","owner":"Ext.Base","short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"filtered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":357}],"doc":"<p>A read-only flag indicating if this object is filtered.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-filtered","owner":"Ext.util.Collection","short_doc":"A read-only flag indicating if this object is filtered. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"generation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":304}],"doc":"<p>Mutation counter which is incremented when the collection changes.</p>\n","type":"Number","default":"0","properties":null,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-generation","owner":"Ext.util.Collection","short_doc":"Mutation counter which is incremented when the collection changes. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"grouped","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":340}],"doc":"<p>A read-only flag indicating if this object is grouped.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-grouped","owner":"Ext.util.Collection","short_doc":"A read-only flag indicating if this object is grouped. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"indexRebuilds","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":320}],"doc":"<p>The number of times the <code>indices</code> have been rebuilt. This is for diagnostic use.</p>\n","type":"Number","default":"0","properties":null,"private":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"id":"property-indexRebuilds","owner":"Ext.util.Collection","short_doc":"The number of times the indices have been rebuilt. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"indices","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":312}],"doc":"<p>An object used as map to get the index of an item.</p>\n","type":"Object","default":null,"properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-indices","owner":"Ext.util.Collection","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"isCollection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":69}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Collection, or subclass\nthereof.</p>\n","type":"Boolean","default":"true","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isCollection","owner":"Ext.util.Collection","short_doc":"true in this class to identify an object as an instantiated Collection, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isGroup","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":7}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":7,"type":"Boolean","default":"true","readonly":null,"id":"property-isGroup","owner":"Ext.util.Group","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"items","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":648}],"doc":"<p>An array containing the items.</p>\n","type":"Object[]","default":"[]","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-items","owner":"Ext.util.Collection","short_doc":"An array containing the items. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"property","name":"length","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":664}],"doc":"<p>The count of items in the collection.</p>\n","type":"Number","default":"0","properties":null,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-length","owner":"Ext.util.Collection","short_doc":"The count of items in the collection. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"manageSorters","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":19}],"doc":"<p><code>true</code> to destroy the sorter collection on destroy.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":19,"type":"Boolean","default":"false","readonly":null,"id":"property-manageSorters","owner":"Ext.util.Group","overrides":[{"name":"manageSorters","owner":"Ext.util.Collection","link":"<a href=\"#!/api/Ext.util.Collection-property-manageSorters\" rel=\"Ext.util.Collection-property-manageSorters\" class=\"docClass\">Ext.util.Collection.manageSorters</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"true to destroy the sorter collection on destroy. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"map","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":656}],"doc":"<p>An object used as a map to find items based on their key.</p>\n","type":"Object","default":"{}","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-map","owner":"Ext.util.Collection","short_doc":"An object used as a map to find items based on their key. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"sorted","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":347}],"doc":"<p>A read-only flag indicating if this object is sorted. This flag may not be correct\nduring an update of the sorter collection but will be correct before <code>onSortChange</code>\nis called. This flag is <code>true</code> if <code>grouped</code> is <code>true</code> because the collection is at\nleast sorted by the <code>grouper</code>.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-sorted","owner":"Ext.util.Collection","short_doc":"A read-only flag indicating if this object is sorted. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"transformItems","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3868}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3868,"type":"Object","default":null,"readonly":null,"id":"property-transformItems","owner":"Ext.util.Collection","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"updating","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":329}],"doc":"<p>A counter that is increased by <code>beginUpdate</code> and decreased by <code>endUpdate</code>. When\nthis transitions from 0 to 1 the <code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> event is\nfired. When it transitions back from 1 to 0 the <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevent is fired.</p>\n","type":"Number","default":"0","properties":null,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-updating","owner":"Ext.util.Collection","short_doc":"A counter that is increased by beginUpdate and decreased by endUpdate. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":726}],"doc":"<p>Adds an item to the collection. If the item already exists or an item with the\nsame key exists, the old item will be removed and the new item will be added to\nthe end.</p>\n\n<p>This method also accepts an array of items or simply multiple items as individual\narguments. The following 3 code sequences have the same end result:</p>\n\n<pre><code> // Call add() once per item (not optimal - best avoided):\n collection.add(itemA);\n collection.add(itemB);\n collection.add(itemC);\n collection.add(itemD);\n\n // Call add() with each item as an argument:\n collection.add(itemA, itemB, itemC, itemD);\n\n // Call add() with the items as an array:\n collection.add([ itemA, itemB, itemC, itemD ]);\n</code></pre>\n\n<p>The first form should be avoided where possible because the collection and all\nparties \"watching\" it will be updated 4 times.</p>\n","params":[{"tagname":"params","type":"Object/Object[]","name":"item","doc":"<p>The item or items to add.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Object/Object[]","name":"return","doc":"<p>The item or items added.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["decodeItems","splice"],"id":"method-add","owner":"Ext.util.Collection","short_doc":"Adds an item to the collection. ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Alias for onAfter. ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Alias for onBefore. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"capture","optional":true,"doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for\naddListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"addObserver","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3027}],"doc":"<p>Adds an observing object to this collection. Observers are given first view of all\nevents that we may fire. For any event an observer may implement a method whose\nname starts with \"onCollection\" to receive the event. The <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code>\nevent for example would be passed to <code>\"onCollectionAdd\"</code>.</p>\n\n<p>The only restriction to observers is that they are not allowed to add or remove\nobservers from inside these methods.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"observer","doc":"<p>The observer instance.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addObserver","owner":"Ext.util.Collection","short_doc":"Adds an observing object to this collection. ..."},{"tagname":"method","name":"aggregate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":791}],"doc":"<p>Returns the result of the specified aggregation operation against all items in this\ncollection.</p>\n\n<p>This method is not typically called directly because there are convenience methods\nfor each of the supported <code>operation</code> values. These are:</p>\n\n<ul>\n<li><strong>average</strong> - Returns the average value.</li>\n<li><strong>bounds</strong>  - Returns an array of <code>[min, max]</code>.</li>\n<li><strong>max</strong>     - Returns the maximum value or <code>undefined</code> if empty.</li>\n<li><strong>min</strong>     - Returns the minimum value or <code>undefined</code> if empty.</li>\n<li><strong>sum</strong>     - Returns the sum of all values.</li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code> result = collection.aggregate('age', 'sum');\n\n result = collection.aggregate('age', 'sum', 2, 10); // the 8 items at index 2\n</code></pre>\n\n<p>To provide a custom operation function:</p>\n\n<pre><code> function averageAgeOfMinors (items, values) {\n     var sum = 0,\n         count = 0;\n\n     for (var i = 0; i &lt; values.length; ++i) {\n         if (values[i] &lt; 18) {\n             sum += values[i];\n             ++count;\n         }\n     }\n\n     return count ? sum / count : 0;\n }\n\n result = collection.aggregate('age', averageAgeOfMinors);\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to aggregate from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/Function","name":"operation","doc":"<p>The operation to perform.</p>\n","properties":[{"tagname":"params","type":"Array","name":"items","doc":"<p>The items on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"values","doc":"<p>The values on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item in <code>items</code> to include in the\naggregation.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop aggregating <code>items</code>. The item at\nthis index will <em>not</em> be included in the aggregation.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The <code>this</code> pointer to use if <code>operation</code> is a function.\nDefaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-aggregate","owner":"Ext.util.Collection","short_doc":"Returns the result of the specified aggregation operation against all items in this\ncollection. ..."},{"tagname":"method","name":"aggregateByGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":851}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-aggregate\" rel=\"Ext.util.Collection-method-aggregate\" class=\"docClass\">aggregate</a>. The functionality is the same, however the aggregates are\nprovided per group. Assumes this collection has an active <a href=\"#!/api/Ext.util.Collection-cfg-grouper\" rel=\"Ext.util.Collection-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to aggregate from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/Function","name":"operation","doc":"<p>The operation to perform.</p>\n","properties":[{"tagname":"params","type":"Array","name":"items","doc":"<p>The items on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"values","doc":"<p>The values on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The <code>this</code> pointer to use if <code>operation</code> is a function.\nDefaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["aggregateGroups","getGroups"],"id":"method-aggregateByGroup","owner":"Ext.util.Collection","short_doc":"See aggregate. ..."},{"tagname":"method","name":"aggregateGroups","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":932}],"doc":"<p>Aggregates a set of groups.</p>\n","params":[{"tagname":"params","type":"Ext.util.GroupCollection","name":"groups","doc":"<p>The groups</p>\n","html_type":"<a href=\"#!/api/Ext.util.GroupCollection\" rel=\"Ext.util.GroupCollection\" class=\"docClass\">Ext.util.GroupCollection</a>"},{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to aggregate from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/Function","name":"operation","doc":"<p>The operation to perform.</p>\n","properties":[{"tagname":"params","type":"Array","name":"values","doc":"<p>The values on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"items","doc":"<p>The items on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in <code>items</code> at which the <code>operation</code>\nfunction is to start. The <code>values.length</code> indicates the number of items involved.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The <code>this</code> pointer to use if <code>operation</code> is a function.\nDefaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["aggregateItems"],"id":"method-aggregateGroups","owner":"Ext.util.Collection","short_doc":"Aggregates a set of groups. ..."},{"tagname":"method","name":"aggregateItems","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":871}],"doc":"<p>Returns the result of the specified aggregation operation against the given items.\nFor details see <code>aggregate</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"items","doc":"<p>The items to aggregate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to aggregate from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/Function","name":"operation","doc":"<p>The operation to perform.</p>\n","properties":[{"tagname":"params","type":"Array","name":"items","doc":"<p>The items on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"values","doc":"<p>The values on which the <code>operation</code> function is to\noperate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item in <code>items</code> to include in the\naggregation.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop aggregating <code>items</code>. The item at\nthis index will <em>not</em> be included in the aggregation.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The <code>this</code> pointer to use if <code>operation</code> is a function.\nDefaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getRootProperty"],"id":"method-aggregateItems","owner":"Ext.util.Collection","short_doc":"Returns the result of the specified aggregation operation against the given items. ..."},{"tagname":"method","name":"applyExtraKeys","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3075}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3075,"params":[{"name":"extraKeys","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldExtraKeys","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyExtraKeys","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"applyFilters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3364}],"doc":"<hr />\n\n<p> Private</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"filters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"collection","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-applyFilters","owner":"Ext.util.Collection","short_doc":"Private ..."},{"tagname":"method","name":"applyGrouper","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3110}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3110,"params":[{"name":"grouper","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getSorters"],"id":"method-applyGrouper","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"applySorters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3591}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3591,"params":[{"name":"sorters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"collection","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getSorters"],"id":"method-applySorters","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"average","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2711}],"doc":"<p>Averages property values from some or all of the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to average from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the average.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop averaging <code>items</code>. The item at\nthis index will <em>not</em> be included in the average.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of averaging the specified property from the indicated\nitems.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-average","owner":"Ext.util.Collection","short_doc":"Averages property values from some or all of the items in this collection. ..."},{"tagname":"method","name":"averageByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2724}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-average\" rel=\"Ext.util.Collection-method-average\" class=\"docClass\">average</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to average from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-average\" rel=\"Ext.util.Collection-method-average\" class=\"docClass\">average</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-averageByGroup","owner":"Ext.util.Collection","short_doc":"See average. ..."},{"tagname":"method","name":"beginUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":972}],"doc":"<p>This method is called to indicate the start of multiple changes to the collection.\nApplication code should seldom need to call this method as it is called internally\nwhen needed. If multiple collection changes are needed, consider wrapping them in\nan <code>update</code> call rather than calling <code>beginUpdate</code> directly.</p>\n\n<p>Internally this method increments a counter that is decremented by <code>endUpdate</code>. It\nis important, therefore, that if you call <code>beginUpdate</code> directly you match that\ncall with a call to <code>endUpdate</code> or you will prevent the collection from updating\nproperly.</p>\n\n<p>For example:</p>\n\n<pre><code> var collection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>();\n\n collection.beginUpdate();\n\n collection.add(item);\n // ...\n\n collection.insert(index, otherItem);\n //...\n\n collection.endUpdate();\n</code></pre>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["notify"],"id":"method-beginUpdate","owner":"Ext.util.Collection","short_doc":"This method is called to indicate the start of multiple changes to the collection. ..."},{"tagname":"method","name":"bounds","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2734}],"doc":"<p>Determines the minimum and maximum values for the specified property over some or\nall of the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the bounds.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included in the bounds.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>An array <code>[min, max]</code> with the minimum and maximum of the specified\nproperty.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"since":"5.0.0","id":"method-bounds","owner":"Ext.util.Collection","short_doc":"Determines the minimum and maximum values for the specified property over some or\nall of the items in this collection. ..."},{"tagname":"method","name":"boundsByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2748}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-bounds\" rel=\"Ext.util.Collection-method-bounds\" class=\"docClass\">bounds</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-bounds\" rel=\"Ext.util.Collection-method-bounds\" class=\"docClass\">bounds</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-boundsByGroup","owner":"Ext.util.Collection","short_doc":"See bounds. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"clear","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1005}],"doc":"<p>Removes all items from the collection. This is similar to <code>removeAll</code> except that\n<code>removeAll</code> fire events to inform listeners. This means that this method should be\ncalled only when you are sure there are no listeners.</p>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getExtraKeys"],"id":"method-clear","owner":"Ext.util.Collection","short_doc":"Removes all items from the collection. ..."},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1394}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"clone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1037}],"doc":"<p>Creates a shallow copy of this collection</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clone","owner":"Ext.util.Collection","short_doc":"Creates a shallow copy of this collection ..."},{"tagname":"method","name":"collect","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1051}],"doc":"<p>Collects unique values of a particular property in this Collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The property to collect on</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"root","optional":true,"doc":"<p>'root' property to extract the first argument from.\nThis is used mainly when summing fields in records, where the fields are all stored\ninside the 'data' object</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"allowNull","optional":true,"doc":"<p>Pass <code>true</code> to include <code>null</code>, <code>undefined</code> or empty\nstring values.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The unique values</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-collect","owner":"Ext.util.Collection","short_doc":"Collects unique values of a particular property in this Collection. ..."},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1084}],"doc":"<p>Returns true if the collection contains the passed Object as an item.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to look for in the collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the collection contains the item.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey"],"id":"method-contains","owner":"Ext.util.Collection","short_doc":"Returns true if the collection contains the passed Object as an item. ..."},{"tagname":"method","name":"containsAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1102}],"doc":"<p>Returns true if the collection contains all the passed items. If the first argument\nis an array, then the items in that array are checked. Otherwise, all arguments\npassed to this method are checked.</p>\n","params":[{"tagname":"params","type":"Object.../Object[]","name":"items","doc":"<p>The item(s) that must be in the collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>.../<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the collection contains all the items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"since":"6.5.2","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["contains"],"id":"method-containsAll","owner":"Ext.util.Collection","short_doc":"Returns true if the collection contains all the passed items. ..."},{"tagname":"method","name":"containsKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1124}],"doc":"<p>Returns true if the collection contains the passed Object as a key.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The key to look for in the collection.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the collection contains the Object as a key.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-containsKey","owner":"Ext.util.Collection","short_doc":"Returns true if the collection contains the passed Object as a key. ..."},{"tagname":"method","name":"count","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2758}],"doc":"<p>Determines the number of items in the collection.</p>\n","return":{"type":"Number","name":"return","doc":"<p>The number of items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","params":[],"id":"method-count","owner":"Ext.util.Collection","short_doc":"Determines the number of items in the collection. ..."},{"tagname":"method","name":"countByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2766}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-count\" rel=\"Ext.util.Collection-method-count\" class=\"docClass\">count</a>. The result is partitioned by group.</p>\n","return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-count\" rel=\"Ext.util.Collection-method-count\" class=\"docClass\">count</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","params":[],"id":"method-countByGroup","owner":"Ext.util.Collection","short_doc":"See count. ..."},{"tagname":"method","name":"createFiltered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1134}],"doc":"<p>Creates a new collection that is a filtered subset of this collection. The filter\npassed can be a function, a simple property name and value, an <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code>\ninstance, an array of <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code> instances.</p>\n\n<p>If the passed filter is a function the second argument is its \"scope\" (or \"this\"\npointer). The function should return <code>true</code> given each item in the collection if\nthat item should be included in the filtered collection.</p>\n\n<pre><code> var people = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>();\n\n people.add([\n     { id: 1, age: 25, name: 'Ed' },\n     { id: 2, age: 24, name: 'Tommy' },\n     { id: 3, age: 24, name: 'Arne' },\n     { id: 4, age: 26, name: 'Aaron' }\n ]);\n\n // Create a collection of people who are older than 24:\n var oldPeople = people.createFiltered(function (item) {\n     return item.age &gt; 24;\n });\n</code></pre>\n\n<p>If the passed filter is a <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code> instance or array of <code><a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a></code>\ninstances the filter(s) are used to produce the filtered collection and there are\nno further arguments.</p>\n\n<p>If the passed filter is a string it is understood as the name of the property by\nwhich to filter. The second argument is the \"value\" used to compare each item's\nproperty value. This comparison can be further tuned with the <code>anyMatch</code> and\n<code>caseSensitive</code> (optional) arguments.</p>\n\n<pre><code>// Create a new Collection containing only the items where age == 24\nvar middleAged = people.createFiltered('age', 24);\n</code></pre>\n\n<p>Alternatively you can apply <code>filters</code> to this Collection by calling <code>setFilters</code>\nor modifying the filter collection returned by <code>getFilters</code>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Filter[]/String/Function","name":"property","doc":"<p>A property on your objects, an\narray of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filter</a> objects or a filter function.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"value","doc":"<p>If <code>property</code> is a function, this argument is the \"scope\"\n(or \"this\" pointer) for the function. Otherwise this is either a <code>RegExp</code> to test\nproperty values or the value with which to compare.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"anyMatch","default":"false","optional":true,"doc":"<p>True to match any part of the string, not just\nthe beginning.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"caseSensitive","default":"false","optional":true,"doc":"<p>True for case sensitive comparison.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"exactMatch","default":"false","optional":true,"doc":"<p><code>true</code> to force exact match (^ and $ characters\nadded to the regex).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The new, filtered collection.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getRootProperty"],"id":"method-createFiltered","owner":"Ext.util.Collection","short_doc":"Creates a new collection that is a filtered subset of this collection. ..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ..."},{"tagname":"method","name":"createSortFn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3607}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3607,"params":[],"chainable":false,"fires":[],"method_calls":["getGrouper","getSorters"],"id":"method-createSortFn","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"decodeItems","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3118}],"doc":"<p>Returns the items array on which to operate. This is called to handle the two\npossible forms used by various methods that accept items:</p>\n\n<pre><code> collection.add(item1, item2, item3);\n collection.add([ item1, item2, item3 ]);\n</code></pre>\n\n<p>Things get interesting when other arguments are involved:</p>\n\n<pre><code> collection.insert(index, item1, item2, item3);\n collection.insert(index, [ item1, item2, item3 ]);\n</code></pre>\n\n<p>As well as below because we have to distinguish the one item from from the array:</p>\n\n<pre><code> collection.add(item);\n collection.insert(index, item);\n</code></pre>\n","params":[{"tagname":"params","type":"Arguments","name":"args","doc":"<p>The arguments object from the caller.</p>\n","html_type":"Arguments"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in <code>args</code> (the caller's arguments) of <code>items</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object[]","name":"return","doc":"<p>The array of items on which to operate.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getDecoder"],"id":"method-decodeItems","owner":"Ext.util.Collection","short_doc":"Returns the items array on which to operate. ..."},{"tagname":"method","name":"decodeRemoveItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3925}],"doc":"<p>This method is an alias for <code>decodeItems</code> but is called when items are being\nremoved. If a <code>decoder</code> is provided it may be necessary to also override this\nmethod to achieve symmetry between adding and removing items. This is the case\nfor <code><a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>' and</code><a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>' for example.</p>\n","protected":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-decodeRemoveItems","owner":"Ext.util.Collection","short_doc":"This method is an alias for decodeItems but is called when items are being\nremoved. ..."},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":687}],"doc":"<p>Destroys this collection. This is only necessary if this collection uses a <code>source</code>\ncollection as that relationship will keep a reference from the <code>source</code> to this\ncollection and potentially leak memory.</p>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","setSorters","setSource"],"id":"method-destroy","owner":"Ext.util.Collection","overrides":[{"name":"destroy","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>"}],"short_doc":"Destroys this collection. ..."},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-destroyMembers","owner":"Ext.Base","short_doc":"Destroys member properties by name. ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":857}],"doc":"<p>Continue to fire event.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBubbleParent"],"id":"method-doFireEvent","owner":"Ext.mixin.Observable","short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"each","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1261}],"doc":"<p>Executes the specified function once for every item in the collection. If the value\nreturned by <code>fn</code> is <code>false</code> the iteration stops. In all cases, the last value that\n<code>fn</code> returns is returned by this method.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The collection item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"len","doc":"<p>Total length of collection.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","default":"this","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function\nis executed. Defaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-each","owner":"Ext.util.Collection","short_doc":"Executes the specified function once for every item in the collection. ..."},{"tagname":"method","name":"eachKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1295}],"doc":"<p>Executes the specified function once for every key in the collection, passing each\nkey, and its associated item as the first two parameters. If the value returned by\n<code>fn</code> is <code>false</code> the iteration stops. In all cases, the last value that <code>fn</code> returns\nis returned by this method.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"String","name":"key","doc":"<p>The key of collection item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The collection item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"len","doc":"<p>Total length of collection.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","default":"this","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function\nis executed. Defaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey"],"id":"method-eachKey","owner":"Ext.util.Collection","short_doc":"Executes the specified function once for every key in the collection, passing each\nkey, and its associated item as th..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ..."},{"tagname":"method","name":"endUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1333}],"doc":"<p>This method is called after modifications are complete on a collection. For details\nsee <code>beginUpdate</code>.</p>\n","since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["notify"],"id":"method-endUpdate","owner":"Ext.util.Collection","short_doc":"This method is called after modifications are complete on a collection. ..."},{"tagname":"method","name":"extremes","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2775}],"doc":"<p>Finds the items with the minimum and maximum for the specified property over some\nor all of the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>An array <code>[minItem, maxItem]</code> with the items that have the minimum\nand maximum of the specified property.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"since":"5.0.0","id":"method-extremes","owner":"Ext.util.Collection","short_doc":"Finds the items with the minimum and maximum for the specified property over some\nor all of the items in this collect..."},{"tagname":"method","name":"extremesByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2789}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-extremes\" rel=\"Ext.util.Collection-method-extremes\" class=\"docClass\">extremes</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-extremes\" rel=\"Ext.util.Collection-method-extremes\" class=\"docClass\">extremes</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-extremesByGroup","owner":"Ext.util.Collection","short_doc":"See extremes. ..."},{"tagname":"method","name":"filterBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1245}],"doc":"<p>Filter by a function. Returns a <i>new</i> collection that has been filtered.\nThe passed function will be called with each object in the collection.\nIf the function returns true, the value is included otherwise it is filtered.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>The collection item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of collection item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in\nwhich the function is executed. Defaults to this Collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.util.Collection","name":"return","doc":"<p>The new filtered collection</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"deprecated":{"text":"<p>This method is deprecated.</p>\n","version":"5.0.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createFiltered"],"id":"method-filterBy","owner":"Ext.util.Collection","short_doc":"Filter by a function. ..."},{"tagname":"method","name":"find","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1344}],"doc":"<p>Finds the first matching object in this collection by a specific property/value.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of a property on your objects.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>A string that the property values\nshould start with or a RegExp to test against the property.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>The index to start searching at.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"startsWith","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to allow a match start anywhere in\nthe string. By default the <code>value</code> will match only at the start of the string.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"endsWith","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to allow the match to end before the\nend of the string. By default the <code>value</code> will match only at the end of the string.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"ignoreCase","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to make the <code>RegExp</code> case\nsensitive (removes the 'i' flag).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The first item in the collection which matches the criteria or\n<code>null</code> if none was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["findBy","getRootProperty"],"id":"method-find","owner":"Ext.util.Collection","short_doc":"Finds the first matching object in this collection by a specific property/value. ..."},{"tagname":"method","name":"findBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1376}],"doc":"<p>Returns the first item in the collection which elicits a true return value from the\npassed selection function.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The selection function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The collection item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of collection item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","default":"this","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function\nis executed. Defaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>The index at which to start searching.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The first item in the collection which returned true from the selection\nfunction, or null if none was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey"],"id":"method-findBy","owner":"Ext.util.Collection","short_doc":"Returns the first item in the collection which elicits a true return value from the\npassed selection function. ..."},{"tagname":"method","name":"findIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1408}],"doc":"<p>Finds the index of the first matching object in this collection by a specific\nproperty/value.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of a property on your objects.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String/RegExp","name":"value","doc":"<p>A string that the property values\nshould start with or a RegExp to test against the property.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>The index to start searching at.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"startsWith","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to allow a match start anywhere in\nthe string. By default the <code>value</code> will match only at the start of the string.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"endsWith","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to allow the match to end before the\nend of the string. By default the <code>value</code> will match only at the end of the string.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"ignoreCase","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to make the <code>RegExp</code> case\nsensitive (removes the 'i' flag).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1 if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["find","indexOf"],"id":"method-findIndex","owner":"Ext.util.Collection","short_doc":"Finds the index of the first matching object in this collection by a specific\nproperty/value. ..."},{"tagname":"method","name":"findIndexBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1431}],"doc":"<p>Find the index of the first matching object in this collection by a function.\nIf the function returns <code>true</code> it is considered a match.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to be called.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The collection item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of collection item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","default":"this","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the function\nis executed. Defaults to this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>The index at which to start searching.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The matched index or -1</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["findBy","indexOf"],"id":"method-findIndexBy","owner":"Ext.util.Collection","short_doc":"Find the index of the first matching object in this collection by a function. ..."},{"tagname":"method","name":"findInsertIndex","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2446}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2446,"params":[{"name":"item","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"defaultIndex","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getSource","indexOf"],"id":"method-findInsertIndex","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"findInsertionIndex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3581}],"doc":"<p>Can be called to find the insertion index of a passed object in this collection.\nOr can be passed an items array to search in, and may be passed a comparator</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"item","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"items","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"comparatorFn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"index","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getSortFn"],"id":"method-findInsertionIndex","owner":"Ext.util.Collection","short_doc":"Can be called to find the insertion index of a passed object in this collection. ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","optional":true,"doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"first","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1449}],"doc":"<p>Returns the first item in the collection.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p><code>true</code> to extract the first item in each group. Only applies if\na <a href=\"#!/api/Ext.util.Collection-cfg-grouper\" rel=\"Ext.util.Collection-cfg-grouper\" class=\"docClass\">grouper</a> is active in the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The first item in the collection. If the grouped parameter is passed,\nsee <a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a> for information on the return type.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["aggregateGroups","getGroups"],"id":"method-first","owner":"Ext.util.Collection","short_doc":"Returns the first item in the collection. ..."},{"tagname":"method","name":"get","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1477}],"doc":"<p>Returns the item associated with the passed key.</p>\n","params":[{"tagname":"params","type":"String/Number","name":"key","doc":"<p>The key of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The item associated with the passed key.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-get","owner":"Ext.util.Collection","short_doc":"Returns the item associated with the passed key. ..."},{"tagname":"method","name":"getAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1487}],"doc":"<p>Returns the item at the specified index.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The item at the specified index.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getAt","owner":"Ext.util.Collection","short_doc":"Returns the item at the specified index. ..."},{"tagname":"method","name":"getAutoFilter","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoFilter\" rel=\"Ext.util.Collection-cfg-autoFilter\" class=\"docClass\">autoFilter</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getAutoFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":78}],"static":null,"private":null,"inheritable":null,"linenr":78,"owner":"Ext.util.Collection","short_doc":"Returns the value of autoFilter. ..."},{"tagname":"method","name":"getAutoGroup","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoGroup\" rel=\"Ext.util.Collection-cfg-autoGroup\" class=\"docClass\">autoGroup</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getAutoGroup","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":92}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of autoGroup. ..."},{"tagname":"method","name":"getAutoSort","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoSort\" rel=\"Ext.util.Collection-cfg-autoSort\" class=\"docClass\">autoSort</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getAutoSort","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":80}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of autoSort. ..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getByKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1497}],"doc":"<p>Returns the item associated with the passed key.</p>\n","params":[{"tagname":"params","type":"String/Number","name":"key","doc":"<p>The key of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The item associated with the passed key.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getByKey","owner":"Ext.util.Collection","short_doc":"Returns the item associated with the passed key. ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"ifInitialized","default":"false","optional":true,"doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1507}],"doc":"<p>Returns the number of items in the collection.</p>\n","return":{"type":"Number","name":"return","doc":"<p>the number of items in the collection.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCount","owner":"Ext.util.Collection","short_doc":"Returns the number of items in the collection. ..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getDecoder","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-decoder\" rel=\"Ext.util.Collection-cfg-decoder\" class=\"docClass\">decoder</a>.</p>\n","params":[],"return":{"type":"Function","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"id":"method-getDecoder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":98}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of decoder. ..."},{"tagname":"method","name":"getDefaultSortDirection","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-defaultSortDirection\" rel=\"Ext.util.Collection-cfg-defaultSortDirection\" class=\"docClass\">defaultSortDirection</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getDefaultSortDirection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":281}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of defaultSortDirection. ..."},{"tagname":"method","name":"getExtraKeys","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-extraKeys\" rel=\"Ext.util.Collection-cfg-extraKeys\" class=\"docClass\">extraKeys</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getExtraKeys","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":105}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of extraKeys. ..."},{"tagname":"method","name":"getFilterFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3261}],"doc":"<p>Returns the filter function.</p>\n","return":{"type":"Function","name":"return","doc":"<p>sortFn The sort function.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-getFilterFn","owner":"Ext.util.Collection","short_doc":"Returns the filter function. ..."},{"tagname":"method","name":"getFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3269}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a></code>. Unless <code>autoCreate</code> is explicitly passed\nas <code>false</code> this collection will be automatically created if it does not yet exist.</p>\n","params":[{"tagname":"params","name":"autoCreate","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to disable auto-creation of the collection.</p>\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.util.FilterCollection","name":"return","doc":"<p>The collection of filters.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getId","setFilters"],"id":"method-getFilters","owner":"Ext.util.Collection","short_doc":"Returns the Ext.util.FilterCollection. ..."},{"tagname":"method","name":"getGroupConfig","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-groupConfig\" rel=\"Ext.util.Collection-cfg-groupConfig\" class=\"docClass\">groupConfig</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getGroupConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":217}],"properties":null,"private":true,"since":"6.5.0","static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of groupConfig. ..."},{"tagname":"method","name":"getGroupKey","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Group-cfg-groupKey\" rel=\"Ext.util.Group-cfg-groupKey\" class=\"docClass\">groupKey</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getGroupKey","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":10}],"static":null,"private":null,"inheritable":null,"linenr":10,"owner":"Ext.util.Group","short_doc":"Returns the value of groupKey. ..."},{"tagname":"method","name":"getGrouper","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-grouper\" rel=\"Ext.util.Collection-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getGrouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":193}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of grouper. ..."},{"tagname":"method","name":"getGroups","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3870}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3870,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-getGroups","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"getIndices","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3180}],"doc":"<p>Returns the map of key to index for all items in this collection. This method will\nlazily populate this map on request. This map is maintained when doing so does not\ninvolve too much overhead. When this threshold is cross, the index map is discarded\nand must be rebuilt by calling this method.</p>\n","return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getKey"],"id":"method-getIndices","owner":"Ext.util.Collection","short_doc":"Returns the map of key to index for all items in this collection. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ..."},{"tagname":"method","name":"getKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1516}],"doc":"<p>A function which will be called, passing an object belonging to this collection.\nThe function should return the key by which that object will be indexed. This key\nmust be unique to this item as only one item with this key will be retained.</p>\n\n<p>The default implementation looks basically like this (give or take special case\nhandling of 0):</p>\n\n<pre><code> function getKey (item) {\n     return item.id || item._id || item.getId();\n }\n</code></pre>\n\n<p>You can provide your own implementation by passing the <code>keyFn</code> config.</p>\n\n<p>For example, to hold items that have a unique \"name\" property:</p>\n\n<pre><code>var elementCollection = new <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>({\n    keyFn: function (item) {\n        return item.name;\n    }\n});\n</code></pre>\n\n<p>The collection can have <code>extraKeys</code> if items need to be quickly looked up by other\n(potentially non-unique) properties.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The key for the passed item.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getKey","owner":"Ext.util.Collection","short_doc":"A function which will be called, passing an object belonging to this collection. ..."},{"tagname":"method","name":"getMultiSortLimit","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-multiSortLimit\" rel=\"Ext.util.Collection-cfg-multiSortLimit\" class=\"docClass\">multiSortLimit</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"id":"method-getMultiSortLimit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":268}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of multiSortLimit. ..."},{"tagname":"method","name":"getRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1551}],"doc":"<p>Returns a range of items in this collection</p>\n","params":[{"tagname":"params","type":"Number","name":"begin","default":"0","optional":true,"doc":"<p>The index of the first item to get.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The ending index. The item at this index is <em>not</em> included.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>An array of items</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getRange","owner":"Ext.util.Collection","short_doc":"Returns a range of items in this collection ..."},{"tagname":"method","name":"getRootProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-rootProperty\" rel=\"Ext.util.Collection-cfg-rootProperty\" class=\"docClass\">rootProperty</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getRootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":227}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of rootProperty. ..."},{"tagname":"method","name":"getSortFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3418}],"doc":"<p>Returns an up to date sort function.</p>\n","return":{"type":"Function","name":"return","doc":"<p>The sort function.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["createSortFn"],"id":"method-getSortFn","owner":"Ext.util.Collection","short_doc":"Returns an up to date sort function. ..."},{"tagname":"method","name":"getSorters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3426}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a></code>. Unless <code>autoCreate</code> is explicitly passed\nas <code>false</code> this collection will be automatically created if it does not yet exist.</p>\n","params":[{"tagname":"params","name":"autoCreate","default":"true","optional":true,"doc":"<p>Pass <code>false</code> to disable auto-creation of the collection.</p>\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.util.SorterCollection","name":"return","doc":"<p>The collection of sorters.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getId","setSorters"],"id":"method-getSorters","owner":"Ext.util.Collection","short_doc":"Returns the Ext.util.SorterCollection. ..."},{"tagname":"method","name":"getSource","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1581}],"doc":"<p>Returns all unfiltered items in the Collection when the Collection has been\nfiltered.  Returns <code>null</code> when the Collection is not filtered.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>items All unfiltered items (or <code>null</code> when the\nCollection is not filtered)</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"params":[],"id":"method-getSource","owner":"Ext.util.Collection","short_doc":"Returns all unfiltered items in the Collection when the Collection has been\nfiltered. ..."},{"tagname":"method","name":"getTrackGroups","doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Collection-cfg-trackGroups\" rel=\"Ext.util.Collection-cfg-trackGroups\" class=\"docClass\">trackGroups</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getTrackGroups","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":296}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Returns the value of trackGroups. ..."},{"tagname":"method","name":"getValues","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1589}],"doc":"<p>Returns an array of values for the specified (sub) property.</p>\n\n<p>For example, to get an array of \"name\" properties from a collection of records (of\n<code><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></code> objects):</p>\n\n<pre><code> var names = collection.getValues('name', 'data');\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The property to collect on</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"root","optional":true,"doc":"<p>'root' property to extract the first argument from. This is\nused mainly when operating on fields in records, where the fields are all stored\ninside the 'data' object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>The index of the first item to include.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop getting values. The value of this\nitem is <em>not</em> included.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object[]","name":"return","doc":"<p>The array of values.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getValues","owner":"Ext.util.Collection","short_doc":"Returns an array of values for the specified (sub) property. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ..."},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1622}],"doc":"<p>Returns index within the collection of the passed Object.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to find.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the item or -1 if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey","indexOfKey"],"id":"method-indexOf","owner":"Ext.util.Collection","short_doc":"Returns index within the collection of the passed Object. ..."},{"tagname":"method","name":"indexOfKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1640}],"doc":"<p>Returns index within the collection of the passed key.</p>\n","params":[{"tagname":"params","type":"Object","name":"key","doc":"<p>The key to find.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index of the item or -1 if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getIndices"],"id":"method-indexOfKey","owner":"Ext.util.Collection","short_doc":"Returns index within the collection of the passed key. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"insert","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1661}],"doc":"<p>Inserts one or more items to the collection. The <code>index</code> value is the position at\nwhich the first item will be placed. The items starting at that position will be\nshifted to make room.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which to insert the item(s).</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object/Object[]","name":"item","doc":"<p>The item or items to add.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Object/Object[]","name":"return","doc":"<p>The item or items added.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["decodeItems","splice"],"id":"method-insert","owner":"Ext.util.Collection","short_doc":"Inserts one or more items to the collection. ..."},{"tagname":"method","name":"isItemFiltered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3290}],"doc":"<p>This method can be used to conveniently test whether an individual item would be\nremoved due to the current filter.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to test.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>The value <code>true</code> if the item would be \"removed\" from the\ncollection due to filters or <code>false</code> otherwise.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFilters"],"id":"method-isItemFiltered","owner":"Ext.util.Collection","short_doc":"This method can be used to conveniently test whether an individual item would be\nremoved due to the current filter. ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"itemChanged","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1684}],"doc":"<p>This method should be called when an item in this collection has been modified. If\nthe collection is sorted or filtered the result of modifying an item needs to be\nreflected in the collection. If the item's key is also being modified, it is best\nto pass the <code>oldKey</code> to this same call rather than call <code>updateKey</code> separately.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item that was modified.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String[]","name":"modified","optional":true,"doc":"<p>The names of the modified properties of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String/Number","name":"oldKey","optional":true,"doc":"<p>Passed if the item's key was also modified.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"meta","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["beginUpdate","endUpdate","getAutoFilter","getAutoSort","getKey","getSortFn","getSource","indexOfKey","isItemFiltered","notify","splice","updateKey"],"id":"method-itemChanged","owner":"Ext.util.Collection","short_doc":"This method should be called when an item in this collection has been modified. ..."},{"tagname":"method","name":"last","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1463}],"doc":"<p>Returns the last item in the collection.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"grouped","optional":true,"doc":"<p><code>true</code> to extract the first item in each group. Only applies if\na <a href=\"#!/api/Ext.util.Collection-cfg-grouper\" rel=\"Ext.util.Collection-cfg-grouper\" class=\"docClass\">grouper</a> is active in the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The last item in the collection. If the grouped parameter is passed,\nsee <a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a> for information on the return type.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["aggregateGroups","getGroups"],"id":"method-last","owner":"Ext.util.Collection","short_doc":"Returns the last item in the collection. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"max","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2799}],"doc":"<p>Determines the maximum value for the specified property over some or all of the\nitems in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the maximum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included in the maximum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The maximum of the specified property from the indicated items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-max","owner":"Ext.util.Collection","short_doc":"Determines the maximum value for the specified property over some or all of the\nitems in this collection. ..."},{"tagname":"method","name":"maxByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2812}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-max\" rel=\"Ext.util.Collection-method-max\" class=\"docClass\">max</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-max\" rel=\"Ext.util.Collection-method-max\" class=\"docClass\">max</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-maxByGroup","owner":"Ext.util.Collection","short_doc":"See max. ..."},{"tagname":"method","name":"maxItem","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2822}],"doc":"<p>Finds the item with the maximum value for the specified property over some or all\nof the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the maximum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included in the maximum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The item with the maximum of the specified property from the\nindicated items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-maxItem","owner":"Ext.util.Collection","short_doc":"Finds the item with the maximum value for the specified property over some or all\nof the items in this collection. ..."},{"tagname":"method","name":"maxItemByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2836}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-maxItem\" rel=\"Ext.util.Collection-method-maxItem\" class=\"docClass\">maxItem</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-maxItem\" rel=\"Ext.util.Collection-method-maxItem\" class=\"docClass\">maxItem</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-maxItemByGroup","owner":"Ext.util.Collection","short_doc":"See maxItem. ..."},{"tagname":"method","name":"min","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2846}],"doc":"<p>Determines the minimum value for the specified property over some or all of the\nitems in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the minimum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included in the minimum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The minimum of the specified property from the indicated items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-min","owner":"Ext.util.Collection","short_doc":"Determines the minimum value for the specified property over some or all of the\nitems in this collection. ..."},{"tagname":"method","name":"minByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2859}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-min\" rel=\"Ext.util.Collection-method-min\" class=\"docClass\">min</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-min\" rel=\"Ext.util.Collection-method-min\" class=\"docClass\">min</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-minByGroup","owner":"Ext.util.Collection","short_doc":"See min. ..."},{"tagname":"method","name":"minItem","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2869}],"doc":"<p>Finds the item with the minimum value for the specified property over some or all\nof the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the minimum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop in <code>items</code>. The item at this index\nwill <em>not</em> be included in the minimum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The item with the minimum of the specified property from the\nindicated items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-minItem","owner":"Ext.util.Collection","short_doc":"Finds the item with the minimum value for the specified property over some or all\nof the items in this collection. ..."},{"tagname":"method","name":"minItemByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2883}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-minItem\" rel=\"Ext.util.Collection-method-minItem\" class=\"docClass\">minItem</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-minItem\" rel=\"Ext.util.Collection-method-minItem\" class=\"docClass\">minItem</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-minItemByGroup","owner":"Ext.util.Collection","short_doc":"See minItem. ..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"notify","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3210}],"doc":"<p>This method wraps all fired events and gives observers first view of the change.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>The event arguments. This collection instance is inserted at\nthe front of this array if there is any receiver for the notification.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-notify","owner":"Ext.util.Collection","short_doc":"This method wraps all fired events and gives observers first view of the change. ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"capture","optional":true,"doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"throws":null,"properties":null,"type":null,"short_doc":"The on method is shorthand for\naddListener. ..."},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-onAfter","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-onBefore","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"onCollectionAdd","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2470}],"doc":"<p>This method is called when items are added to the <code>source</code> collection. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> event but is called before the <code>add</code>\nevent is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>The <code>details</code> of the <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> event.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["findInsertIndex","getAutoFilter","indexOf","isItemFiltered","notify","splice","transformItems"],"id":"method-onCollectionAdd","owner":"Ext.util.Collection","short_doc":"This method is called when items are added to the source collection. ..."},{"tagname":"method","name":"onCollectionBeforeItemChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2548}],"doc":"<p>This method is called when an item is modified in the <code>source</code> collection. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-beforeitemchange\" rel=\"Ext.util.Collection-event-beforeitemchange\" class=\"docClass\">beforeitemchange</a></code> event but is\ncalled before the <code>beforeitemchange</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>The <code>details</code> of the\n<code><a href=\"#!/api/Ext.util.Collection-event-beforeitemchange\" rel=\"Ext.util.Collection-event-beforeitemchange\" class=\"docClass\">beforeitemchange</a></code> event.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["notify"],"id":"method-onCollectionBeforeItemChange","owner":"Ext.util.Collection","short_doc":"This method is called when an item is modified in the source collection. ..."},{"tagname":"method","name":"onCollectionBeginUpdate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2571}],"doc":"<p>This method is called when the <code>source</code> collection starts updating. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> event but is called\nbefore the <code>beginupdate</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["beginUpdate"],"id":"method-onCollectionBeginUpdate","owner":"Ext.util.Collection","short_doc":"This method is called when the source collection starts updating. ..."},{"tagname":"method","name":"onCollectionEndUpdate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2583}],"doc":"<p>This method is called when the <code>source</code> collection finishes updating. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code> event but is called before\nthe <code>endupdate</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["endUpdate"],"id":"method-onCollectionEndUpdate","owner":"Ext.util.Collection","short_doc":"This method is called when the source collection finishes updating. ..."},{"tagname":"method","name":"onCollectionFilteredItemChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2612}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2612,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onCollectionFilteredItemChange","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"onCollectionItemChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2595}],"doc":"<p>This method is called when an item is modified in the <code>source</code> collection. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-itemchange\" rel=\"Ext.util.Collection-event-itemchange\" class=\"docClass\">itemchange</a></code> event but is called before\nthe <code>itemchange</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>The <code>details</code> of the <code><a href=\"#!/api/Ext.util.Collection-event-itemchange\" rel=\"Ext.util.Collection-event-itemchange\" class=\"docClass\">itemchange</a></code>\nevent.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["itemChanged"],"id":"method-onCollectionItemChange","owner":"Ext.util.Collection","short_doc":"This method is called when an item is modified in the source collection. ..."},{"tagname":"method","name":"onCollectionRefresh","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2617}],"doc":"<p>This method is called when the <code>source</code> collection refreshes. This is equivalent to\nthe <code><a href=\"#!/api/Ext.util.Collection-event-refresh\" rel=\"Ext.util.Collection-event-refresh\" class=\"docClass\">refresh</a></code> event but is called before the <code>refresh</code> event\nis fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getAutoFilter","getFilterFn","getKey","notify","sortData","transformItems"],"id":"method-onCollectionRefresh","owner":"Ext.util.Collection","short_doc":"This method is called when the source collection refreshes. ..."},{"tagname":"method","name":"onCollectionRemove","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2670}],"doc":"<p>This method is called when items are removed from the <code>source</code> collection. This is\nequivalent to the <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> event but is called before the\n<code>remove</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>The <code>details</code> of the <code>remove</code> event.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["splice"],"id":"method-onCollectionRemove","owner":"Ext.util.Collection","short_doc":"This method is called when items are removed from the source collection. ..."},{"tagname":"method","name":"onCollectionSort","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2683}],"doc":"<p>This method is called when the <code>source</code> collection is sorted. This is equivalent to\nthe <code><a href=\"#!/api/Ext.util.Collection-event-sort\" rel=\"Ext.util.Collection-event-sort\" class=\"docClass\">sort</a></code> event but is called before the <code>sort</code> event is fired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","id":"method-onCollectionSort","owner":"Ext.util.Collection","short_doc":"This method is called when the source collection is sorted. ..."},{"tagname":"method","name":"onCollectionUpdateKey","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2695}],"doc":"<p>This method is called when key changes in the <code>source</code> collection. This is\nequivalent to the <code>updatekey</code> event but is called before the <code>updatekey</code> event is\nfired.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"source","doc":"<p>The source collection.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>The <code>details</code> of the <code>updatekey</code> event.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["updateKey"],"id":"method-onCollectionUpdateKey","owner":"Ext.util.Collection","short_doc":"This method is called when key changes in the source collection. ..."},{"tagname":"method","name":"onEndUpdateFilters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3407}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3407,"params":[{"name":"filters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onFilterChange"],"id":"method-onEndUpdateFilters","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"onEndUpdateSorters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3705}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3705,"params":[{"name":"sorters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getAutoGroup","onSortChange"],"id":"method-onEndUpdateSorters","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"onFilterChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3301}],"doc":"<p>Called after a change of the filter is complete.</p>\n\n<p>For example:</p>\n\n<pre><code> onFilterChange: function (filters) {\n     if (this.filtered) {\n         // process filters\n     } else {\n         // no filters present\n     }\n }\n</code></pre>\n","template":true,"params":[{"tagname":"params","type":"Ext.util.FilterCollection","name":"filters","doc":"<p>The filters collection.</p>\n","html_type":"<a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getExtraKeys","getRootProperty","getSource","notify","onCollectionRefresh","setSource"],"id":"method-onFilterChange","owner":"Ext.util.Collection","short_doc":"Called after a change of the filter is complete. ..."},{"tagname":"method","name":"onSortChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3447}],"doc":"<p>Called after a change of the sort is complete.</p>\n\n<p>For example:</p>\n\n<pre><code> onSortChange: function (sorters) {\n     if (this.sorted) {\n         // process sorters\n     } else {\n         // no sorters present\n     }\n }\n</code></pre>\n","template":true,"params":[{"tagname":"params","type":"Ext.util.SorterCollection","name":"sorters","doc":"<p>The sorters collection.</p>\n","html_type":"<a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["sortItems"],"id":"method-onSortChange","owner":"Ext.util.Collection","short_doc":"Called after a change of the sort is complete. ..."},{"tagname":"method","name":"onSorterChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3701}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3701,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onSorterChange","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"prioritySortFn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3068}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3068,"params":[{"name":"o1","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"o2","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-prioritySortFn","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ..."},{"tagname":"method","name":"remove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1879}],"doc":"<p>Remove an item from the collection.</p>\n","params":[{"tagname":"params","type":"Object/Object[]","name":"item","doc":"<p>The item or items to remove.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Number","name":"return","doc":"<p>The number of items removed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["decodeRemoveItems","splice"],"id":"method-remove","owner":"Ext.util.Collection","short_doc":"Remove an item from the collection. ..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Alias for unAfter. ..."},{"tagname":"method","name":"removeAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1895}],"doc":"<p>Remove all items in the collection.</p>\n","return":{"type":"Ext.util.Collection","name":"return","doc":"<p>This object.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["splice"],"id":"method-removeAll","owner":"Ext.util.Collection","short_doc":"Remove all items in the collection. ..."},{"tagname":"method","name":"removeAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1911}],"doc":"<p>Remove an item from a specified index in the collection.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index within the collection of the item to remove.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"count","default":"1","optional":true,"doc":"<p>The number of items to remove.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object/Number","name":"return","doc":"<p>If <code>count</code> was 1 and the item was removed, that item is\nreturned. Otherwise the number of items removed is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getAt","splice"],"id":"method-removeAt","owner":"Ext.util.Collection","short_doc":"Remove an item from a specified index in the collection. ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Alias for unBefore. ..."},{"tagname":"method","name":"removeByKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1937}],"doc":"<p>Removes the item associated with the passed key from the collection.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the item to remove.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>Only returned if removing at a specified key. The item removed or\n<code>false</code> if no item was removed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getByKey","remove"],"id":"method-removeByKey","owner":"Ext.util.Collection","short_doc":"Removes the item associated with the passed key from the collection. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"removeObserver","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3718}],"doc":"<p>Removes an observing object to this collection. See <code>addObserver</code> for details.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"observer","doc":"<p>The observer instance.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeObserver","owner":"Ext.util.Collection","short_doc":"Removes an observing object to this collection. ..."},{"tagname":"method","name":"replace","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1954}],"doc":"<p>Replace an old entry with a new entry of the same key if the entry existed.</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to insert.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>inserted The item inserted.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["add","indexOf","insert"],"id":"method-replace","owner":"Ext.util.Collection","short_doc":"Replace an old entry with a new entry of the same key if the entry existed. ..."},{"tagname":"method","name":"replaceAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":766}],"doc":"<p>Adds an item to the collection while removing any existing items.\nSimilar to <a href=\"#!/api/Ext.util.Collection-method-add\" rel=\"Ext.util.Collection-method-add\" class=\"docClass\">add</a>.</p>\n","params":[{"tagname":"params","type":"Object/Object[]","name":"item","doc":"<p>The item or items to add.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Object/Object[]","name":"return","doc":"<p>The item or items added.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["decodeItems","removeAll","splice"],"id":"method-replaceAll","owner":"Ext.util.Collection","short_doc":"Adds an item to the collection while removing any existing items. ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":667}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","default":"this","optional":true,"doc":"<p>The default scope to return if none is found.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"setAutoFilter","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoFilter\" rel=\"Ext.util.Collection-cfg-autoFilter\" class=\"docClass\">autoFilter</a>.</p>\n","params":[{"type":"Boolean","name":"autoFilter","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setAutoFilter","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":78}],"static":null,"private":null,"inheritable":null,"linenr":78,"owner":"Ext.util.Collection","short_doc":"Sets the value of autoFilter. ..."},{"tagname":"method","name":"setAutoGroup","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoGroup\" rel=\"Ext.util.Collection-cfg-autoGroup\" class=\"docClass\">autoGroup</a>.</p>\n","params":[{"type":"Boolean","name":"autoGroup","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setAutoGroup","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":92}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of autoGroup. ..."},{"tagname":"method","name":"setAutoSort","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-autoSort\" rel=\"Ext.util.Collection-cfg-autoSort\" class=\"docClass\">autoSort</a>.</p>\n","params":[{"type":"Boolean","name":"autoSort","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setAutoSort","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":80}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of autoSort. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setDecoder","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-decoder\" rel=\"Ext.util.Collection-cfg-decoder\" class=\"docClass\">decoder</a>.</p>\n","params":[{"type":"Function","name":"decoder","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"id":"method-setDecoder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":98}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of decoder. ..."},{"tagname":"method","name":"setDefaultSortDirection","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-defaultSortDirection\" rel=\"Ext.util.Collection-cfg-defaultSortDirection\" class=\"docClass\">defaultSortDirection</a>.</p>\n","params":[{"type":"String","name":"defaultSortDirection","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setDefaultSortDirection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":281}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of defaultSortDirection. ..."},{"tagname":"method","name":"setExtraKeys","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-extraKeys\" rel=\"Ext.util.Collection-cfg-extraKeys\" class=\"docClass\">extraKeys</a>.</p>\n","params":[{"type":"Object","name":"extraKeys","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setExtraKeys","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":105}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of extraKeys. ..."},{"tagname":"method","name":"setFilters","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-filters\" rel=\"Ext.util.Collection-cfg-filters\" class=\"docClass\">filters</a>.</p>\n","params":[{"type":"Array/Ext.util.FilterCollection","name":"filters","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.util.FilterCollection\" rel=\"Ext.util.FilterCollection\" class=\"docClass\">Ext.util.FilterCollection</a>"}],"id":"method-setFilters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":160}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of filters. ..."},{"tagname":"method","name":"setGroupConfig","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-groupConfig\" rel=\"Ext.util.Collection-cfg-groupConfig\" class=\"docClass\">groupConfig</a>.</p>\n","params":[{"type":"Object","name":"groupConfig","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setGroupConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":217}],"properties":null,"private":true,"since":"6.5.0","static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of groupConfig. ..."},{"tagname":"method","name":"setGroupKey","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Group-cfg-groupKey\" rel=\"Ext.util.Group-cfg-groupKey\" class=\"docClass\">groupKey</a>.</p>\n","params":[{"type":"Object","name":"groupKey","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setGroupKey","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Group.js","linenr":10}],"static":null,"private":null,"inheritable":null,"linenr":10,"owner":"Ext.util.Group","short_doc":"Sets the value of groupKey. ..."},{"tagname":"method","name":"setGrouper","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-grouper\" rel=\"Ext.util.Collection-cfg-grouper\" class=\"docClass\">grouper</a>.</p>\n","params":[{"type":"Object","name":"grouper","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setGrouper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":193}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of grouper. ..."},{"tagname":"method","name":"setGroups","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-groups\" rel=\"Ext.util.Collection-cfg-groups\" class=\"docClass\">groups</a>.</p>\n","params":[{"type":"Ext.util.GroupCollection","name":"groups","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.util.GroupCollection\" rel=\"Ext.util.GroupCollection\" class=\"docClass\">Ext.util.GroupCollection</a>"}],"id":"method-setGroups","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":209}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of groups. ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setMultiSortLimit","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-multiSortLimit\" rel=\"Ext.util.Collection-cfg-multiSortLimit\" class=\"docClass\">multiSortLimit</a>.</p>\n","params":[{"type":"Number","name":"multiSortLimit","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"id":"method-setMultiSortLimit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":268}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of multiSortLimit. ..."},{"tagname":"method","name":"setRootProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-rootProperty\" rel=\"Ext.util.Collection-cfg-rootProperty\" class=\"docClass\">rootProperty</a>.</p>\n","params":[{"type":"String","name":"rootProperty","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setRootProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":227}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of rootProperty. ..."},{"tagname":"method","name":"setSorters","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-sorters\" rel=\"Ext.util.Collection-cfg-sorters\" class=\"docClass\">sorters</a>.</p>\n","params":[{"type":"Array/Ext.util.SorterCollection","name":"sorters","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.util.SorterCollection\" rel=\"Ext.util.SorterCollection\" class=\"docClass\">Ext.util.SorterCollection</a>"}],"id":"method-setSorters","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":236}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of sorters. ..."},{"tagname":"method","name":"setSource","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-source\" rel=\"Ext.util.Collection-cfg-source\" class=\"docClass\">source</a>.</p>\n","params":[{"type":"Ext.util.Collection","name":"source","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"id":"method-setSource","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":287}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of source. ..."},{"tagname":"method","name":"setTrackGroups","doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Collection-cfg-trackGroups\" rel=\"Ext.util.Collection-cfg-trackGroups\" class=\"docClass\">trackGroups</a>.</p>\n","params":[{"type":"Boolean","name":"trackGroups","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setTrackGroups","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":296}],"properties":null,"private":true,"static":null,"inheritable":null,"linenr":null,"owner":"Ext.util.Collection","short_doc":"Sets the value of trackGroups. ..."},{"tagname":"method","name":"sort","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3470}],"doc":"<p>Updates the sorters collection and triggers sorting of this Sortable.</p>\n\n<p>For example:</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([{\n    property : 'age',\n    direction: 'ASC'\n}, {\n    property : 'name',\n    direction: 'DESC'\n}]);\n</code></pre>\n\n<p>When passing a single string argument to sort, the <code>direction</code> is maintained for\neach field and is toggled automatically. So this code:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>Is equivalent to the following:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n","params":[{"tagname":"params","type":"String/Function/Ext.util.Sorter[]","name":"property","optional":true,"doc":"<p>Either the name of a property\n(such as a field of a <code><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></code> in a <code>Store</code>), an array of configurations\nfor <code><a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a></code> instances or just a comparison function.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"tagname":"params","type":"String","name":"direction","optional":true,"doc":"<p>The direction by which to sort the data. This parameter\nis only valid when <code>property</code> is a String, otherwise the second parameter is the\n<code>mode</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"mode","default":"\"replace\"","optional":true,"doc":"<p>Where to put new sorters in the collection. This\nshould be one the following values:</p>\n\n<ul>\n<li><p><strong><code>replace</code></strong> : The new sorter(s) become the sole sorter set for this Sortable.\nThis is the most useful call mode to programmatically sort by multiple fields.</p></li>\n<li><p><strong><code>prepend</code></strong> : The new sorters are inserted as the primary sorters. The sorter\ncollection length must be controlled by the developer.</p></li>\n<li><p><strong><code>multi</code></strong> : Similar to <strong><code>prepend</code></strong> the new sorters are inserted at the front\nof the collection of sorters. Following the insertion, however, this mode trims\nthe sorter collection to enforce the <code>multiSortLimit</code> config. This is useful for\nimplementing intuitive \"Sort by this\" user interfaces.</p></li>\n<li><p><strong><code>append</code></strong> : The new sorters are added at the end of the collection.</p></li>\n</ul>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.util.Collection","name":"return","doc":"<p>This instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":[],"method_calls":["getSorters"],"id":"method-sort","owner":"Ext.util.Collection","short_doc":"Updates the sorters collection and triggers sorting of this Sortable. ..."},{"tagname":"method","name":"sortBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3572}],"doc":"<p>Sorts the collection by a single sorter function</p>\n","params":[{"tagname":"params","type":"Function","name":"sortFn","doc":"<p>The function to sort by</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"deprecated":{"text":"<p>This method is deprecated.</p>\n","version":"6.5.0"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["sortItems"],"id":"method-sortBy","owner":"Ext.util.Collection","short_doc":"Sorts the collection by a single sorter function ..."},{"tagname":"method","name":"sortData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3529}],"doc":"<p>This method will sort an array based on the currently configured <a href=\"#!/api/Ext.util.Collection-cfg-sorters\" rel=\"Ext.util.Collection-cfg-sorters\" class=\"docClass\">sorters</a>.</p>\n","params":[{"tagname":"params","type":"Array","name":"data","doc":"<p>The array you want to have sorted.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The array you passed after it is sorted.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSortFn"],"id":"method-sortData","owner":"Ext.util.Collection","short_doc":"This method will sort an array based on the currently configured sorters. ..."},{"tagname":"method","name":"sortItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3540}],"doc":"<p>Sorts the items of the collection using the supplied function. This should only be\ncalled for collections that have no <code>sorters</code> defined.</p>\n","params":[{"tagname":"params","type":"Function","name":"sortFn","doc":"<p>The function by which to sort the items.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSortFn","getSorters","notify"],"id":"method-sortItems","owner":"Ext.util.Collection","short_doc":"Sorts the items of the collection using the supplied function. ..."},{"tagname":"method","name":"splice","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":1971}],"doc":"<p>This method is basically the same as the JavaScript Array splice method.</p>\n\n<p>Negative indexes are interpreted starting at the end of the collection. That is,\na value of -1 indicates the last item, or equivalent to <code>length - 1</code>.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which to add or remove items.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number/Object[]","name":"toRemove","doc":"<p>The number of items to remove or an array of the\nitems to remove.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"params","type":"Object[]","name":"toAdd","optional":true,"doc":"<p>The items to insert at the given <code>index</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["beginUpdate","decodeItems","decodeRemoveItems","endUpdate","getAutoSort","getIndices","getKey","getSortFn","getSorters","getSource","notify","sortData","spliceMerge"],"id":"method-splice","owner":"Ext.util.Collection","short_doc":"This method is basically the same as the JavaScript Array splice method. ..."},{"tagname":"method","name":"spliceMerge","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3733}],"doc":"<p>This method is what you might find in the core of a merge sort. We have an items\narray that is sorted so we sort the newItems and merge the two sorted arrays. In\nthe general case, newItems will be no larger than all items so sorting it will be\nfaster than simply concatenating the arrays and calling sort on it.</p>\n\n<p>We take advantage of the nature of this process to generate add events as ranges.</p>\n","params":[{"tagname":"params","type":"Object[]","name":"newItems","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"params","type":"Object[]","name":"newKeys","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSortFn","notify"],"id":"method-spliceMerge","owner":"Ext.util.Collection","short_doc":"This method is what you might find in the core of a merge sort. ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"sum","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2893}],"doc":"<p>Sums property values from some or all of the items in this collection.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to sum from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Number","name":"begin","optional":true,"doc":"<p>The index of the first item to include in the sum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","optional":true,"doc":"<p>The index at which to stop summing <code>items</code>. The item at this\nindex will <em>not</em> be included in the sum.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of summing the specified property from the indicated\nitems.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-sum","owner":"Ext.util.Collection","short_doc":"Sums property values from some or all of the items in this collection. ..."},{"tagname":"method","name":"sumByGroup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2906}],"doc":"<p>See <a href=\"#!/api/Ext.util.Collection-method-sum\" rel=\"Ext.util.Collection-method-sum\" class=\"docClass\">sum</a>. The result is partitioned by group.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to sum from each item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The result of <a href=\"#!/api/Ext.util.Collection-method-sum\" rel=\"Ext.util.Collection-method-sum\" class=\"docClass\">sum</a>, partitioned by group. See\n<a href=\"#!/api/Ext.util.Collection-method-aggregateByGroup\" rel=\"Ext.util.Collection-method-aggregateByGroup\" class=\"docClass\">aggregateByGroup</a>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","id":"method-sumByGroup","owner":"Ext.util.Collection","short_doc":"See sum. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-unAfter","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-unBefore","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"update","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2330}],"doc":"<p>This method calls the supplied function <code>fn</code> between <code>beginUpdate</code> and <code>endUpdate</code>\ncalls.</p>\n\n<pre><code> collection.update(function () {\n     // Perform multiple collection updates...\n\n     collection.add(item);\n     // ...\n\n     collection.insert(index, otherItem);\n     //...\n\n     collection.remove(someItem);\n });\n</code></pre>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call that will modify this collection.</p>\n","properties":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>This collection.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","default":"this","optional":true,"doc":"<p>The <code>this</code> pointer to use when calling <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the value returned from <code>fn</code> (typically <code>undefined</code>).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["beginUpdate","endUpdate"],"id":"method-update","owner":"Ext.util.Collection","short_doc":"This method calls the supplied function fn between beginUpdate and endUpdate\ncalls. ..."},{"tagname":"method","name":"updateAutoGroup","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3874}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3874,"params":[{"name":"autoGroup","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getGroups","onEndUpdateSorters"],"id":"method-updateAutoGroup","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"updateFilters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3383}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3383,"params":[{"name":"newFilters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldFilters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onEndUpdateFilters"],"id":"method-updateFilters","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"updateGrouper","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3628}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3628,"params":[{"name":"grouper","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getGroupConfig","getGroups","getId","getRootProperty","getSorters","getTrackGroups","onEndUpdateSorters","onSorterChange","removeObserver","setGroups"],"id":"method-updateGrouper","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"updateGroups","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3886}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3886,"params":[{"name":"newGroups","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldGroups","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["addObserver","removeObserver"],"id":"method-updateGroups","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"updateKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":2371}],"doc":"<p>Change the key for an existing item in the collection. If the old key does not\nexist this call does nothing. Even so, it is highly recommended to <em>avoid</em> calling\nthis method for an <code>item</code> that is not a member of this collection.</p>\n","params":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item whose key has changed. The <code>item</code> should be a member\nof this collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"oldKey","doc":"<p>The old key for the <code>item</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"details","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getKey","getSource","notify"],"id":"method-updateKey","owner":"Ext.util.Collection","short_doc":"Change the key for an existing item in the collection. ..."},{"tagname":"method","name":"updateSorters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3673}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3673,"params":[{"name":"newSorters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldSorters","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onEndUpdateSorters","onSorterChange"],"id":"method-updateSorters","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"updateSource","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":3896}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":3896,"params":[{"name":"newSource","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldSource","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onCollectionRefresh"],"id":"method-updateSource","owner":"Ext.util.Collection","short_doc":" ..."},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","private":true,"since":"6.7.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getConfigWatcher"],"id":"method-watchConfig","owner":"Ext.Base","short_doc":"Watches config properties. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"privacy","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"parentClass","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"mixinClass","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"add","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":378}],"doc":"<p>Fires after items have been added to the collection.</p>\n\n<p>All <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events occur between\n<code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevents so it is best to do only the minimal amount of work in response to these\nevents and move the more expensive side-effects to an <code>endupdate</code> listener.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the addition.</p>\n","properties":[{"tagname":"params","type":"Number","name":"at","doc":"<p>The index in the collection where the add occurred.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"atItem","doc":"<p>The item after which the new items were inserted or\n<code>null</code> if at the beginning of the collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The items that are now added to the collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"params","type":"Array","name":"keys","optional":true,"doc":"<p>If available this array holds the keys (extracted by\n<code>getKey</code>) for each item in the <code>items</code> array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"next","optional":true,"doc":"<p>If more <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> events are in queue\nto be delivered this is a reference to the <code>details</code> instance for the next\n<code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> event. This will only be the case when the collection is\nsorted as the new items often need to be inserted at multiple locations to maintain\nthe sort. In this case, all of the new items have already been added not just those\ndescribed by the first <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> event.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"replaced","optional":true,"doc":"<p>If this addition has a corresponding set of\n<code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events this reference holds the <code>details</code> object for\nthe first <code>remove</code> event. That <code>details</code> object may have a <code>next</code> property if there\nare multiple associated <code>remove</code> events.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-add","owner":"Ext.util.Collection","short_doc":"Fires after items have been added to the collection. ..."},{"tagname":"event","name":"beforeitemchange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":446}],"doc":"<p>This event fires before an item change is reflected in the collection. This event\nis always followed by an <code>itemchange</code> event and, depending on the change, possibly\nan <code>add</code>, <code>remove</code> and/or <code>updatekey</code> event.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the change.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item that has changed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the item that has changed.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"filterChanged","doc":"<p>This is <code>true</code> if the filter status of the\n<code>item</code> has changed. That is, the item was previously filtered out and is no longer\nor the opposite.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Ext.util.Group","name":"group","doc":"<p>The group containing the <code>item</code>. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Ext.util.Group\" rel=\"Ext.util.Group\" class=\"docClass\">Ext.util.Group</a>"},{"tagname":"params","type":"Boolean","name":"groupChanged","doc":"<p>This is <code>true</code> if the item is moving between\ngroups. See also the <code>group</code> and <code>oldGroup</code> properties. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"keyChanged","doc":"<p>This is <code>true</code> if the item has changed keys. If\nso, check <code>oldKey</code> for the old key. An <code>updatekey</code> event will follow.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"indexChanged","doc":"<p>This is <code>true</code> if the item needs to move to\na new index in the collection due to sorting. The index can be seen in <code>index</code>.\nThe old index is in <code>oldIndex</code>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"String[]","name":"modified","optional":true,"doc":"<p>If known this property holds the array of names\nof the modified properties of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"Boolean","name":"filtered","optional":true,"doc":"<p>This value is <code>true</code> if the item will be filtered\nout of the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"index","optional":true,"doc":"<p>The new index in the collection for the item if\nthe item is being moved (see <code>indexChanged</code>). If the item is being removed due to\nfiltering, this will be -1.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Group","name":"oldGroup","doc":"<p>The group that previously contained the\n<code>item</code>. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Ext.util.Group\" rel=\"Ext.util.Group\" class=\"docClass\">Ext.util.Group</a>"},{"tagname":"params","type":"Number","name":"oldIndex","optional":true,"doc":"<p>The old index in the collection for the item if\nthe item is being moved (see <code>indexChanged</code>). If the item was being removed due to\nfiltering, this will be -1.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"oldKey","optional":true,"doc":"<p>The old key for the <code>item</code> if the item's key has\nchanged (see <code>keyChanged</code>).</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"wasFiltered","optional":true,"doc":"<p>This value is <code>true</code> if the item was filtered\nout of the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-beforeitemchange","owner":"Ext.util.Collection","short_doc":"This event fires before an item change is reflected in the collection. ..."},{"tagname":"event","name":"beforesort","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":615}],"doc":"<p>This event fires before the contents of the collection have been sorted.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being sorted.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Ext.util.Sorter[]","name":"sorters","doc":"<p>Array of sorters applied to the Collection.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-beforesort","owner":"Ext.util.Collection","short_doc":"This event fires before the contents of the collection have been sorted. ..."},{"tagname":"event","name":"beginupdate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":416}],"doc":"<p>Fired before changes are made to the collection. This event fires when the\n<code>beginUpdate</code> method is called and the counter it manages transitions from 0 to 1.</p>\n\n<p>All <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events occur between\n<code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevents so it is best to do only the minimal amount of work in response to these\nevents and move the more expensive side-effects to an <code>endupdate</code> listener.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-beginupdate","owner":"Ext.util.Collection","short_doc":"Fired before changes are made to the collection. ..."},{"tagname":"event","name":"endupdate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":431}],"doc":"<p>Fired after changes are made to the collection. This event fires when the <code>endUpdate</code>\nmethod is called and the counter it manages transitions from 1 to 0.</p>\n\n<p>All <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events occur between\n<code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevents so it is best to do only the minimal amount of work in response to these\nevents and move the more expensive side-effects to an <code>endupdate</code> listener.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-endupdate","owner":"Ext.util.Collection","short_doc":"Fired after changes are made to the collection. ..."},{"tagname":"event","name":"itemchange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":502}],"doc":"<p>This event fires after an item change is reflected in the collection. This event\nalways follows a <code>beforeitemchange</code> event and its corresponding <code>add</code>, <code>remove</code>\nand/or <code>updatekey</code> events.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the change.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item that has changed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"key","doc":"<p>The key of the item that has changed.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"filterChanged","doc":"<p>This is <code>true</code> if the filter status of the\n<code>item</code> has changed. That is, the item was previously filtered out and is no longer\nor the opposite.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Ext.util.Group","name":"group","doc":"<p>The group containing the <code>item</code>. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Ext.util.Group\" rel=\"Ext.util.Group\" class=\"docClass\">Ext.util.Group</a>"},{"tagname":"params","type":"Boolean","name":"groupChanged","doc":"<p>This is <code>true</code> if the item is moving between\ngroups. See also the <code>group</code> and <code>oldGroup</code> properties. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Object","name":"keyChanged","doc":"<p>This is <code>true</code> if the item has changed keys. If\nso, check <code>oldKey</code> for the old key. An <code>updatekey</code> event will have been sent.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"indexChanged","doc":"<p>This is <code>true</code> if the item was moved to a\nnew index in the collection due to sorting. The index can be seen in <code>index</code>.\nThe old index is in <code>oldIndex</code>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"String[]","name":"modified","optional":true,"doc":"<p>If known this property holds the array of names\nof the modified properties of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"Boolean","name":"filtered","optional":true,"doc":"<p>This value is <code>true</code> if the item is filtered\nout of the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"index","optional":true,"doc":"<p>The new index in the collection for the item if\nthe item has been moved (see <code>indexChanged</code>). If the item is removed due to\nfiltering, this will be -1.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Group","name":"oldGroup","doc":"<p>The group that previously contained the\n<code>item</code>. <strong>(since 6.5.1)</strong></p>\n","html_type":"<a href=\"#!/api/Ext.util.Group\" rel=\"Ext.util.Group\" class=\"docClass\">Ext.util.Group</a>"},{"tagname":"params","type":"Number","name":"oldIndex","optional":true,"doc":"<p>The old index in the collection for the item if\nthe item has been moved (see <code>indexChanged</code>). If the item was being removed due to\nfiltering, this will be -1.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object","name":"oldKey","optional":true,"doc":"<p>The old key for the <code>item</code> if the item's key has\nchanged (see <code>keyChanged</code>).</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"wasFiltered","optional":true,"doc":"<p>This value is <code>true</code> if the item was filtered\nout of the collection.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-itemchange","owner":"Ext.util.Collection","short_doc":"This event fires after an item change is reflected in the collection. ..."},{"tagname":"event","name":"refresh","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":558}],"doc":"<p>This event fires when the collection has changed entirely. This event is fired in\ncases where the collection's filter is updated or the items are sorted. While the\nitems previously in the collection may remain the same, the order at a minimum has\nchanged in ways that cannot be simply translated to other events.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-refresh","owner":"Ext.util.Collection","short_doc":"This event fires when the collection has changed entirely. ..."},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":568}],"doc":"<p>Fires after items have been removed from the collection. Some properties of this\nobject may not be present if calculating them is deemed too expensive. These are\nmarked as \"optional\".</p>\n\n<p>All <code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events occur between\n<code><a href=\"#!/api/Ext.util.Collection-event-beginupdate\" rel=\"Ext.util.Collection-event-beginupdate\" class=\"docClass\">beginupdate</a></code> and <code><a href=\"#!/api/Ext.util.Collection-event-endupdate\" rel=\"Ext.util.Collection-event-endupdate\" class=\"docClass\">endupdate</a></code>\nevents so it is best to do only the minimal amount of work in response to these\nevents and move the more expensive side-effects to an <code>endupdate</code> listener.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the removal.</p>\n","properties":[{"tagname":"params","type":"Number","name":"at","doc":"<p>The index in the collection where the removal occurred.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The items that are now removed from the collection.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"params","type":"Array","name":"keys","optional":true,"doc":"<p>If available this array holds the keys (extracted by\n<code>getKey</code>) for each item in the <code>items</code> array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"map","optional":true,"doc":"<p>If available this is a map keyed by the key of each\nitem in the <code>items</code> array. This will often contain all of the items being removed\nand not just the items in the range described by this event. The value held in this\nmap is the item.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"next","optional":true,"doc":"<p>If more <code><a href=\"#!/api/Ext.util.Collection-event-remove\" rel=\"Ext.util.Collection-event-remove\" class=\"docClass\">remove</a></code> events are in\nqueue to be delivered this is a reference to the <code>details</code> instance for the next\nremove event.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"replacement","optional":true,"doc":"<p>If this removal has a corresponding\n<code><a href=\"#!/api/Ext.util.Collection-event-add\" rel=\"Ext.util.Collection-event-add\" class=\"docClass\">add</a></code> taking place this reference holds the <code>details</code> object for\nthat <code>add</code> event. If the collection is sorted, the new items are pre-sorted but the\n<code>at</code> property for the <code>replacement</code> will <strong>not</strong> be correct. The new items will be\nadded in one or more chunks at their proper index.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-remove","owner":"Ext.util.Collection","short_doc":"Fires after items have been removed from the collection. ..."},{"tagname":"event","name":"sort","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":608}],"doc":"<p>This event fires after the contents of the collection have been sorted.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being sorted.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-sort","owner":"Ext.util.Collection","short_doc":"This event fires after the contents of the collection have been sorted. ..."},{"tagname":"event","name":"updatekey","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Collection.js","linenr":624}],"doc":"<p>Fires after the key for an item has changed.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection","name":"collection","doc":"<p>The collection being modified.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"params","type":"Object","name":"details","doc":"<p>An object describing the update.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item whose key has changed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"newKey","doc":"<p>The new key for the <code>item</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"oldKey","doc":"<p>The old key for the <code>item</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"since":"5.0.0","id":"event-updatekey","owner":"Ext.util.Collection","short_doc":"Fires after the key for an item has changed. ..."}],"code_type":"ext_define","id":"class-Ext.util.Group"}