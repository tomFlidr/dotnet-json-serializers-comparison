{"tagname":"class","name":"Ext.Array","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1}],"doc":"<p>A set of useful static methods to deal with arrays; provide missing methods for\nolder browsers.</p>\n","singleton":true,"members":[{"tagname":"method","name":"binarySearch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":235}],"doc":"<p>This method returns the index that a given item would be inserted into the\ngiven (sorted) <code>array</code>. Note that the given <code>item</code> may or may not be in the\narray. This method will return the index of where the item <em>should</em> be.</p>\n\n<p>For example:</p>\n\n<pre><code> var array = [ 'A', 'D', 'G', 'K', 'O', 'R', 'X' ];\n var index = <a href=\"#!/api/Ext.Array-method-binarySearch\" rel=\"Ext.Array-method-binarySearch\" class=\"docClass\">Ext.Array.binarySearch</a>(array, 'E');\n\n console.log('index: ' + index);\n // logs \"index: 2\"\n\n array.splice(index, 0, 'E');\n\n console.log('array : ' + array.join(''));\n // logs \"array: ADEGKORX\"\n</code></pre>\n","params":[{"tagname":"params","type":"Object[]","name":"array","doc":"<p>The array to search.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The item that you want to insert into the <code>array</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"begin","default":"0","optional":true,"doc":"<p>The first index in the <code>array</code> to consider.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","default":"array.length","optional":true,"doc":"<p>The index that marks the end of the range\nto consider. The item at this index is <em>not</em> considered.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Function","name":"compareFn","optional":true,"doc":"<p>The comparison function that matches the sort\norder of the <code>array</code>. The default <code>compareFn</code> compares items using less-than\nand greater-than operators.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index for the given item in the given array based on\nthe current sorters.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-binarySearch","owner":"Ext.Array","short_doc":"This method returns the index that a given item would be inserted into the\ngiven (sorted) array. ..."},{"tagname":"method","name":"clean","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":728}],"doc":"<p>Filter through an array and remove empty item as defined in\n<a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">Ext.isEmpty</a>.</p>\n\n<p>See <a href=\"#!/api/Ext.Array-method-filter\" rel=\"Ext.Array-method-filter\" class=\"docClass\">filter</a></p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>results</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clean","owner":"Ext.Array","short_doc":"Filter through an array and remove empty item as defined in\nExt.isEmpty. ..."},{"tagname":"method","name":"clone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":923}],"doc":"<p>Clone a flat array without referencing the previous one. Note that this is different\nfrom <code><a href=\"#!/api/Ext-method-clone\" rel=\"Ext-method-clone\" class=\"docClass\">Ext.clone</a></code> since it doesn't handle recursive cloning. It's simply a convenient,\neasy-to-remember method for <code>Array.prototype.slice.call(array)</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The clone array.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-clone","owner":"Ext.Array","short_doc":"Clone a flat array without referencing the previous one. ..."},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":480}],"doc":"<p>Checks whether or not the given <code>array</code> contains the specified <code>item</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to check.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to find.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the array contains the item, <code>false</code> otherwise.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-contains","owner":"Ext.Array","short_doc":"Checks whether or not the given array contains the specified item. ..."},{"tagname":"method","name":"difference","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1023}],"doc":"<p>Perform a set difference A-B by subtracting all items in array B from array A.</p>\n","params":[{"tagname":"params","type":"Array","name":"arrayA","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"arrayB","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>difference</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-difference","owner":"Ext.Array","short_doc":"Perform a set difference A-B by subtracting all items in array B from array A. ..."},{"tagname":"method","name":"each","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":319}],"doc":"<p>Iterates an array or an iterable value and invoke the given callback function for each\nitem.</p>\n\n<pre><code>var countries = ['Vietnam', 'Singapore', 'United States', 'Russia'];\n\n<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(countries, function(name, index, countriesItSelf) {\n    console.log(name);\n});\n\nvar sum = function() {\n    var sum = 0;\n\n    <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(arguments, function(value) {\n        sum += value;\n    });\n\n    return sum;\n};\n\nsum(1, 2, 3); // returns 6\n</code></pre>\n\n<p>The iteration can be stopped by returning <code>false</code> from the callback function.<br/>\nReturning <code>undefined</code> (i.e <code>return;</code>) will only exit the callback function and\nproceed with the next iteration of the loop.</p>\n\n<pre><code><a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a>(countries, function(name, index, countriesItSelf) {\n    if (name === 'Singapore') {\n        return false; // break here\n    }\n});\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-each\" rel=\"Ext-method-each\" class=\"docClass\">Ext.each</a> is alias for <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">Ext.Array.each</a></p>\n","params":[{"tagname":"params","type":"Array/NodeList/Object","name":"array","doc":"<p>The value to be iterated. If this\nargument is not iterable, the callback function is called once.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The callback function. If it returns <code>false</code>, the iteration\nstops and this method returns the current <code>index</code>. Returning <code>undefined</code> (i.e\n<code>return;</code>) will only exit the callback function and proceed with the next iteration\nin the loop.</p>\n\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item at the current <code>index</code> in the passed <code>array</code></p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The current <code>index</code> within the <code>array</code></p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"allItems","doc":"<p>The <code>array</code> itself which was passed as the first argument</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"return","doc":"<p>Return <code>false</code> to stop iteration.</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the specified function is\nexecuted.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"reverse","default":"false","optional":true,"doc":"<p>Reverse the iteration order (loop from the end to the\nbeginning).</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Boolean/Number","name":"return","doc":"<p>If all array entries were iterated, this will be <code>true. If\niteration was halted early because the passed fuction returned</code>false`, this will\nbe the index at which iteration was halted.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-each","owner":"Ext.Array","short_doc":"Iterates an array or an iterable value and invoke the given callback function for each\nitem. ..."},{"tagname":"method","name":"equals","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":699}],"doc":"<p>Shallow compares the contents of 2 arrays using strict equality.</p>\n","params":[{"tagname":"params","type":"Array","name":"array1","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"array2","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the arrays are equal.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-equals","owner":"Ext.Array","short_doc":"Shallow compares the contents of 2 arrays using strict equality. ..."},{"tagname":"method","name":"erase","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1468}],"doc":"<p>Removes items from an array. This is functionally equivalent to the splice method\nof Array, but works around bugs in IE8's splice method and does not copy the\nremoved elements in order to return them (because very often they are ignored).</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array on which to replace.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in the array at which to operate.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"removeCount","doc":"<p>The number of items to remove at index.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The array passed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-erase","owner":"Ext.Array","short_doc":"Removes items from an array. ..."},{"tagname":"method","name":"every","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":619}],"doc":"<p>Executes the specified function for each array element until the function returns\na falsy value. If such an item is found, the function will return <code>false</code> immediately.\nOtherwise, it will return <code>true</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>Callback function for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>Current item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>Index of the item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"array","doc":"<p>The whole array that's being iterated.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>Callback function scope.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if no false value is returned by the callback function.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-every","owner":"Ext.Array","short_doc":"Executes the specified function for each array element until the function returns\na falsy value. ..."},{"tagname":"method","name":"filter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":773}],"doc":"<p>Creates a new array with all of the elements of this array for which\nthe provided filtering function returns a truthy value.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>Callback function for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>Current item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>Index of the item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"array","doc":"<p>The whole array that's being iterated.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>Callback function scope.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Array","name":"return","doc":"<p>results</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-filter","owner":"Ext.Array","short_doc":"Creates a new array with all of the elements of this array for which\nthe provided filtering function returns a truthy..."},{"tagname":"method","name":"findBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":813}],"doc":"<p>Returns the first item in the array which elicits a truthy return value from the\npassed selection function.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to search</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The selection function to execute for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>The array item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the array item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the\nfunction is executed. Defaults to the array</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The first item in the array which returned true from the selection\nfunction, or null if none was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-findBy","owner":"Ext.Array","short_doc":"Returns the first item in the array which elicits a truthy return value from the\npassed selection function. ..."},{"tagname":"method","name":"flatten","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1183}],"doc":"<p>Recursively flattens into 1-d Array. Injects Arrays inline.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to flatten</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The 1-d array.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-flatten","owner":"Ext.Array","short_doc":"Recursively flattens into 1-d Array. ..."},{"tagname":"method","name":"forEach","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":424}],"doc":"<p>Iterates an array and invoke the given callback function for each item. Note that this\nwill simply delegate to the native <code>Array.prototype.forEach</code> method if supported. It\ndoesn't support stopping the iteration by returning <code>false</code> in the callback function\nlike <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">each</a>. However, performance could be much better in modern\nbrowsers comparing with <a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">each</a></p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to iterate.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The callback function.</p>\n","properties":[{"tagname":"params","type":"Object","name":"item","doc":"<p>The item at the current <code>index</code> in the passed <code>array</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The current <code>index</code> within the <code>array</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"allItems","doc":"<p>The <code>array</code> itself which was passed as the first argument.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The execution scope (<code>this</code>) in which the\nspecified function is executed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-forEach","owner":"Ext.Array","short_doc":"Iterates an array and invoke the given callback function for each item. ..."},{"tagname":"method","name":"from","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":837}],"doc":"<p>Converts a value to an array if it's not already an array; returns:</p>\n\n<ul>\n<li>An empty array if given value is <code>undefined</code> or <code>null</code></li>\n<li>Itself if given value is already an array</li>\n<li>An array copy if given value is <a href=\"#!/api/Ext-method-isIterable\" rel=\"Ext-method-isIterable\" class=\"docClass\">iterable</a> (arguments, NodeList\nand alike)</li>\n<li>An array with one item which is the given value, otherwise</li>\n</ul>\n\n","params":[{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to convert to an array if it's not already is an array.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"newReference","optional":true,"doc":"<p><code>true</code> to clone the given array and return a new\nreference if necessary.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Array","name":"return","doc":"<p>array</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-from","owner":"Ext.Array","short_doc":"Converts a value to an array if it's not already an array; returns:\n\n\nAn empty array if given value is undefined or n..."},{"tagname":"method","name":"include","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":911}],"doc":"<p>Push an item into the array only if the array doesn't contain it yet.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to include.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-include","owner":"Ext.Array","short_doc":"Push an item into the array only if the array doesn't contain it yet. ..."},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":452}],"doc":"<p>Get the index of the provided <code>item</code> in the given <code>array</code>, a supplement for the\nmissing arrayPrototype.indexOf in Internet Explorer.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to check.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to find.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"from","optional":true,"doc":"<p>The index at which to begin the search.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The index of item in the array (or -1 if it is not found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-indexOf","owner":"Ext.Array","short_doc":"Get the index of the provided item in the given array, a supplement for the\nmissing arrayPrototype.indexOf in Interne..."},{"tagname":"method","name":"insert","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1481}],"doc":"<p>Inserts items in to an array.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array in which to insert.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in the array at which to operate.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"items","doc":"<p>The array of items to insert at index.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The array passed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-insert","owner":"Ext.Array","short_doc":"Inserts items in to an array. ..."},{"tagname":"method","name":"intersect","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":957}],"doc":"<p>Merge multiple arrays into one with unique items that exist in all of the arrays.</p>\n","params":[{"tagname":"params","type":"Array","name":"array1","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"array2","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"etc","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>intersect</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-intersect","owner":"Ext.Array","short_doc":"Merge multiple arrays into one with unique items that exist in all of the arrays. ..."},{"tagname":"method","name":"map","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":579}],"doc":"<p>Creates a new array with the results of calling a provided function on every element\nin this array.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>Callback function for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>Current item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>Index of the item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"array","doc":"<p>The whole array that's being iterated.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>Callback function scope</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Array","name":"return","doc":"<p>results</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-map","owner":"Ext.Array","short_doc":"Creates a new array with the results of calling a provided function on every element\nin this array. ..."},{"tagname":"method","name":"max","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1246}],"doc":"<p>Returns the maximum value in the Array.</p>\n","params":[{"tagname":"params","type":"Array/NodeList","name":"array","doc":"<p>The Array from which to select the maximum value.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList"},{"tagname":"params","type":"Function","name":"comparisonFn","optional":true,"doc":"<p>a function to perform the comparison which\ndetermines maximization.\nIf omitted the \">\" operator will be used.\n<strong>Note:</strong> gt = 1; eq = 0; lt = -1</p>\n\n","properties":[{"tagname":"params","type":"Mixed","name":"max","doc":"<p>Current maximum value.</p>\n\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"item","doc":"<p>The value to compare with the current maximum.</p>\n\n","html_type":"Mixed"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"return":{"type":"Object","name":"return","doc":"<p>maxValue The maximum value.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-max","owner":"Ext.Array","short_doc":"Returns the maximum value in the Array. ..."},{"tagname":"method","name":"mean","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1280}],"doc":"<p>Calculates the mean of all items in the array.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array to calculate the mean value of.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The mean.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-mean","owner":"Ext.Array","short_doc":"Calculates the mean of all items in the array. ..."},{"tagname":"method","name":"merge","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":935}],"doc":"<p>Merge multiple arrays into one with unique items.</p>\n\n<p><a href=\"#!/api/Ext.Array-method-union\" rel=\"Ext.Array-method-union\" class=\"docClass\">union</a> is alias for <a href=\"#!/api/Ext.Array-method-merge\" rel=\"Ext.Array-method-merge\" class=\"docClass\">merge</a></p>\n","params":[{"tagname":"params","type":"Array","name":"array1","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"array2","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"etc","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>merged</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-merge","owner":"Ext.Array","short_doc":"Merge multiple arrays into one with unique items. ..."},{"tagname":"method","name":"min","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1212}],"doc":"<p>Returns the minimum value in the Array.</p>\n","params":[{"tagname":"params","type":"Array/NodeList","name":"array","doc":"<p>The Array from which to select the minimum value.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList"},{"tagname":"params","type":"Function","name":"comparisonFn","optional":true,"doc":"<p>a function to perform the comparison which\ndetermines minimization.\nIf omitted the \"&lt;\" operator will be used.\n<strong>Note:</strong> gt = 1; eq = 0; lt = -1</p>\n\n","properties":[{"tagname":"params","type":"Mixed","name":"min","doc":"<p>Current minimum value.</p>\n\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"item","doc":"<p>The value to compare with the current minimum.</p>\n\n","html_type":"Mixed"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"return":{"type":"Object","name":"return","doc":"<p>minValue The minimum value.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-min","owner":"Ext.Array","short_doc":"Returns the minimum value in the Array. ..."},{"tagname":"method","name":"numericSortFn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1573}],"doc":"<p>A function used to sort an array by numeric value. By default, javascript array values\nare coerced to strings when sorting, which can be problematic when using numeric values.\nTo ensure that the values are sorted numerically, this method can be passed to the sort\nmethod:</p>\n\n<pre><code><a href=\"#!/api/Ext.Array-method-sort\" rel=\"Ext.Array-method-sort\" class=\"docClass\">Ext.Array.sort</a>(myArray, <a href=\"#!/api/Ext.Array-method-numericSortFn\" rel=\"Ext.Array-method-numericSortFn\" class=\"docClass\">Ext.Array.numericSortFn</a>);\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"a","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"b","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-numericSortFn","owner":"Ext.Array","short_doc":"A function used to sort an array by numeric value. ..."},{"tagname":"method","name":"pluck","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":556}],"doc":"<p>Plucks the value of a property from each item in the Array. Example:</p>\n\n<pre><code>// [el1.className, el2.className, ..., elN.className]\n<a href=\"#!/api/Ext.Array-method-pluck\" rel=\"Ext.Array-method-pluck\" class=\"docClass\">Ext.Array.pluck</a>(<a href=\"#!/api/Ext-method-query\" rel=\"Ext-method-query\" class=\"docClass\">Ext.query</a>(\"p\"), \"className\");\n</code></pre>\n","params":[{"tagname":"params","type":"Array/NodeList","name":"array","doc":"<p>The Array of items to pluck the value from.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/NodeList"},{"tagname":"params","type":"String","name":"propertyName","doc":"<p>The property name to pluck from each element.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The value from each item in the Array.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-pluck","owner":"Ext.Array","short_doc":"Plucks the value of a property from each item in the Array. ..."},{"tagname":"method","name":"push","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1541}],"doc":"<p>Pushes new items onto the end of an Array.</p>\n\n<p>Passed parameters may be single items, or arrays of items. If an Array is found in the\nargument list, all its elements are pushed into the end of the target Array.</p>\n","params":[{"tagname":"params","type":"Array","name":"target","doc":"<p>The Array onto which to push new items</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object...","name":"elements","doc":"<p>The elements to add to the array. Each parameter may\nbe an Array, in which case all the elements of that Array will be pushed into the end\nof the destination Array.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"return":{"type":"Array","name":"return","doc":"<p>An array containing all the new items push onto the end.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-push","owner":"Ext.Array","short_doc":"Pushes new items onto the end of an Array. ..."},{"tagname":"method","name":"reduce","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1048}],"doc":"<p>This method applies the <code>reduceFn</code> function against an accumulator and each\nvalue of the <code>array</code> (from left-to-right) to reduce it to a single value.</p>\n\n<p>If no <code>initialValue</code> is specified, the first element of the array is used as\nthe initial value. For example:</p>\n\n<pre><code> function reducer (previous, value, index) {\n     console.log('[' + index + ']: (' + previous + ',' + value + '}');\n     return previous * 10 + value;\n }\n\n v = <a href=\"#!/api/Ext.Array-method-reduce\" rel=\"Ext.Array-method-reduce\" class=\"docClass\">Ext.Array.reduce</a>([2, 3, 4], reducer);\n console.log('v = ' + v);\n\n &gt; [1]: (2, 3)\n &gt; [2]: (23, 4)\n &gt; v = 234\n\n v = <a href=\"#!/api/Ext.Array-method-reduce\" rel=\"Ext.Array-method-reduce\" class=\"docClass\">Ext.Array.reduce</a>([2, 3, 4], reducer, 1);\n console.log('v = ' + v);\n\n &gt; [0]: (1, 2)\n &gt; [1]: (12, 3)\n &gt; [2]: (123, 4)\n &gt; v = 1234\n</code></pre>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to process.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"reduceFn","doc":"<p>The reducing callback function.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"previous","doc":"<p>The previous value.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"value","doc":"<p>The current value.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in the array of the current <code>value</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to being processed.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Mixed","name":"initialValue","optional":true,"doc":"<p>The starting value.</p>\n","html_type":"Mixed"}],"return":{"type":"Mixed","name":"return","doc":"<p>The reduced value.</p>\n","properties":null,"html_type":"Mixed"},"since":"6.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-reduce","owner":"Ext.Array","short_doc":"This method applies the reduceFn function against an accumulator and each\nvalue of the array (from left-to-right) to ..."},{"tagname":"method","name":"remove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":874}],"doc":"<p>Removes the specified item from the array if it exists.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Object","name":"item","doc":"<p>The item to remove.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The passed array.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-remove","owner":"Ext.Array","short_doc":"Removes the specified item from the array if it exists. ..."},{"tagname":"method","name":"removeAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":891}],"doc":"<p>Removes item/s at the specified index.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the item to be removed.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"count","default":"1","optional":true,"doc":"<p>The number of items to be removed.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The passed array.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAt","owner":"Ext.Array","short_doc":"Removes item/s at the specified index. ..."},{"tagname":"method","name":"replace","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1510}],"doc":"<p>Replaces items in an array. This is functionally equivalent to the splice method\nof Array, but works around bugs in IE8's splice method and is often more convenient\nto call because it accepts an array of items to insert rather than use a variadic\nargument list.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array on which to replace.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in the array at which to operate.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"removeCount","doc":"<p>The number of items to remove at index (can be 0).</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"insert","optional":true,"doc":"<p>An array of items to insert at index.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The array passed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-replace","owner":"Ext.Array","short_doc":"Replaces items in an array. ..."},{"tagname":"method","name":"slice","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1131}],"doc":"<p>Returns a shallow copy of a part of an array. This is equivalent to the native\ncall <code>Array.prototype.slice.call(array, begin, end)</code>. This is often used when \"array\"\nis \"arguments\" since the arguments object does not supply a slice method but can\nbe the context object to <code>Array.prototype.slice</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array (or arguments object).</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"begin","doc":"<p>The index at which to begin. Negative values are offsets from\nthe end of the array.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","doc":"<p>The index at which to end. The copied items do not include\nend. Negative values are offsets from the end of the array. If end is omitted,\nall items up to the end of the array are copied.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The copied piece of the array.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"id":"method-slice","owner":"Ext.Array","short_doc":"Returns a shallow copy of a part of an array. ..."},{"tagname":"method","name":"some","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":659}],"doc":"<p>Executes the specified function for each array element until the function returns\na truthy value. If such an item is found, the function will return <code>true</code> immediately.\nOtherwise, it will return <code>false</code>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>Callback function for each item.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"item","doc":"<p>Current item.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"index","doc":"<p>Index of the item.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Array","name":"array","doc":"<p>The whole array that's being iterated.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>Callback function scope.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the callback function returns a truthy value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-some","owner":"Ext.Array","short_doc":"Executes the specified function for each array element until the function returns\na truthy value. ..."},{"tagname":"method","name":"sort","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1165}],"doc":"<p>Sorts the elements of an Array in a stable manner (equivalently keyed values do not move\nrelative to each other). By default, this method sorts the elements alphabetically and\nascending.\n<strong>Note:</strong> This method modifies the passed array, in the same manner as the\nnative javascript <a href=\"#!/api/Array-method-sort\" rel=\"Array-method-sort\" class=\"docClass\">Array.sort</a>.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The array to sort.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"sortFn","optional":true,"doc":"<p>The comparison function.</p>\n","properties":[{"tagname":"params","type":"Mixed","name":"a","doc":"<p>The first item to compare.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Mixed","name":"b","doc":"<p>The second item to compare.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Number","name":"return","doc":"<p><code>-1</code> if a &lt; b, <code>1</code> if a > b, otherwise <code>0</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"return":{"type":"Array","name":"return","doc":"<p>The sorted array.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-sort","owner":"Ext.Array","short_doc":"Sorts the elements of an Array in a stable manner (equivalently keyed values do not move\nrelative to each other). ..."},{"tagname":"method","name":"splice","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1525}],"doc":"<p>Replaces items in an array. This is equivalent to the splice method of Array, but\nworks around bugs in IE8's splice method. The signature is exactly the same as the\nsplice method except that the array is the first argument. All arguments following\nremoveCount are inserted in the array at index.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array on which to replace.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index in the array at which to operate.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"removeCount","doc":"<p>The number of items to remove at index (can be 0).</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Object...","name":"elements","doc":"<p>The elements to add to the array. If you don't specify\nany elements, splice simply removes elements from the array.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"return":{"type":"Array","name":"return","doc":"<p>An array containing the removed items.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-splice","owner":"Ext.Array","short_doc":"Replaces items in an array. ..."},{"tagname":"method","name":"sum","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1290}],"doc":"<p>Calculates the sum of all items in the given array.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array to calculate the sum value of.</p>\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Number","name":"return","doc":"<p>The sum.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-sum","owner":"Ext.Array","short_doc":"Calculates the sum of all items in the given array. ..."},{"tagname":"method","name":"toArray","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":504}],"doc":"<p>Converts any iterable (numeric indices and a length property) into a true array.</p>\n\n<pre><code>function test() {\n    var args = <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(arguments),\n        fromSecondToLastArgs = <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(arguments, 1);\n\n    alert(args.join(' '));\n    alert(fromSecondToLastArgs.join(' '));\n}\n\ntest('just', 'testing', 'here'); // alerts 'just testing here';\n                                 // alerts 'testing here';\n\n// will convert the NodeList into an array\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>(document.getElementsByTagName('div'));\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>('splitted'); // returns ['s', 'p', 'l', 'i', 't', 't', 'e', 'd']\n<a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>('splitted', 0, 3); // returns ['s', 'p', 'l']\n</code></pre>\n\n<p><a href=\"#!/api/Ext-method-toArray\" rel=\"Ext-method-toArray\" class=\"docClass\">Ext.toArray</a> is alias for <a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a></p>\n","params":[{"tagname":"params","type":"Object","name":"iterable","doc":"<p>the iterable object to be turned into a true Array.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"start","default":"0","optional":true,"doc":"<p>a zero-based index that specifies the start of extraction.</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"end","default":"-1","optional":true,"doc":"<p>a 1-based index that specifies the end of extraction.</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Array","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-toArray","owner":"Ext.Array","short_doc":"Converts any iterable (numeric indices and a length property) into a true array. ..."},{"tagname":"method","name":"toMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1309}],"doc":"<p>Creates a map (object) keyed by the elements of the given array. The values in\nthe map are the index+1 of the array element. For example:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toMap\" rel=\"Ext.Array-method-toMap\" class=\"docClass\">Ext.Array.toMap</a>(['a','b','c']);\n\n // map = { a: 1, b: 2, c: 3 };\n</code></pre>\n\n<p>Or a key property can be specified:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toMap\" rel=\"Ext.Array-method-toMap\" class=\"docClass\">Ext.Array.toMap</a>([\n         { name: 'a' },\n         { name: 'b' },\n         { name: 'c' }\n     ], 'name');\n\n // map = { a: 1, b: 2, c: 3 };\n</code></pre>\n\n<p>Lastly, a key extractor can be provided:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toMap\" rel=\"Ext.Array-method-toMap\" class=\"docClass\">Ext.Array.toMap</a>([\n         { name: 'a' },\n         { name: 'b' },\n         { name: 'c' }\n     ], function(obj) { return obj.name.toUpperCase(); });\n\n // map = { A: 1, B: 2, C: 3 };\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"strings","doc":"<p>The strings from which to create the map.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String/Function","name":"getKey","optional":true,"doc":"<p>Name of the object property to use\nas a key or a function to extract the key.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>Value of <code>this</code> inside callback specified for <code>getKey</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The resulting map.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-toMap","owner":"Ext.Array","short_doc":"Creates a map (object) keyed by the elements of the given array. ..."},{"tagname":"method","name":"toValueMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1375}],"doc":"<p>Creates a map (object) keyed by a property of elements of the given array. The values in\nthe map are the array element. For example:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toValueMap\" rel=\"Ext.Array-method-toValueMap\" class=\"docClass\">Ext.Array.toValueMap</a>(['a','b','c']);\n\n // map = { a: 'a', b: 'b', c: 'c' };\n</code></pre>\n\n<p>Or a key property can be specified:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toValueMap\" rel=\"Ext.Array-method-toValueMap\" class=\"docClass\">Ext.Array.toValueMap</a>([\n         { name: 'a' },\n         { name: 'b' },\n         { name: 'c' }\n     ], 'name');\n\n // map = { a: {name: 'a'}, b: {name: 'b'}, c: {name: 'c'} };\n</code></pre>\n\n<p>Lastly, a key extractor can be provided:</p>\n\n<pre><code> var map = <a href=\"#!/api/Ext.Array-method-toValueMap\" rel=\"Ext.Array-method-toValueMap\" class=\"docClass\">Ext.Array.toValueMap</a>([\n         { name: 'a' },\n         { name: 'b' },\n         { name: 'c' }\n     ], function(obj) { return obj.name.toUpperCase(); });\n\n // map = { A: {name: 'a'}, B: {name: 'b'}, C: {name: 'c'} };\n</code></pre>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"<p>The Array to create the map from.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"String/Function","name":"getKey","optional":true,"doc":"<p>Name of the object property to use\nas a key or a function to extract the key.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>Value of this inside callback. This parameter is only\npassed when <code>getKey</code> is a function. If <code>getKey</code> is not a function, the 3rd\nargument is <code>arrayify</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"arrayify","optional":true,"doc":"<p>Pass <code>1</code> to create arrays for all map entries\nor <code>2</code> to create arrays for map entries that have 2 or more items with the\nsame key. This only applies when <code>getKey</code> is specified. By default the map will\nhold the last entry with a given key.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The resulting map.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-toValueMap","owner":"Ext.Array","short_doc":"Creates a map (object) keyed by a property of elements of the given array. ..."},{"tagname":"method","name":"union","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":1593}],"doc":"<p>Merge multiple arrays into one with unique items.</p>\n\n<p><a href=\"#!/api/Ext.Array-method-union\" rel=\"Ext.Array-method-union\" class=\"docClass\">union</a> is alias for <a href=\"#!/api/Ext.Array-method-merge\" rel=\"Ext.Array-method-merge\" class=\"docClass\">merge</a></p>\n","owner":"Ext.Array","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Array","name":"array1","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"array2","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Array","name":"etc","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-union","return":{"type":"Array","name":"return","doc":"<p>merged</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"throws":null,"properties":null,"type":null,"short_doc":"Merge multiple arrays into one with unique items. ..."},{"tagname":"method","name":"unique","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/lang/Array.js","linenr":752}],"doc":"<p>Returns a new array with unique items.</p>\n","params":[{"tagname":"params","type":"Array","name":"array","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Array","name":"return","doc":"<p>results</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-unique","owner":"Ext.Array","short_doc":"Returns a new array with unique items. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-Ext.Array"}