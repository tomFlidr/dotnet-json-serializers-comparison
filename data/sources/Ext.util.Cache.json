{"tagname":"class","name":"Ext.util.Cache","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":1}],"doc":"<p>This class is used to manage simple, LRU caches. It provides an absolutely minimal\ncontainer interface. It is created like this:</p>\n\n<pre><code> this.itemCache = new <a href=\"#!/api/Ext.util.Cache\" rel=\"Ext.util.Cache\" class=\"docClass\">Ext.util.Cache</a>({\n     miss: function (key) {\n         return new CacheItem(key);\n     }\n });\n</code></pre>\n\n<p>The <code><a href=\"#!/api/Ext.util.Cache-method-miss\" rel=\"Ext.util.Cache-method-miss\" class=\"docClass\">miss</a></code> abstract method must be implemented by either a derived class or\nat the instance level as shown above.</p>\n\n<p>Once the cache exists and it can handle cache misses, the cache is used like so:</p>\n\n<pre><code> var item = this.itemCache.get(key);\n</code></pre>\n\n<p>The <code>key</code> is some value that uniquely identifies the cached item.</p>\n\n<p>In some cases, creating the cache item may require more than just the lookup key. In\nthat case, any extra arguments passed to <code>get</code> will be passed to <code>miss</code>.</p>\n\n<pre><code> this.otherCache = new <a href=\"#!/api/Ext.util.Cache\" rel=\"Ext.util.Cache\" class=\"docClass\">Ext.util.Cache</a>({\n     miss: function (key, extra) {\n         return new CacheItem(key, extra);\n     }\n });\n\n var item = this.otherCache.get(key, extra);\n</code></pre>\n\n<p>To process items as they are removed, you can provide an <code><a href=\"#!/api/Ext.util.Cache-method-evict\" rel=\"Ext.util.Cache-method-evict\" class=\"docClass\">evict</a></code> method. The\nstock method is <code><a href=\"#!/api/Ext-property-emptyFn\" rel=\"Ext-property-emptyFn\" class=\"docClass\">Ext.emptyFn</a></code> and so does nothing.</p>\n\n<p>For example:</p>\n\n<pre><code> this.itemCache = new <a href=\"#!/api/Ext.util.Cache\" rel=\"Ext.util.Cache\" class=\"docClass\">Ext.util.Cache</a>({\n     miss: function (key) {\n         return new CacheItem(key);\n     },\n\n     evict: function (key, cacheItem) {\n         cacheItem.destroy();\n     }\n });\n</code></pre>\n","private":true,"since":"5.1.0","members":[{"tagname":"cfg","name":"maxSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":64}],"doc":"<p>The maximum size the cache is allowed to grow to before\nfurther additions cause removal of the least recently used entry.</p>\n","type":"Number","default":"100","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-maxSize","owner":"Ext.util.Cache","short_doc":"The maximum size the cache is allowed to grow to before\nfurther additions cause removal of the least recently used en...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"method","name":"clear","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":83}],"doc":"<p>Removes all items from this cache.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clear","owner":"Ext.util.Cache","short_doc":"Removes all items from this cache. ..."},{"tagname":"method","name":"evict","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":122}],"doc":"<p>This method is called internally from <code><a href=\"#!/api/Ext.util.Cache-method-get\" rel=\"Ext.util.Cache-method-get\" class=\"docClass\">get</a></code> when the cache is full and\nthe least-recently-used (LRU) item has been removed.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The cache lookup key for the item being removed.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"value","doc":"<p>The cache value (returned by <code><a href=\"#!/api/Ext.util.Cache-method-miss\" rel=\"Ext.util.Cache-method-miss\" class=\"docClass\">miss</a></code>) for the item\nbeing removed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"template":true,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-evict","owner":"Ext.util.Cache","short_doc":"This method is called internally from get when the cache is full and\nthe least-recently-used (LRU) item has been remo..."},{"tagname":"method","name":"get","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":90}],"doc":"<p>Finds an item in this cache and returns its value. If the item is present, it is\nshuffled into the MRU (most-recently-used) position as necessary. If the item is\nmissing, the <code><a href=\"#!/api/Ext.util.Cache-method-miss\" rel=\"Ext.util.Cache-method-miss\" class=\"docClass\">miss</a></code> method is called to create the item.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The cache key of the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Arguments for the <code>miss</code> method should it be needed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"return":{"type":"Object","name":"return","doc":"<p>The cached object.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["add","touch","trim"],"id":"method-get","owner":"Ext.util.Cache","short_doc":"Finds an item in this cache and returns its value. ..."},{"tagname":"method","name":"miss","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Cache.js","linenr":70}],"doc":"<p>This method is called by <code><a href=\"#!/api/Ext.util.Cache-method-get\" rel=\"Ext.util.Cache-method-get\" class=\"docClass\">get</a></code> when the key is not found in the cache.\nThe implementation of this method should create the (expensive) value and return\nit. Whatever arguments were passed to <code><a href=\"#!/api/Ext.util.Cache-method-get\" rel=\"Ext.util.Cache-method-get\" class=\"docClass\">get</a></code> will be passed on to this\nmethod.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The cache lookup key for the item.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Any other arguments originally passed to <code><a href=\"#!/api/Ext.util.Cache-method-get\" rel=\"Ext.util.Cache-method-get\" class=\"docClass\">get</a></code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"abstract":true,"protected":true,"id":"method-miss","owner":"Ext.util.Cache","short_doc":"This method is called by get when the key is not found in the cache. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-Ext.util.Cache","short_doc":"This class is used to manage simple, LRU caches. ..."}