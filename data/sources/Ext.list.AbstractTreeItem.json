{"tagname":"class","name":"Ext.list.AbstractTreeItem","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":1},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":575}],"doc":"<p>The base class for all items in the <code><a href=\"#!/api/Ext.list.Tree\" rel=\"Ext.list.Tree\" class=\"docClass\">treelist</a></code>.</p>\n","since":"6.0.0","aliases":{},"alternateClassNames":[],"extends":"Ext.Widget","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"cfg","name":"ariaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"doc":"<p>An object containing ARIA attributes to be set\non this Component's ARIA element. Use this to set the attributes that cannot be\ndetermined by the Component's state, such as <code>aria-live</code>, <code>aria-flowto</code>, etc.</p>\n\n<p><strong>Note</strong> that this config is only meaningful at the Component rendering time,\nand setting it after that will do nothing.</p>\n","type":"Object","default":"{$value: null, lazy: true}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-ariaAttributes","owner":"Ext.mixin.Accessible","short_doc":"An object containing ARIA attributes to be set\non this Component's ARIA element. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"ariaDescribedBy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":31}],"doc":"<p>DOM selector for a child element that is to be used\nas description for this Component, set in <code>aria-describedby</code> attribute.\nThe selector works the same way as <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a>.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-ariaDescribedBy","owner":"Ext.mixin.Accessible","short_doc":"DOM selector for a child element that is to be used\nas description for this Component, set in aria-describedby attrib...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaLabel","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":14}],"doc":"<p>ARIA label for this Component. It is best to use\n<a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> option instead, because screen readers prefer\n<code>aria-labelledby</code> attribute to <code>aria-label</code>. <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabel\" rel=\"Ext.mixin.Accessible-cfg-ariaLabel\" class=\"docClass\">ariaLabel</a> and\n<a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> config options are mutually exclusive.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-ariaLabel","owner":"Ext.mixin.Accessible","short_doc":"ARIA label for this Component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaLabelledBy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":21}],"doc":"<p>DOM selector for a child element that is to be used\nas label for this Component, set in <code>aria-labelledby</code> attribute.\nIf the selector is by <code>#id</code>, the label element can be any existing element,\nnot necessarily a child of the main Component element.</p>\n\n<p><a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> and <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabel\" rel=\"Ext.mixin.Accessible-cfg-ariaLabel\" class=\"docClass\">ariaLabel</a> config options are\nmutually exclusive, and <code>ariaLabelledBy</code> has the higher precedence.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-ariaLabelledBy","owner":"Ext.mixin.Accessible","short_doc":"DOM selector for a child element that is to be used\nas label for this Component, set in aria-labelledby attribute. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"bind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"doc":"<p>Setting this config option adds or removes data bindings for other configs.\nFor example, to bind the <code>title</code> config:</p>\n\n<pre><code> var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'panel',\n     bind: {\n         title: 'Hello {user.name}'\n     }\n });\n</code></pre>\n\n<p>To dynamically add bindings:</p>\n\n<pre><code> panel.setBind({\n     title: 'Greetings {user.name}!'\n });\n</code></pre>\n\n<p>To remove bindings:</p>\n\n<pre><code> panel.setBind({\n     title: null\n });\n</code></pre>\n\n<p>The bind expressions are presented to <code><a href=\"#!/api/Ext.app.ViewModel-method-bind\" rel=\"Ext.app.ViewModel-method-bind\" class=\"docClass\">Ext.app.ViewModel.bind</a></code>. The\n<code>ViewModel</code> instance is determined by <code>lookupViewModel</code>.</p>\n\n<p><strong>Note:</strong> If  bind is passed as a string, it will use the\n<a href=\"#!/api/Ext.Component-property-defaultBindProperty\" rel=\"Ext.Component-property-defaultBindProperty\" class=\"docClass\">Ext.Component.defaultBindProperty</a> for the binding.</p>\n","type":"Object/String","default":"{$value: null, lazy: true}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-bind","owner":"Ext.mixin.Bindable","short_doc":"Setting this config option adds or removes data bindings for other configs. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"border","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":257}],"doc":"<p>Enables or disables bordering on this component.\nThe following values are accepted:</p>\n\n<ul>\n<li><code>null</code> or `true (default): Do nothing and allow the border to be specified\nby the theme.</li>\n<li><code>false</code>: suppress the default border provided by the theme.</li>\n</ul>\n\n\n<p>Please note that enabling bordering via this config will not add a <code>border-color</code>\nor <code>border-style</code> CSS property to the component; you provide the <code>border-color</code>\nand <code>border-style</code> via CSS rule or <a href=\"#!/api/Ext.Widget-cfg-style\" rel=\"Ext.Widget-cfg-style\" class=\"docClass\">style</a> configuration\n(if not already provide by the theme).</p>\n\n<h2>Using <a href=\"#!/api/Ext.Widget-cfg-style\" rel=\"Ext.Widget-cfg-style\" class=\"docClass\">style</a>:</h2>\n\n<pre><code><a href=\"#!/api/Ext.container.Viewport-event-add\" rel=\"Ext.container.Viewport-event-add\" class=\"docClass\">Ext.Viewport.add</a>({\n    centered: true,\n    width: 100,\n    height: 100,\n\n    style: 'border: 1px solid blue;'\n    // ...\n});\n</code></pre>\n\n<h2>Using CSS:</h2>\n\n<pre><code><a href=\"#!/api/Ext.container.Viewport-event-add\" rel=\"Ext.container.Viewport-event-add\" class=\"docClass\">Ext.Viewport.add</a>({\n    centered: true,\n    width: 100,\n    height: 100,\n\n    cls: 'my-component'\n    // ...\n});\n</code></pre>\n\n<p>And your CSS file:</p>\n\n<pre><code>.my-component {\n    border: 1px solid red;\n}\n</code></pre>\n","type":"Boolean","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-border","owner":"Ext.Widget","short_doc":"Enables or disables bordering on this component. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"cls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":214}],"doc":"<p>The CSS class to add to this widget's element, in\naddition to the <a href=\"#!/api/Ext.Widget-property-baseCls\" rel=\"Ext.Widget-property-baseCls\" class=\"docClass\">baseCls</a>. In many cases, this property will be specified\nby the derived widget class. See <a href=\"#!/api/Ext.Widget-cfg-userCls\" rel=\"Ext.Widget-cfg-userCls\" class=\"docClass\">userCls</a> for adding additional CSS\nclasses to widget instances (such as items in a <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a>).</p>\n","type":"String/String[]","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-cls","owner":"Ext.Widget","short_doc":"The CSS class to add to this widget's element, in\naddition to the baseCls. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"controller","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":47}],"doc":"<p>A string alias, a configuration object or an instance of a <code>ViewController</code> for\nthis container. Sample usage:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.UserController', {\n    alias: 'controller.user'\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('UserContainer', {\n    extend: 'Ext.container.container',\n    controller: 'user'\n});\n// Or\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('UserContainer', {\n    extend: 'Ext.container.container',\n    controller: {\n        type: 'user',\n        someConfig: true\n    }\n});\n\n// Can also instance at runtime\nvar ctrl = new MyApp.UserController();\nvar view = new UserContainer({\n    controller: ctrl\n});\n</code></pre>\n","type":"String/Object/Ext.app.ViewController","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-controller","owner":"Ext.mixin.Bindable","short_doc":"A string alias, a configuration object or an instance of a ViewController for\nthis container. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},{"tagname":"cfg","name":"defaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"doc":"<p>If <code>true</code>, this component will be the default scope (this pointer) for events\nspecified with string names so that the scope can be dynamically resolved. The\ncomponent will automatically become the defaultListenerScope if a\n<a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a> is specified.</p>\n\n<p>See the introductory docs for <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> for some sample\nusages.</p>\n\n<p><strong>NOTE</strong>: This value can only be reliably set at construction time. Setting it\nafter that time may not correctly rewire all of the potentially effected\nlisteners.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-defaultListenerScope","owner":"Ext.mixin.Bindable","short_doc":"If true, this component will be the default scope (this pointer) for events\nspecified with string names so that the s...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"disabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":500}],"doc":"<p>Whether or not this component is disabled</p>\n","type":"Boolean","default":null,"properties":null,"accessor":true,"evented":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"cfg-disabled","owner":"Ext.Widget","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"eventHandlers","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":358}],"doc":"<p>A map of event type to the corresponding handler method\nname. This is used internally by native event handling mechanism.</p>\n","type":"Object","default":"{focus: 'handleFocusEvent', blur: 'handleBlurEvent'}","properties":null,"private":true,"deprecated":{"text":"<p>Inline event handlers are deprecated</p>\n\n\n\n","version":"6.6.0"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-eventHandlers","owner":"Ext.Widget","short_doc":"A map of event type to the corresponding handler method\nname. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"expandable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":56}],"doc":"<p><code>true</code> if this item is expandable. This value is taken from\nthe underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-expandable","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this item is expandable. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"expanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":63}],"doc":"<p><code>true</code> if this item is expanded. This value is taken from\nthe underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-expanded","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this item is expanded. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"floated","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":585}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":585,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-floated","owner":"Ext.list.AbstractTreeItem","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"focusCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1136}],"doc":"<p>CSS class suffix that will be used to\ncompose the CSS class name that will be added to Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusClsEl\" rel=\"Ext.mixin.Focusable-property-focusClsEl\" class=\"docClass\">focusClsEl</a>,\nand removed when Component blurs.</p>\n\n<p><strong>Note</strong> that this is not a full CSS class name; this suffix will be combined\nwith component's UI class via addClsWithUI and removeClsWithUI methods.</p>\n","type":"String","default":"'focus'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-focusCls","owner":"Ext.mixin.Focusable","short_doc":"CSS class suffix that will be used to\ncompose the CSS class name that will be added to Component's focusClsEl,\nand re...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"height","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":479}],"doc":"<p>The height of this Component; must be a valid CSS length value, e.g: <code>300</code>, <code>100px</code>,\n<code>30%</code>, etc. By default, if this is not explicitly set, this Component's element will\nsimply have its own natural size. If set to <code>auto</code>, it will set the width to <code>null</code>\nmeaning it will have its own natural size.</p>\n","type":"Number/String","default":null,"properties":null,"accessor":true,"evented":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"cfg-height","owner":"Ext.Widget","short_doc":"The height of this Component; must be a valid CSS length value, e.g: 300, 100px,\n30%, etc. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"hidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":490}],"doc":"<p>Whether or not this Component is hidden (its CSS <code>display</code> property is set to <code>none</code>).</p>\n\n<p>Defaults to <code>true</code> for floated Components.</p>\n","type":"Boolean","default":null,"properties":null,"accessor":true,"evented":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"cfg-hidden","owner":"Ext.Widget","short_doc":"Whether or not this Component is hidden (its CSS display property is set to none). ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"hideMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":435}],"doc":"<p>A String which specifies how this component's DOM element will be hidden. The\naccepted values are any of these:</p>\n\n<ul>\n<li><code>'clip'</code> : Hide using <a href=\"#!/api/Ext.dom.Element-static-property-CLIP\" rel=\"Ext.dom.Element-static-property-CLIP\" class=\"docClass\">clip</a>.</li>\n<li><code>'display'</code> : Hide using <a href=\"#!/api/Ext.dom.Element-static-property-DISPLAY\" rel=\"Ext.dom.Element-static-property-DISPLAY\" class=\"docClass\">display</a>.</li>\n<li><code>'offsets'</code> : Hide using positioning <a href=\"#!/api/Ext.dom.Element-static-property-OFFSETS\" rel=\"Ext.dom.Element-static-property-OFFSETS\" class=\"docClass\">offsets</a>.</li>\n<li><code>'opacity'</code> : Hide using <a href=\"#!/api/Ext.dom.Element-static-property-OPACITY\" rel=\"Ext.dom.Element-static-property-OPACITY\" class=\"docClass\">opacity</a>.</li>\n<li><code>'visibility'</code> : Hide using <a href=\"#!/api/Ext.dom.Element-static-property-VISIBILITY\" rel=\"Ext.dom.Element-static-property-VISIBILITY\" class=\"docClass\">visibility</a>.</li>\n</ul>\n\n\n<p>Hiding using <code>display</code> results in having no dimensions as well as resetting\nscroll positions to 0.</p>\n\n<p>The other modes overcome this but may have different trade-offs in certain\ncircumstances.</p>\n","type":"'clip'/'display'/'offsets'/'opacity'/'visibility'","default":"'display'","properties":null,"since":"6.5.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-hideMode","owner":"Ext.Widget","short_doc":"A String which specifies how this component's DOM element will be hidden. ...","html_type":"'clip'/'display'/'offsets'/'opacity'/'visibility'"},{"tagname":"cfg","name":"iconCls","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":70}],"doc":"<p>One or more space separated CSS classes to be applied to the icon element.<br/>\nThe CSS rule(s) applied should specify a background image to be used as the\nicon.</p>\n\n<p>An example of specifying a custom icon class would be something like:</p>\n\n<pre><code>// specify the property in the config for the class:\niconCls: 'my-home-icon'\n\n// css rule specifying the background image to be used as the icon image:\n.my-home-icon {\n    background-image: url(../images/my-home-icon.gif) !important;\n}\n</code></pre>\n\n<p>In addition to specifying your own classes, you can use the font icons\nprovided in the SDK using the following syntax:</p>\n\n<pre><code>// using Font Awesome\niconCls: 'x-fa fa-home'\n\n// using Pictos\niconCls: 'pictos pictos-home'\n</code></pre>\n\n<p>Depending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:</p>\n\n<ul>\n<li><a href=\"http://fortawesome.github.io/Font-Awesome/cheatsheet/\">Font Awesome icons</a></li>\n<li><a href=\"../guides/core_concepts/font_ext.html\">Pictos icons</a></li>\n<li><a href=\"../guides/core_concepts/theming.html\">Theming Guide</a></li>\n</ul>\n\n","type":"String","default":"''","properties":null,"inheritdoc":null,"localdoc":"<p><strong>Note:</strong> This value is taken from the underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-iconCls","owner":"Ext.list.AbstractTreeItem","params":null,"return":null,"throws":null,"short_doc":"One or more space separated CSS classes to be applied to the icon element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"iconClsProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":105}],"doc":"<p>The property from the <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a> to map for the <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-iconCls\" rel=\"Ext.list.AbstractTreeItem-cfg-iconCls\" class=\"docClass\">iconCls</a> config.</p>\n","type":"String","default":"'iconCls'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-iconClsProperty","owner":"Ext.list.AbstractTreeItem","short_doc":"The property from the node to map for the iconCls config. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"indent","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":111}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":111,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-indent","owner":"Ext.list.AbstractTreeItem","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"instanceCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":456}],"doc":"<p>An extra CSS class or classes to augment the <a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> on an individual instance</p>\n","type":"String/String[]","default":null,"properties":null,"private":true,"since":"6.5.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-instanceCls","owner":"Ext.Widget","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"keyMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":88}],"doc":"<p>An object containing handlers for keyboard events. The property names of this\nobject are the key name and any modifiers. The values of the properties are the\ndescriptors of how to handle each event.</p>\n\n<p>The handler descriptor can be simply the handler function(either the\nliteral function or the method name), or it can be an object with these\nproperties:</p>\n\n<ul>\n<li><code>handler</code>: The function or its name to call to handle the event.</li>\n<li><code>scope</code>: The this pointer context (can be \"this\" or \"controller\").</li>\n<li><code>event</code>: An optional override of the key event to which to listen.</li>\n</ul>\n\n\n<p><strong>Important:</strong> Calls to <code>setKeyMap</code> do not replace the entire <code>keyMap</code> but\ninstead update the provided mappings. That is, unless <code>null</code> is passed as the\nvalue of the <code>keyMap</code> which will clear the <code>keyMap</code> of all entries.</p>\n","type":"Object","default":null,"properties":[{"tagname":"cfg","type":"String","name":"scope","optional":true,"doc":"<p>The default scope to apply to key handlers\nwhich do not specify a scope. This is processed the same way as the scope of\n<a href=\"#!/api/Ext.button.Button-cfg-listeners\" rel=\"Ext.button.Button-cfg-listeners\" class=\"docClass\">listeners</a>. It defaults to the <code>\"controller\"</code>, but using <code>'this'</code>\nmeans that an instance method will be used.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-keyMap","owner":"Ext.mixin.Keyboard","short_doc":"An object containing handlers for keyboard events. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"keyMapEnabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":164}],"doc":"<p>Enables or disables processing keys in the <code>keyMap</code>. This value starts as\n<code>null</code> and if it is <code>null</code> when <code>initKeyMap</code> is called, it will automatically\nbe set to <code>true</code>. Since <code>initKeyMap</code> is called by <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> at the\nproper time, this is not something application code normally handles.</p>\n","type":"Boolean","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-keyMapEnabled","owner":"Ext.mixin.Keyboard","short_doc":"Enables or disables processing keys in the keyMap. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"keyMapTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":174}],"doc":"<p>The name of the member that should be used to listen for keydown/keypress events.\nThis is intended to be controlled at the class level not per instance.</p>\n","type":"String","default":"'el'","properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-keyMapTarget","owner":"Ext.mixin.Keyboard","short_doc":"The name of the member that should be used to listen for keydown/keypress events. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"leaf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":77}],"doc":"<p><code>true</code> if this item is a leaf. This value is taken from\nthe underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-leaf","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this item is a leaf. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":289}],"doc":"<p>A config object containing one or more event handlers to be added to this object during\ninitialization. This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\",\n\"mouseover\" etc), this is usually only done when extra value can be added. For example\nthe <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>\nevent passing the node clicked on. To access DOM events directly from a child element\nof a Component, we need to specify the <code>element</code> option to identify the Component\nproperty to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","short_doc":"A config object containing one or more event handlers to be added to this object during\ninitialization. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"loading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":84}],"doc":"<p><code>true</code> if this item is currently loading data. This value is taken from\nthe underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-loading","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this item is currently loading data. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"margin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":223}],"doc":"<p>The margin to use on this Component. Can be specified as a number (in which\ncase all edges get the same margin) or a CSS string like '5 10 10 10'</p>\n","type":"Number/String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-margin","owner":"Ext.Widget","short_doc":"The margin to use on this Component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"name","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":370}],"doc":"<p>Name for the widget to be used with <a href=\"#!/api/Ext.container.Container-method-lookupName\" rel=\"Ext.container.Container-method-lookupName\" class=\"docClass\">Ext.Container.lookupName</a>\net al.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-name","owner":"Ext.Widget","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"nameable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":290}],"doc":"<p>Set to <code>true</code> for this component's <code>name</code> property to be tracked by its containing\n<code>nameHolder</code>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-nameable","owner":"Ext.mixin.Bindable","short_doc":"Set to true for this component's name property to be tracked by its containing\nnameHolder. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"node","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":119}],"doc":"<p>The backing node for this item.</p>\n","type":"Ext.data.TreeModel","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-node","owner":"Ext.list.AbstractTreeItem","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},{"tagname":"cfg","name":"over","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":125}],"doc":"<p>One of three possible values:</p>\n\n<ul>\n<li>0 if mouse is not over this item or any of its descendants.</li>\n<li>1 if mouse is not over this item but is over one of this item's descendants.</li>\n<li>2 if mouse is directly over this item.</li>\n</ul>\n\n","type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-over","owner":"Ext.list.AbstractTreeItem","short_doc":"One of three possible values:\n\n\n0 if mouse is not over this item or any of its descendants. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"owner","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":113}],"doc":"<p>The owning list for this container.</p>\n","type":"Ext.list.Tree","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-owner","owner":"Ext.list.AbstractTreeItem","html_type":"<a href=\"#!/api/Ext.list.Tree\" rel=\"Ext.list.Tree\" class=\"docClass\">Ext.list.Tree</a>"},{"tagname":"cfg","name":"parentItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":135}],"doc":"<p>The parent item for this item.</p>\n","type":"Ext.list.AbstractTreeItem","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-parentItem","owner":"Ext.list.AbstractTreeItem","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"},{"tagname":"cfg","name":"plugins","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":24}],"doc":"<p>This config describes one or more plugin config objects used to create plugin\ninstances for this component.</p>\n\n<p>Plugins are a way to bundle and reuse custom functionality. Plugins should extend\n<code><a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a></code> but technically the only requirement for a valid plugin\nis that it contain an <code>init</code> method that accepts a reference to its owner. Once\na plugin is created, the owner will call the <code>init</code> method, passing a reference\nto itself. Each plugin can then call methods or respond to events on its owner\nas needed to provide its functionality.</p>\n\n<p>This config's value can take several different forms.</p>\n\n<p>The value can be a single string with the plugin's <a href=\"#!/api/Ext.enums.Plugin\" rel=\"Ext.enums.Plugin\" class=\"docClass\">alias</a>:</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: 'listpaging'\n });\n</code></pre>\n\n<p>In the above examples, the string \"listpaging\" is the type alias for\n<code>Ext.dataview.plugin.ListPaging</code>. The full alias includes the \"plugin.\" prefix\n(i.e., 'plugin.listpaging').</p>\n\n<p>The preferred form for multiple plugins or to configure plugins is the\nkeyed-object form (new in version 6.5):</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: {\n         pullrefresh: true,\n         listpaging: {\n             autoPaging: true,\n             weight: 10\n         }\n     }\n });\n</code></pre>\n\n<p>The object keys are the <code>id</code>'s as well as the default type alias. This form\nallows the value of the <code>plugins</code> to be merged from base class to derived class\nand finally with the instance configuration. This allows classes to define a\nset of plugins that derived classes or instantiators can further configure or\ndisable. This merge behavior is a feature of the\nconfig system.</p>\n\n<p>The <code>plugins</code> config can also be an array of plugin aliases (arrays are not\nmerged so this form does not respect plugins defined by the class author):</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: ['listpaging', 'pullrefresh']\n });\n</code></pre>\n\n<p>An array can also contain elements that are config objects with a <code>type</code>\nproperty holding the type alias:</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: ['pullrefresh', {\n         type: 'listpaging',\n         autoPaging: true\n     }]\n });\n</code></pre>\n","type":"Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-plugins","owner":"Ext.mixin.Pluggable","short_doc":"This config describes one or more plugin config objects used to create plugin\ninstances for this component. ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.enums.Plugin\" rel=\"Ext.enums.Plugin\" class=\"docClass\">Ext.enums.Plugin</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},{"tagname":"cfg","name":"publishes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":102}],"doc":"<p>One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.</p>\n\n<p><strong>Note:</strong> We'll discuss publishing properties <strong>not</strong> found in the config block below.</p>\n\n<p>Values determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.</p>\n\n<p>This config uses the <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-reference\" rel=\"Ext.mixin.Bindable-cfg-reference\" class=\"docClass\">reference</a></code> to determine the name of the data\nobject to place in the <code>ViewModel</code>. If <code>reference</code> is not set then this config\nis ignored.</p>\n\n<p>By using this config and <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-reference\" rel=\"Ext.mixin.Bindable-cfg-reference\" class=\"docClass\">reference</a></code> you can bind configs between\ncomponents. For example:</p>\n\n<pre><code> ...\n     items: [{\n         xtype: 'textfield',\n         reference: 'somefield',  // component's name in the ViewModel\n         publishes: 'value' // value is not published by default\n     },{\n         ...\n     },{\n         xtype: 'displayfield',\n         bind: 'You have entered \"{somefield.value}\"'\n     }]\n ...\n</code></pre>\n\n<p>Classes must provide this config as an Object:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.foo.Bar', {\n     publishes: {\n         foo: true,\n         bar: true\n     }\n });\n</code></pre>\n\n<p>This is required for the config system to properly merge values from derived\nclasses.</p>\n\n<p>For instances this value can be specified as a value as show above or an array\nor object as follows:</p>\n\n<pre><code> {\n     xtype: 'textfield',\n     reference: 'somefield',\n     publishes: [\n         'value',\n         'rawValue',\n         'dirty'\n     ]\n }\n\n // This achieves the same result as the above array form.\n {\n     xtype: 'textfield',\n     reference: 'somefield',\n     publishes: {\n         value: true,\n         rawValue: true,\n         dirty: true\n     }\n }\n</code></pre>\n\n<p>In some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize <a href=\"#!/api/Ext.mixin.Bindable-method-publishState\" rel=\"Ext.mixin.Bindable-method-publishState\" class=\"docClass\">publishState</a>\nif the property has a  setter method. Let's use\n<a href=\"#!/api/Ext.form.Labelable-method-setFieldLabel\" rel=\"Ext.form.Labelable-method-setFieldLabel\" class=\"docClass\">setFieldLabel</a> as an example:</p>\n\n<pre><code>  setFieldLabel: function(fieldLabel) {\n      this.callParent(arguments);\n      this.publishState('fieldLabel', fieldLabel);\n  }        \n</code></pre>\n\n<p>With the above chunk of code, fieldLabel may now be published to the viewModel.</p>\n","type":"String/String[]/Object","default":null,"properties":null,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-publishes","owner":"Ext.mixin.Bindable","short_doc":"One or more names of config properties that this component should publish\nto its ViewModel. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"reference","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":304}],"doc":"<p>Specifies a name for this component inside its component hierarchy. This name\nmust be unique within its <a href=\"#!/api/Ext.container.Container-cfg-referenceHolder\" rel=\"Ext.container.Container-cfg-referenceHolder\" class=\"docClass\">view</a>\nor its <a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">ViewController</a>. See the documentation in\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> for more information about references.</p>\n\n<p><strong>Note</strong>: Valid identifiers start with a letter or underscore and are followed\nby zero or more additional letters, underscores or digits. References are case\nsensitive.</p>\n","type":"String","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-reference","owner":"Ext.mixin.Bindable","short_doc":"Specifies a name for this component inside its component hierarchy. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"renderTo","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2288}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2288,"type":"Object","default":null,"accessor":true,"evented":null,"id":"cfg-renderTo","owner":"Ext.Widget","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"ripple","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":408}],"doc":"<p>Set to truthy, Color or Object value for the ripple.</p>\n","type":"Boolean/Object/String","default":null,"properties":[{"tagname":"cfg","type":"String","name":"color","doc":"<p>The background color of the ripple.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","type":"Array","name":"position","doc":"<p>Position for the ripple to start at [x,y].\nDetermines if a Ripple effect should happen whenever this element is pressed.</p>\n\n\n\n\n<p>For example:\n     {\n         ripple: true\n     }</p>\n\n\n\n\n<p>Or:</p>\n\n\n\n\n<pre><code> {\n     ripple: {\n         color: 'red'\n     }\n }\n</code></pre>\n\n\n\n\n<p>For complex components, individual elements can suppress ripples by adding the\n<code>x-no-ripple</code> class to disable rippling for a tree of elements.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"since":"6.5.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-ripple","owner":"Ext.Widget","short_doc":"Set to truthy, Color or Object value for the ripple. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"selected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":91}],"doc":"<p><code>true</code> if this is the selected item in the tree.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-selected","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this is the selected item in the tree. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"selectedParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":97}],"doc":"<p><code>true</code> if this item contains the <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-selected\" rel=\"Ext.list.AbstractTreeItem-cfg-selected\" class=\"docClass\">selected</a> item in the tree.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-selectedParent","owner":"Ext.list.AbstractTreeItem","short_doc":"true if this item contains the selected item in the tree. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"session","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"doc":"<p>If provided this creates a new <code>Session</code> instance for this component. If this\nis a <code>Container</code>, this will then be inherited by all child components.</p>\n\n<p>To create a new session you can specify <code>true</code>:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'viewport',\n     session: true,\n\n     items: [{\n         ...\n     }]\n });\n</code></pre>\n\n<p>Alternatively, a config object can be provided:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'viewport',\n     session: {\n         ...\n     },\n\n     items: [{\n         ...\n     }]\n });\n</code></pre>\n","type":"Boolean/Object/Ext.data.Session","default":"null","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-session","owner":"Ext.mixin.Bindable","short_doc":"If provided this creates a new Session instance for this component. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},{"tagname":"cfg","name":"shareableName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":297}],"doc":"<p>Set to <code>true</code> to allow this component's <code>name</code> to be shared by other items in the\nsame <code>nameHolder</code>. Such items will be returned in an array from <code>lookupName</code>.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-shareableName","owner":"Ext.mixin.Bindable","short_doc":"Set to true to allow this component's name to be shared by other items in the\nsame nameHolder. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"style","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":230}],"doc":"<p>Additional CSS styles that will be rendered into an inline style attribute when\nthe widget is rendered.</p>\n\n<p>You can pass either a string syntax:</p>\n\n<pre><code>style: 'background:red'\n</code></pre>\n\n<p>Or by using an object:</p>\n\n<pre><code>style: {\n    background: 'red'\n}\n</code></pre>\n\n<p>When using the object syntax, you can define CSS Properties by using a string:</p>\n\n<pre><code>style: {\n    'border-left': '1px solid red'\n}\n</code></pre>\n\n<p>Although the object syntax is much easier to read, we suggest you to use the\nstring syntax for better performance.\nset</p>\n","type":"String/Object","default":null,"properties":null,"accessor":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"evented":null,"id":"cfg-style","owner":"Ext.Widget","short_doc":"Additional CSS styles that will be rendered into an inline style attribute when\nthe widget is rendered. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"text","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":141}],"doc":"<p>The text for this item. This value is taken from\nthe underlying <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","type":"String","default":"{lazy: true, $value: ''}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-text","owner":"Ext.list.AbstractTreeItem","short_doc":"The text for this item. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"textProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":151}],"doc":"<p>The property from the <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a> to map for the <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-text\" rel=\"Ext.list.AbstractTreeItem-cfg-text\" class=\"docClass\">text</a> config.</p>\n","type":"String","default":"'text'","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-textProperty","owner":"Ext.list.AbstractTreeItem","short_doc":"The property from the node to map for the text config. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"touchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":302}],"doc":"<p>Emulates the behavior of the CSS\n<a href=\"https://www.w3.org/TR/pointerevents/#the-touch-action-css-property\">touch-action</a>\nproperty in a cross-browser compatible manner.</p>\n\n<p>Keys in this object are touch action names, and values are <code>false</code> to disable\na touch action or <code>true</code> to enable it.  Accepted keys are:</p>\n\n<ul>\n<li><code>panX</code></li>\n<li><code>panY</code></li>\n<li><code>pinchZoom</code></li>\n<li><code>doubleTapZoom</code></li>\n</ul>\n\n\n<p>All touch actions are enabled (<code>true</code>) by default, so it is usually only necessary\nto specify which touch actions to disable.  For example, the following disables\nonly horizontal scrolling and pinch-to-zoom on the component's main element:</p>\n\n<pre><code>touchAction: {\n    panX: false,\n    pinchZoom: false\n}\n</code></pre>\n\n<p>Touch actions can be specified on reference elements using the reference element\nname, for example:</p>\n\n<pre><code>// disables horizontal scrolling on the main element, and double-tap-zoom\n// on the child element named \"body\"\ntouchAction: {\n    panY: false\n    body: {\n        doubleTapZoom: false\n    }\n}\n</code></pre>\n\n<p>The primary motivation for setting the touch-action of an element is to prevent\nthe browser's default handling of a gesture such as pinch-to-zoom, or\ndrag-to-scroll, so that the application can implement its own handling of that\ngesture on the element.  Suppose, for example, a component has a custom drag\nhandler on its element and wishes to prevent horizontal scrolling of its container\nwhile it is being dragged:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>', {\n    touchAction: {\n        panX: false\n    },\n    listeners: {\n        drag: function(e) {\n            // implement drag logic\n        }\n    }\n});\n</code></pre>\n","type":"Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-touchAction","owner":"Ext.Widget","short_doc":"Emulates the behavior of the CSS\ntouch-action\nproperty in a cross-browser compatible manner. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"twoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"doc":"<p>This object holds a map of <code>config</code> properties that will update their binding\nas they are modified. For example, <code>value</code> is a key added by form fields. The\nform of this config is the same as <code>cfg!publishes</code>.</p>\n\n<p>This config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.</p>\n","type":"String/String[]/Object","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-twoWayBindable","owner":"Ext.mixin.Bindable","short_doc":"This object holds a map of config properties that will update their binding\nas they are modified. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"ui","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":384}],"doc":"<p>The ui or uis to be used on this Component</p>\n\n<p>When a ui is configured, CSS class names are added to the <a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a>, created\nby appending the ui name(s) to each <a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> and/or <a href=\"#!/api/Ext.Widget-property-baseCls\" rel=\"Ext.Widget-property-baseCls\" class=\"docClass\">baseCls</a>.</p>\n","type":"String/String[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-ui","owner":"Ext.Widget","short_doc":"The ui or uis to be used on this Component\n\nWhen a ui is configured, CSS class names are added to the element, create...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"userCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":392}],"doc":"<p>One or more CSS classes to add to the component's primary element. This config\nis intended solely for use by the component instantiator (the \"user\"), not by\nderived classes.</p>\n\n<p>For example:</p>\n\n<pre><code> items: [{\n     xtype: 'button',\n     userCls: 'my-button'\n ...\n }]\n</code></pre>\n","type":"String/String[]","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-userCls","owner":"Ext.Widget","short_doc":"One or more CSS classes to add to the component's primary element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"viewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"doc":"<p>The <code>ViewModel</code> is a data provider for this component and its children. The\ndata contained in the <code>ViewModel</code> is typically used by adding <code>bind</code> configs\nto the components that want present or edit this data.</p>\n\n<p>When set, the <code>ViewModel</code> is created and links to any inherited <code>viewModel</code>\ninstance from an ancestor container as the \"parent\". The <code>ViewModel</code> hierarchy,\nonce established, only supports creation or destruction of children. The\nparent of a <code>ViewModel</code> cannot be changed on the fly.</p>\n\n<p>If this is a root-level <code>ViewModel</code>, the data model connection is made to this\ncomponent's associated <code><a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Data Session</a></code>. This is\ndetermined by calling <code>getInheritedSession</code>.</p>\n","type":"String/Object/Ext.app.ViewModel","default":"{$value: null, lazy: true}","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":true,"evented":null,"id":"cfg-viewModel","owner":"Ext.mixin.Bindable","short_doc":"The ViewModel is a data provider for this component and its children. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},{"tagname":"cfg","name":"width","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":468}],"doc":"<p>The width of this Component; must be a valid CSS length value, e.g: <code>300</code>, <code>100px</code>,\n<code>30%</code>, etc. By default, if this is not explicitly set, this Component's element will\nsimply have its own natural size. If set to <code>auto</code>, it will set the width to <code>null</code>\nmeaning it will have its own natural size.</p>\n","type":"Number/String","default":null,"properties":null,"accessor":true,"evented":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"cfg-width","owner":"Ext.Widget","short_doc":"The width of this Component; must be a valid CSS length value, e.g: 300, 100px,\n30%, etc. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"String","default":"'Ext.Base'","readonly":null,"id":"property-S-className","owner":"Ext.Base","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","type":"Boolean","default":"true","properties":null,"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2274}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2274,"type":"Boolean","default":"false","readonly":null,"id":"property-S-configStrict","owner":"Ext.Widget","overrides":[{"name":"$configStrict","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configStrict\" rel=\"Ext.Base-property-S-configStrict\" class=\"docClass\">Ext.Base.$configStrict</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","type":"Object/Array","default":"{}","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-S-configTransforms","owner":"Ext.Base","short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Object","default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","readonly":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$isFocusableEntity","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":7}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":7,"type":"Boolean","default":"true","readonly":null,"id":"property-S-isFocusableEntity","owner":"Ext.mixin.Focusable","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"ariaEl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":567}],"doc":"<p>The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element.\nThis property will be replaced with the actual Element reference after rendering.</p>\n\n<p>Most of the simple Components will have their main element as ariaEl.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":567,"type":"String","default":"'element'","readonly":null,"id":"property-ariaEl","owner":"Ext.Widget","overrides":[{"name":"ariaEl","owner":"Ext.mixin.Accessible","link":"<a href=\"#!/api/Ext.mixin.Accessible-property-ariaEl\" rel=\"Ext.mixin.Accessible-property-ariaEl\" class=\"docClass\">Ext.mixin.Accessible.ariaEl</a>"}],"params":null,"return":null,"throws":null,"properties":null,"short_doc":"The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"ariaRenderAttributes","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":59}],"doc":"<p><strong>Instance specific</strong> ARIA attributes\nto render into Component's ariaEl. This object is only used during rendering,\nand is discarded afterwards.</p>\n","type":"Object","default":null,"properties":null,"private":true,"id":"property-ariaRenderAttributes","owner":"Ext.mixin.Accessible","short_doc":"Instance specific ARIA attributes\nto render into Component's ariaEl. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"ariaRole","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":52}],"doc":"<p>ARIA role for this Component, defaults to no role.\nWith no role, no other ARIA attributes are set.</p>\n","type":"String","default":null,"properties":null,"readonly":true,"id":"property-ariaRole","owner":"Ext.mixin.Accessible","short_doc":"ARIA role for this Component, defaults to no role. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"baseCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":518}],"doc":"<p>The base CSS class to apply to this widget's element.\nUsed as the prefix for <a href=\"#!/api/Ext.Widget-cfg-ui\" rel=\"Ext.Widget-cfg-ui\" class=\"docClass\">ui</a>-specific class names.\nDefaults to the value of <a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> or (<code>x-</code> + the xtype) of the widget\nif <a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> is <code>null</code></p>\n","protected":true,"default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","readonly":null,"id":"property-baseCls","owner":"Ext.Widget","short_doc":"The base CSS class to apply to this widget's element. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"borderedCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":578}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":578,"type":"String","default":"Ext.baseCSSPrefix + 'bordered'","readonly":null,"id":"property-borderedCls","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"classCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":528}],"doc":"<p>A CSS class to apply to the main element that will be inherited down the class\nhierarchy.  Subclasses may override this property on their prototype to add their\nown CSS class in addition to the CSS classes inherited from ancestor classes via\nthe prototype chain.  For example</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>',\n    classCls: 'foo'\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bar', {\n    extend: 'Foo',\n    classCls: 'bar'\n});\n\nvar bar = new Bar();\n\nconsole.log(bar.element.className); // outputs 'foo bar'\n</code></pre>\n","protected":true,"default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Object","readonly":null,"id":"property-classCls","owner":"Ext.Widget","short_doc":"A CSS class to apply to the main element that will be inherited down the class\nhierarchy. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"classClsList","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":562}],"doc":"<p>default empty classClsList since <a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a> has no classCls of its own</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"property-classClsList","owner":"Ext.Widget","short_doc":"default empty classClsList since Ext.Widget has no classCls of its own ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"classClsRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":553}],"doc":"<p>When set to <code>true</code> during widget class definition, that class will be the \"root\" for\n<a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> inheritance. Derived classes may set this to <code>true</code> to avoid\ninheriting a <a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a> from their superclass.</p>\n","default":"true","properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"type":"Boolean","readonly":null,"id":"property-classClsRoot","owner":"Ext.Widget","short_doc":"When set to true during widget class definition, that class will be the \"root\" for\nclassCls inheritance. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":565}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":565,"type":"Boolean/\"async\"","default":"'async'","readonly":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Widget","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-clearPropertiesOnDestroy\" rel=\"Ext.Base-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Base.clearPropertiesOnDestroy</a>"}],"properties":null,"protected":true,"since":"6.2.0","short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","type":"Boolean","default":"false","properties":null,"private":true,"since":"6.2.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"containsFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":34}],"doc":"<p><code>true</code> if this currently focused element\nis within this Component's or Container's hierarchy. This property is set separately\nfrom <a href=\"#!/api/Ext.mixin.Focusable-property-hasFocus\" rel=\"Ext.mixin.Focusable-property-hasFocus\" class=\"docClass\">hasFocus</a>, and can be <code>true</code> when <code>hasFocus</code> is <code>false</code>.</p>\n\n<p>Examples:</p>\n\n<ul>\n<li><p>Text field with input element focused would be:\n   focusable: true,\n   hasFocus: true,\n   containsFocus: true</p></li>\n<li><p>Date field with drop-down picker currently focused would be:\n   focusable: true,\n   hasFocus: false,\n   containsFocus: true</p></li>\n<li><p>Form Panel with a child input field currently focused would be:\n   focusable: false,\n   hasFocus: false,\n   containsFocus: true</p></li>\n</ul>\n\n\n<p>See also <a href=\"#!/api/Ext.mixin.Focusable-property-hasFocus\" rel=\"Ext.mixin.Focusable-property-hasFocus\" class=\"docClass\">hasFocus</a>.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-containsFocus","owner":"Ext.mixin.Focusable","short_doc":"true if this currently focused element\nis within this Component's or Container's hierarchy. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"dataXid","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1131}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1131,"type":"Object","default":null,"readonly":null,"id":"property-dataXid","owner":"Ext.Widget","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"defaultBindProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":270}],"doc":"<p>This property is used to determine the property of a <code>bind</code> config that is just\nthe value. For example, if <code>defaultBindProperty=\"value\"</code>, then this shorthand\n<code>bind</code> config:</p>\n\n<pre><code> bind: '{name}'\n</code></pre>\n\n<p>Is equivalent to this object form:</p>\n\n<pre><code> bind: {\n     value: '{name}'\n }\n</code></pre>\n\n<p>The <code>defaultBindProperty</code> is set to \"value\" for form fields and to \"store\" for\ngrids and trees.</p>\n","type":"String","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-defaultBindProperty","owner":"Ext.mixin.Bindable","short_doc":"This property is used to determine the property of a bind config that is just\nthe value. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","type":"Boolean","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-destroyed","owner":"Ext.Base","short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"disabledCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":579}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":579,"type":"String","default":"Ext.baseCSSPrefix + 'disabled'","readonly":null,"id":"property-disabledCls","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"element","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":85}],"doc":"<p>A configuration object for <a href=\"#!/api/Ext.dom.Element-static-method-create\" rel=\"Ext.dom.Element-static-method-create\" class=\"docClass\">Ext.Element.create</a>() that is used to create the Element\ntemplate.  Subclasses should avoid overriding this property and instead add elements\nusing <a href=\"#!/api/Ext.Widget-property-template\" rel=\"Ext.Widget-property-template\" class=\"docClass\">template</a>.</p>\n\n<p>Supports all the standard options of a <a href=\"#!/api/Ext.dom.Element-static-method-create\" rel=\"Ext.dom.Element-static-method-create\" class=\"docClass\">Ext.Element.create</a>() config and adds 3\nadditional options:</p>\n\n<ol>\n<li><p><code>reference</code> - this option specifies a name for Element references.  These\nreferences names become properties of the Widget instance and refer to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>\ninstances that were created using the template:</p>\n\n<pre><code>   element: {\n       reference: 'element',\n       children: [{\n           reference: 'innerElement'\n       }]\n   }\n</code></pre></li>\n</ol>\n\n\n<p>After construction of a widget the reference elements are accessible as follows:</p>\n\n<pre><code>var foo = new FooWidget(),\n    innerEl = foo.innerElement; // an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> that wraps the innerElement\n</code></pre>\n\n<p>The reference attribute is optional, but all Widgets must have a <code>'element'</code>\nreference on some element within the template (usually the outermost one).</p>\n\n<ol>\n<li><p><code>listeners</code> - a standard listeners object as specified by <a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>.</p>\n\n<pre><code>  element: {\n      reference: 'element',\n      listeners: {\n          click: 'onClick'\n      },\n      children: [{\n          reference: 'innerElement',\n          listeners: {\n              click: 'onInnerClick'\n          }\n      }]\n  }\n</code></pre></li>\n</ol>\n\n\n<p>Since listeners cannot be attached without an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> reference the <code>reference</code>\nproperty MUST be specified in order to use <code>listeners</code>.</p>\n\n<p>The Widget instance is used as the scope for all listeners specified in this way,\nso it is invalid to use the <code>scope</code> option in the <code>listeners</code> config since it will\nalways be overwritten using <code>this</code>.</p>\n\n<ol>\n<li><code>uiCls</code> - a suffix to be appended to the ui-specific CSS class for each <code><a href=\"#!/api/Ext.Widget-cfg-ui\" rel=\"Ext.Widget-cfg-ui\" class=\"docClass\">ui</a></code>\nfor this widget.  These ui classes are constructed by appending the <code>ui</code> to each\n<code><a href=\"#!/api/Ext.Widget-property-classCls\" rel=\"Ext.Widget-property-classCls\" class=\"docClass\">classCls</a></code> or <code><a href=\"#!/api/Ext.Widget-property-baseCls\" rel=\"Ext.Widget-property-baseCls\" class=\"docClass\">baseCls</a></code> for the widget.  As such, <code>uiCls</code> should\nnever be used on the main <code>element</code> reference, as its <code>uiCls</code> is computed automatically.</li>\n</ol>\n\n\n<p>For example, assume a widget is defined with a <code>ui</code> of <code>'alt action'</code> and a\n<code>uiCls</code> of <code>'inner-el'</code> on its <code>innerElement</code> reference element:</p>\n\n<pre><code>     <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Doodad', {\n         extend: '<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>',\n         xtype: 'doodad',\n\n         classCls: 'x-doodad',\n\n         ui: 'alt action',\n\n         element: {\n             reference: 'element',\n\n             children: [{\n                 reference: 'innerElement',\n                 cls: 'x-inner-el',\n                 uiCls: 'inner-el'\n             }]\n         }\n     });\n</code></pre>\n\n<p>This would result in the following markup when rendered:</p>\n\n<pre><code>&lt;div class=\"x-doodad x-doodad-alt x-doodad-action\"&gt;\n    &lt;div class=\"x-inner-el x-doodad-inner-el x-doodad-alt-inner-el x-doodad-action-inner-el\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>These additional classes can be used to style the reference element for a particular\nui; however, use of <code>uiCls</code> is not typically necessary or recommended.  Reference\nelements should usually be styled using simple descendant selectors:</p>\n\n<pre><code>.x-doodad-alt .x-inner-el {\n    color: red;\n}\n</code></pre>\n\n<p>When there is a possibility that widgets can be nested it is best to use direct\nchild selectors to avoid the possibility of selecting all descendants instead\nof just the reference element for the intended widget:</p>\n\n<pre><code>.x-doodad-alt &gt; .x-inner-el {\n    color: red;\n}\n</code></pre>\n\n<p>Only use <code>uiCls</code> when there is a possibility of nesting, AND there may be a variable\nnumber of elements between the main <code>element</code> and the reference element in question.\nFor example, <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a> with docked items has a different number of elements\nin between its <code>element</code> and its <code>bodyElement</code> than a Container without docked items\nbecause of the wrapping elements that are dynamically added to support docking.\nTo ensure it does not style all descendants it must use a <code>uiCls</code> to style its\n<code>bodyElement</code>:</p>\n\n<pre><code>.x-container-alt-body-el {\n    background: #fff;\n}\n</code></pre>\n\n<p>Note that when <code>uiCls</code> is specified it also adds a class name that does not contain\nthe <code>ui</code> using just the <code>classCls</code> and/or <code>baseCls</code> as the prefix.  This class name\ncan be used for base-level styling that does not relate to any particular UI:</p>\n\n<pre><code>.x-container-body-el {\n    position: relative;\n}\n</code></pre>\n","type":"Object","default":"{reference: 'element'}","properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-element","owner":"Ext.Widget","short_doc":"A configuration object for Ext.Element.create() that is used to create the Element\ntemplate. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"type":"Number","default":"0","readonly":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":77}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":77,"type":"Object","default":"{creator: null, defaultProperty: 'xtype', defaultType: 'component', typeProperty: 'xtype'}","readonly":null,"id":"property-factoryConfig","owner":"Ext.Widget","overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"properties":null,"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"focusClsEl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":76}],"doc":"<p>The element that will have the\n<a href=\"#!/api/Ext.mixin.Focusable-cfg-focusCls\" rel=\"Ext.mixin.Focusable-cfg-focusCls\" class=\"docClass\">focusCls</a> applied when component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is focused.</p>\n","type":"Ext.dom.Element","default":null,"properties":null,"id":"property-focusClsEl","owner":"Ext.mixin.Focusable","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"focusEl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":566}],"doc":"<p>The element that will be focused\nwhen method!focus method is called on this component. Usually this is\nthe same element that receives focus via mouse clicks, taps, and pressing\nTab key.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":566,"type":"Ext.dom.Element","default":"'element'","readonly":null,"id":"property-focusEl","owner":"Ext.Widget","overrides":[{"name":"focusEl","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">Ext.mixin.Focusable.focusEl</a>"}],"properties":null,"short_doc":"The element that will be focused\nwhen method!focus method is called on this component. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"focusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":11}],"doc":"<p><code>true</code> for keyboard interactive Components or Widgets, <code>false</code> otherwise.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See <a href=\"#!/api/Ext.mixin.Focusable-method-isFocusable\" rel=\"Ext.mixin.Focusable-method-isFocusable\" class=\"docClass\">isFocusable</a>.</p>\n\n<p><strong>Note:</strong> It is not enough to set this property to <code>true</code> to make\na component keyboard interactive. You also need to make sure that\nthe component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is reachable via Tab key (tabbable).\nSee also tabIndex.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-focusable","owner":"Ext.mixin.Focusable","short_doc":"true for keyboard interactive Components or Widgets, false otherwise. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"hasFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":26}],"doc":"<p><code>true</code> if this component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is focused.\nSee also <a href=\"#!/api/Ext.mixin.Focusable-property-containsFocus\" rel=\"Ext.mixin.Focusable-property-containsFocus\" class=\"docClass\">containsFocus</a>.</p>\n","type":"Boolean","default":"false","properties":null,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-hasFocus","owner":"Ext.mixin.Focusable","short_doc":"true if this component's focusEl is focused. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","type":"Object","default":null,"properties":null,"readonly":true,"id":"property-hasListeners","owner":"Ext.mixin.Observable","short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"heightedCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":580}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":580,"type":"String","default":"Ext.baseCSSPrefix + 'heighted'","readonly":null,"id":"property-heightedCls","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"initialized","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Evented.js","linenr":11}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":11,"type":"Boolean","default":"false","readonly":null,"id":"property-initialized","owner":"Ext.Evented","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isComponent","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2276}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2276,"type":"Boolean","default":"true","readonly":null,"id":"property-isComponent","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isConfiguring","owner":"Ext.Base","short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","type":"Boolean","default":"false","properties":null,"protected":true,"readonly":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isFirstInstance","owner":"Ext.Base","short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","type":"Boolean","default":"true","properties":null,"protected":true,"readonly":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"id":"property-isInstance","owner":"Ext.Base","short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","type":"Boolean","default":"true","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isTreeListItem","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":8}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":8,"type":"Boolean","default":"true","readonly":null,"id":"property-isTreeListItem","owner":"Ext.list.AbstractTreeItem","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isWidget","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":75}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":75,"type":"Boolean","default":"true","readonly":null,"id":"property-isWidget","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"lastKeyMapEvent","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":80}],"doc":"<p>The last key event processed is cached on the component for use in subsequent\nevent handlers.</p>\n","type":"Ext.event.Event","default":null,"properties":null,"since":"6.6.0","id":"property-lastKeyMapEvent","owner":"Ext.mixin.Keyboard","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"property","name":"liquidLayout","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2278}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2278,"type":"Boolean","default":"true","readonly":null,"id":"property-liquidLayout","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"mixinConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":10}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":10,"type":"Object","default":"{id: 'accessible'}","readonly":null,"id":"property-mixinConfig","owner":"Ext.mixin.Accessible","overrides":[{"name":"mixinConfig","owner":"Ext.mixin.ComponentDelegation","link":"<a href=\"#!/api/Ext.mixin.ComponentDelegation-property-mixinConfig\" rel=\"Ext.mixin.ComponentDelegation-property-mixinConfig\" class=\"docClass\">Ext.mixin.ComponentDelegation.mixinConfig</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":5}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":5,"type":"String","default":"'focusable'","readonly":null,"id":"property-mixinId","owner":"Ext.mixin.Focusable","overrides":[{"name":"mixinId","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-property-mixinId\" rel=\"Ext.state.Stateful-property-mixinId\" class=\"docClass\">Ext.state.Stateful.mixinId</a>"},{"name":"mixinId","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-mixinId\" rel=\"Ext.mixin.Factoryable-property-mixinId\" class=\"docClass\">Ext.mixin.Factoryable.mixinId</a>"},{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"noBorderCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":571}],"doc":"<p>The CSS class to add to this component should not have\na border.</p>\n","type":"String","default":"Ext.baseCSSPrefix + 'noborder-trbl'","properties":null,"private":true,"readonly":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"id":"property-noBorderCls","owner":"Ext.Widget","short_doc":"The CSS class to add to this component should not have\na border. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"observableType","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":209}],"doc":"<p>eslint-enable</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"String","default":"'component'","readonly":null,"id":"property-observableType","owner":"Ext.Widget","short_doc":"eslint-enable ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":511}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":511,"type":"Object","default":null,"readonly":null,"id":"property-privates","owner":"Ext.list.AbstractTreeItem","params":null,"return":null,"throws":null,"properties":null,"overrides":[{"name":"privates","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-privates\" rel=\"Ext.Widget-property-privates\" class=\"docClass\">Ext.Widget.privates</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"rendered","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2280}],"doc":"<p>in Ext JS the rendered flag is set as soon as a component has its element.  Since\nwidgets always have an element when constructed, they are always considered to be\n\"rendered\"</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"type":"Boolean","default":"true","readonly":null,"id":"property-rendered","owner":"Ext.Widget","short_doc":"in Ext JS the rendered flag is set as soon as a component has its element. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"rendering","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2285}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2285,"type":"Boolean","default":"true","readonly":null,"id":"property-rendering","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","type":"Ext.Class","default":null,"properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-self","owner":"Ext.Base","short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"spaceRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":569}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":569,"type":"RegExp","default":"/\\s+/","readonly":null,"id":"property-spaceRe","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"template","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":509}],"doc":"<p>An array of child elements to use as the children of the main element in the {@link</p>\n\n<h1>element} template.  Only used if \"children\" are not specified explicitly in the</h1>\n\n<p><a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> template.</p>\n","type":"Array","default":"[]","properties":null,"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-template","owner":"Ext.Widget","short_doc":"An array of child elements to use as the children of the main element in the {@link\n\nelement} template. ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"uiReferences","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":976}],"doc":"<p>A map that tracks all reference elements configured with a <code>uiCls</code>.\nContains the <code>element</code> reference by default since the <code>element</code> always gets\nnon-suffixed ui-specific CSS class names added to it (see syncUiCls)</p>\n","type":"Object","default":null,"properties":null,"private":true,"id":"property-uiReferences","owner":"Ext.Widget","short_doc":"A map that tracks all reference elements configured with a uiCls. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"validRefRe","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":317}],"doc":"<p>Regular expression used for validating <code>reference</code> values.</p>\n","type":"RegExp","default":"/^[a-z_][a-z0-9_]*$/i","properties":null,"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"readonly":null,"id":"property-validRefRe","owner":"Ext.mixin.Bindable","short_doc":"Regular expression used for validating reference values. ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"widthedCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":581}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":581,"type":"String","default":"Ext.baseCSSPrefix + 'widthed'","readonly":null,"id":"property-widthedCls","owner":"Ext.Widget","short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"type":"Array","default":"[]","readonly":null,"id":"static-property-S-onExtended","owner":"Ext.Base","short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2291}],"doc":"\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":2291,"params":[{"name":"config","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["callParent","getComponentLayout","getRenderTo","render"],"id":"method-constructor","owner":"Ext.Widget","overrides":[{"name":"constructor","owner":"Ext.Evented","link":"<a href=\"#!/api/Ext.Evented-method-constructor\" rel=\"Ext.Evented-method-constructor\" class=\"docClass\">Ext.Evented.constructor</a>"}],"return":{"type":"Ext.Widget","doc":"\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},"short_doc":" ..."},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","private":true,"params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","short_doc":"Adds declarative listeners as nested arrays of listener objects. ..."},{"tagname":"method","name":"_fixReference","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":414}],"doc":"<p>Sets up a reference on our current reference holder.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["lookupNameHolder","lookupReferenceHolder"],"id":"method-_fixReference","owner":"Ext.mixin.Inheritable","short_doc":"Sets up a reference on our current reference holder. ..."},{"tagname":"method","name":"activatePlugin","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":275}],"doc":"<p>Creates a particular plugin type if defined in the <code>plugins</code> configuration.</p>\n","params":[{"tagname":"params","type":"String","name":"type","doc":"<p>The <code>type</code> of the plugin.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>The plugin that was created.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"private":true,"since":"6.2.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createPlugin"],"id":"method-activatePlugin","owner":"Ext.mixin.Pluggable","short_doc":"Creates a particular plugin type if defined in the plugins configuration. ..."},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","short_doc":"Alias for onAfter. ..."},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Alias for onBefore. ..."},{"tagname":"method","name":"addCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1316}],"doc":"<p>Adds a CSS class (or classes) to this Component's rendered element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The CSS class(es) to add.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String","name":"prefix","default":"\"\"","optional":true,"doc":"<p>Optional prefix to add to each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"suffix","default":"\"\"","optional":true,"doc":"<p>Optional suffix to add to each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addCls","owner":"Ext.Widget","short_doc":"Adds a CSS class (or classes) to this Component's rendered element. ..."},{"tagname":"method","name":"addClsWithUI","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2306}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2306,"params":[{"name":"cls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addClsWithUI","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"addDelegatedListener","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":13}],"doc":"<p>Adds a listeners with the \"delegate\" event option.  Users should not invoke this\nmethod directly.  Use the \"delegate\" event option of\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> instead.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"eventName","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"options","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"order","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"caller","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"manager","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-addDelegatedListener","owner":"Ext.mixin.ComponentDelegation","short_doc":"Adds a listeners with the \"delegate\" event option. ..."},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"deprecations","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getConfigurator"],"id":"method-addDeprecations","owner":"Ext.Base","short_doc":"This method applies a versioned, deprecation declaration to this class. ..."},{"tagname":"method","name":"addElementReference","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1759}],"doc":"<p>Adds an element reference to this Widget instance.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the reference</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"HTMLElement","name":"domNode","doc":"\n","html_type":"HTMLElement"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-addElementReference","owner":"Ext.Widget","short_doc":"Adds an element reference to this Widget instance. ..."},{"tagname":"method","name":"addElementReferenceOnDemand","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1722}],"doc":"<p>Reduces instantiation time for a Widget by lazily instantiating <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>\nreferences the first time they are used.  This optimization only works for elements\nwith no listeners specified.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the reference</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"HTMLElement","name":"domNode","doc":"\n","html_type":"HTMLElement"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addElementReference"],"id":"method-addElementReferenceOnDemand","owner":"Ext.Widget","short_doc":"Reduces instantiation time for a Widget by lazily instantiating Ext.Element\nreferences the first time they are used. ..."},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"capture","optional":true,"doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener"],"id":"method-addListener","owner":"Ext.mixin.Observable","short_doc":"The on method is shorthand for\naddListener. ..."},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addManagedListener"],"id":"method-addManagedListener","owner":"Ext.mixin.Observable","short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o..."},{"tagname":"method","name":"addPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":104}],"doc":"<p>Adds a plugin. For example:</p>\n\n<pre><code> list.addPlugin('pullrefresh');\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code> list.addPlugin({\n     type: 'pullrefresh',\n     pullRefreshText: 'Pull to refresh...'\n });\n</code></pre>\n","params":[{"tagname":"params","type":"Object/String/Ext.plugin.Abstract","name":"plugin","doc":"<p>The plugin or config object or\nalias to add.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"}],"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createPlugin","getPlugins","setPlugins"],"id":"method-addPlugin","owner":"Ext.mixin.Pluggable","short_doc":"Adds a plugin. ..."},{"tagname":"method","name":"afterCachedConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":639}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":639,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-afterCachedConfig","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"afterComponentLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2310}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2310,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-afterComponentLayout","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyBind","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":547}],"doc":"\n","params":[{"tagname":"params","type":"String/Object","name":"binds","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"currentBindings","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getTwoWayBindable","lookupViewModel","watchConfig"],"id":"method-applyBind","owner":"Ext.mixin.Bindable","short_doc":" ..."},{"tagname":"method","name":"applyCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1328}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1328,"params":[{"name":"cls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyCls","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyDisabled","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":679}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":679,"params":[{"name":"disabled","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyDisabled","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":767}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":767,"params":[{"name":"height","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["filterLengthValue"],"id":"method-applyHeight","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyHidden","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":675}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":675,"params":[{"name":"hidden","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyHidden","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyPlugins","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":314}],"doc":"<p>Applier for the <code>plugins</code> config property.</p>\n","params":[{"tagname":"params","type":"String[]/Object[]/Ext.plugin.Abstract[]","name":"plugins","doc":"<p>The new plugins to use.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>[]"},{"tagname":"params","type":"Ext.plugin.Abstract[]","name":"oldPlugins","doc":"<p>The existing plugins in use.</p>\n","html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createPlugin"],"id":"method-applyPlugins","owner":"Ext.mixin.Pluggable","short_doc":"Applier for the plugins config property. ..."},{"tagname":"method","name":"applySession","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":657}],"doc":"<p>Transforms a Session config to a proper instance.</p>\n","params":[{"tagname":"params","type":"Object","name":"session","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.data.Session","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["lookupSession"],"id":"method-applySession","owner":"Ext.mixin.Bindable","short_doc":"Transforms a Session config to a proper instance. ..."},{"tagname":"method","name":"applyStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1486}],"doc":"\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"style","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldStyle","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyStyle","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyTouchAction","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":755}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":755,"params":[{"name":"touchAction","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldTouchAction","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyTouchAction","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyUi","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1332}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1332,"params":[{"name":"ui","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["parseUi"],"id":"method-applyUi","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"applyViewModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":688}],"doc":"<p>Transforms a ViewModel config to a proper instance.</p>\n","params":[{"tagname":"params","type":"String/Object/Ext.app.ViewModel","name":"viewModel","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"}],"return":{"type":"Ext.app.ViewModel","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getSession","lookupSession","lookupViewModel"],"id":"method-applyViewModel","owner":"Ext.mixin.Bindable","short_doc":"Transforms a ViewModel config to a proper instance. ..."},{"tagname":"method","name":"applyWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":763}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":763,"params":[{"name":"width","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["filterLengthValue"],"id":"method-applyWidth","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"beforeBlur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1218}],"doc":"<p>Template method to do any pre-blur processing.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-beforeBlur","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any pre-blur processing. ..."},{"tagname":"method","name":"beforeFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1234}],"doc":"<p>Template method to do any pre-focus processing.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-beforeFocus","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any pre-focus processing. ..."},{"tagname":"method","name":"blur","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":921}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["canFocus","getFocusEl"],"id":"method-blur","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"bubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":326}],"doc":"<p>Bubbles up the method!getRefOwner hierarchy, calling the specified function\nwith each component. The scope (<code>this</code> reference) of the function call will be the\nscope provided or the current component. The arguments to the function will\nbe the args provided or the current component. If the function returns false at any\npoint, the bubble is stopped.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope of the function. Defaults to current node.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>The args to call the function with. Defaults to passing the current\ncomponent.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-bubble","owner":"Ext.mixin.Inheritable","short_doc":"Bubbles up the method!getRefOwner hierarchy, calling the specified function\nwith each component. ..."},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-callOverridden","owner":"Ext.Base","short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callParent","owner":"Ext.Base","short_doc":"Call the \"parent\" method of the current method. ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","protected":true,"params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments"}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-callSuper","owner":"Ext.Base","short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ..."},{"tagname":"method","name":"canFocus","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":233}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":233,"params":[{"name":"skipVisibility","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"includeFocusTarget","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["findFocusTarget","isDestructing","isDisabled","isVisible"],"id":"method-canFocus","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"cancelFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1205}],"doc":"<p>Cancel any deferred focus on this component</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFocusTask"],"id":"method-cancelFocus","owner":"Ext.mixin.Focusable","short_doc":"Cancel any deferred focus on this component ..."},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"o","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","short_doc":" ..."},{"tagname":"method","name":"clearDelegatedListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":61}],"doc":"<p>Clears all listeners that were attached using the \"delegate\" event option.\nUsers should not invoke this method directly.  It is called automatically as\npart of normal <a href=\"#!/api/Ext.util.Observable-method-clearListeners\" rel=\"Ext.util.Observable-method-clearListeners\" class=\"docClass\">clearListeners</a>\nprocessing.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-clearDelegatedListeners","owner":"Ext.mixin.ComponentDelegation","short_doc":"Clears all listeners that were attached using the \"delegate\" event option. ..."},{"tagname":"method","name":"clearListeners","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":780}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":780,"params":[],"chainable":false,"fires":[],"method_calls":["clearManagedListeners"],"id":"method-clearListeners","owner":"Ext.Widget","overrides":[{"name":"clearListeners","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-clearListeners\" rel=\"Ext.mixin.Observable-method-clearListeners\" class=\"docClass\">Ext.mixin.Observable.clearListeners</a>"}],"short_doc":"Removes all listeners for this object including the managed listeners ..."},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["removeManagedListenerItem"],"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","short_doc":"Removes all managed listeners for this object. ..."},{"tagname":"method","name":"collapse","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":201}],"doc":"<p>Collapse this item. Does nothing if already collapsed.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getNode"],"id":"method-collapse","owner":"Ext.list.AbstractTreeItem","short_doc":"Collapse this item. ..."},{"tagname":"method","name":"createPlugin","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":374}],"doc":"<p>Converts the provided type or config object into a plugin instance.</p>\n","params":[{"tagname":"params","type":"String/Object/Ext.plugin.Abstract","name":"config","doc":"<p>The plugin type, config\nobject or instance.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createPlugin","owner":"Ext.mixin.Pluggable","short_doc":"Converts the provided type or config object into a plugin instance. ..."},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"beginEnd","optional":true,"doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ..."},{"tagname":"method","name":"destroy","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":482}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.list.AbstractTreeItem-property-clearPropertiesOnDestroy\" rel=\"Ext.list.AbstractTreeItem-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["callParent","getNode","getOwner","setNode","setOwner","setParentItem"],"id":"method-destroy","owner":"Ext.list.AbstractTreeItem","return":null,"throws":null,"properties":null,"type":null,"overrides":[{"name":"destroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-method-destroy\" rel=\"Ext.Widget-method-destroy\" class=\"docClass\">Ext.Widget.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ..."},{"tagname":"method","name":"destroyFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1267}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1267,"params":[],"chainable":false,"fires":[],"method_calls":["callParent"],"id":"method-destroyFocusable","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasOwnProperty"],"id":"method-destroyMembers","owner":"Ext.Base","short_doc":"Destroys member properties by name. ..."},{"tagname":"method","name":"destroyPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":137}],"doc":"<p>Removes and destroys a plugin.</p>\n\n<p><strong>Note:</strong> Not all plugins are designed to be removable. Consult the documentation\nfor the specific plugin in question to be sure.</p>\n","params":[{"tagname":"params","type":"String/Ext.plugin.Abstract","name":"plugin","doc":"<p>The plugin or its <code>id</code> to remove.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removePlugin"],"id":"method-destroyPlugin","owner":"Ext.mixin.Pluggable","short_doc":"Removes and destroys a plugin. ..."},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":725}],"doc":"<p>Disables this Component</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setDisabled"],"id":"method-disable","owner":"Ext.Widget","short_doc":"Disables this Component ..."},{"tagname":"method","name":"disableFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":158}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":158,"params":[],"chainable":false,"fires":[],"method_calls":["removeFocusCls","revertFocus"],"id":"method-disableFocusable","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"doAddListener","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1847}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"options","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"order","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"caller","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"manager","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["callParent","mon"],"id":"method-doAddListener","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"doDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":815}],"doc":"<p>Perform the actual destruction sequence. This is the method to override in your\nsubclasses to add steps specific to the destruction of custom Component or Widget.</p>\n\n<p>As a rule of thumb, subclasses should destroy their child Components, Elements,\nand/or other objects before calling parent method. Any object references will be\nnulled after this method has finished, to prevent the possibility of memory leaks.</p>\n","since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["destroyBindable","hasOwnProperty"],"id":"method-doDestroy","owner":"Ext.Widget","short_doc":"Perform the actual destruction sequence. ..."},{"tagname":"method","name":"doFireDelegatedEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":84}],"doc":"<p>Fires a delegated event.  Users should not invoke this method directly.  It\nis called automatically by the framework as needed (see the \"delegate\" event\noption of <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> for more\ndetails.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"eventName","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"args","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getRefOwner"],"id":"method-doFireDelegatedEvent","owner":"Ext.mixin.ComponentDelegation","short_doc":"Fires a delegated event. ..."},{"tagname":"method","name":"doFireEvent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":853}],"doc":"<p>Continue to fire event.</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":853,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-doFireEvent","owner":"Ext.Widget","overrides":[{"name":"doFireEvent","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-doFireEvent\" rel=\"Ext.mixin.Observable-method-doFireEvent\" class=\"docClass\">Ext.mixin.Observable.doFireEvent</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":"Continue to fire event. ..."},{"tagname":"method","name":"doNodeUpdate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":512}],"doc":"<p>Update properties after a node update.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},{"tagname":"params","type":"String[]","name":"modifiedFieldNames","doc":"<p>The modified field names, if known.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doUpdateExpandable","getIconClsProperty","getTextProperty","setIconCls","setLeaf","setLoading","setText"],"id":"method-doNodeUpdate","owner":"Ext.list.AbstractTreeItem","short_doc":"Update properties after a node update. ..."},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":732}],"doc":"<p>Enables this Component</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["setDisabled"],"id":"method-enable","owner":"Ext.Widget","short_doc":"Enables this Component ..."},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-enableBubble","owner":"Ext.mixin.Observable","short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ..."},{"tagname":"method","name":"enableFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":156}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":156,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-enableFocusable","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"expand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":208}],"doc":"<p>Expand this item. Does nothing if already expanded.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getNode"],"id":"method-expand","owner":"Ext.list.AbstractTreeItem","short_doc":"Expand this item. ..."},{"tagname":"method","name":"findFocusTarget","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":683}],"doc":"<p>Finds an alternate Component to focus if this Component is disabled while focused, or\nfocused while disabled, or otherwise unable to focus.</p>\n\n<p>In both cases, focus must not be lost to document.body, but must move to an intuitively\nconnectible Component, either a sibling, or uncle or nephew.</p>\n\n<p>This is both for the convenience of keyboard users, and also for when focus is tracked\nwithin a Component tree such as for ComboBoxes and their dropdowns.</p>\n\n<p>For example, a ComboBox with a PagingToolbar in is BoundList. If the \"Next Page\"\nbutton is hit, the LoadMask shows and focuses, the next page is the last page, so\nthe \"Next Page\" button is disabled. When the LoadMask hides, it attempt to focus the\nlast focused Component which is the disabled \"Next Page\" button. In this situation,\nfocus should move to a sibling within the PagingToolbar.</p>\n","return":{"type":"Ext.Component","name":"return","doc":"<p>A closely related focusable Component to which focus can move.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getRefOwner"],"id":"method-findFocusTarget","owner":"Ext.mixin.Focusable","short_doc":"Finds an alternate Component to focus if this Component is disabled while focused, or\nfocused while disabled, or othe..."},{"tagname":"method","name":"findPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":150}],"doc":"<p>Retrieves plugin by its <code>type</code> alias. For example:</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: ['listpaging', 'pullrefresh']\n });\n\n list.findPlugin('pullrefresh').setPullRefreshText('Pull to refresh...');\n</code></pre>\n\n<p><strong>Note:</strong> See also <a href=\"#!/api/Ext.mixin.Pluggable-method-getPlugin\" rel=\"Ext.mixin.Pluggable-method-getPlugin\" class=\"docClass\">getPlugin</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"type","doc":"<p>The Plugin's <code>type</code> as specified by the class's\n<a href=\"#!/api/Ext.Class-cfg-alias\" rel=\"Ext.Class-cfg-alias\" class=\"docClass\">alias</a> configuration.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getPlugins"],"id":"method-findPlugin","owner":"Ext.mixin.Pluggable","short_doc":"Retrieves plugin by its type alias. ..."},{"tagname":"method","name":"finishRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2331}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2331,"params":[],"chainable":false,"fires":[],"method_calls":["initBindable","initKeyMap"],"id":"method-finishRender","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'before'","optional":true,"doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"id":"method-fireAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>..."}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEvent","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList..."},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doFireEvent"],"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameter list. ..."},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","optional":true,"doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["fireEventArgs"],"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","short_doc":"Fires the specified event with the passed parameters and executes a function (action). ..."},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1146}],"doc":"<p>Try to focus this component.</p>\n\n<p>If this component is disabled, a close relation will be targeted for focus instead\nto keep focus localized for keyboard users.</p>\n","params":[{"tagname":"params","type":"Mixed","name":"selectText","optional":true,"doc":"<p>If applicable, <code>true</code> to also select all the text in this\ncomponent, or an array consisting of start and end (defaults to start) position of selection.</p>\n","html_type":"Mixed"},{"tagname":"params","type":"Boolean/Number","name":"delay","optional":true,"doc":"<p>Delay the focus this number of milliseconds (true for\n10 milliseconds).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>Only needed if the <code>delay</code> parameter is used. A function to call\nupon focus.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Function","name":"scope","optional":true,"doc":"<p>Only needed if the <code>delay</code> parameter is used. The scope (<code>this</code>\nreference) in which to execute the callback.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The focused Component. Usually <code>this</code> Component. Some Containers may\ndelegate focus to a descendant Component (<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s can do this\nthrough their <a href=\"#!/api/Ext.window.Window-cfg-defaultFocus\" rel=\"Ext.window.Window-cfg-defaultFocus\" class=\"docClass\">defaultFocus</a> config option. If this\ncomponent is disabled, a closely related component will be focused and that will be returned.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["cancelFocus","getFocusTask"],"id":"method-focus","owner":"Ext.mixin.Focusable","short_doc":"Try to focus this component. ..."},{"tagname":"method","name":"getAnimationProps","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2338}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2338,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getAnimationProps","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getAriaAttributes","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaAttributes\" rel=\"Ext.mixin.Accessible-cfg-ariaAttributes\" class=\"docClass\">ariaAttributes</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getAriaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Accessible","short_doc":"Returns the value of ariaAttributes. ..."},{"tagname":"method","name":"getAriaLabelEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":81}],"doc":"<p>Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements.</p>\n","params":[{"tagname":"params","type":"Function/String/String[]","name":"reference","optional":true,"doc":"<p>Component reference,\nor array of component references, or a function that should return\nthe proper attribute string. The function will be called in the\ncontext of the labelled component.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"return":{"type":"Ext.Element","name":"return","doc":"<p>Element id string, or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["lookupReferenceHolder"],"id":"method-getAriaLabelEl","owner":"Ext.mixin.Accessible","short_doc":"Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements. ..."},{"tagname":"method","name":"getBaseCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1691}],"doc":"<p>getter for backward compatibility with &lt; 6.5 where baseCls was a config</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getBaseCls","owner":"Ext.Widget","short_doc":"getter for backward compatibility with &lt; 6.5 where baseCls was a config ..."},{"tagname":"method","name":"getBind","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-bind\" rel=\"Ext.mixin.Bindable-cfg-bind\" class=\"docClass\">bind</a>.</p>\n","params":[],"return":{"type":"Object/String","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getBind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of bind. ..."},{"tagname":"method","name":"getBorder","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-border\" rel=\"Ext.Widget-cfg-border\" class=\"docClass\">border</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getBorder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":257}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of border. ..."},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","private":true,"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBubbleTarget"],"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","short_doc":"Gets the bubbling parent for an Observable ..."},{"tagname":"method","name":"getBubbleTarget","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":872}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":872,"params":[],"chainable":false,"fires":[],"method_calls":["getRefOwner"],"id":"method-getBubbleTarget","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getClassCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":919}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getClassCls","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getCls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-cls\" rel=\"Ext.Widget-cfg-cls\" class=\"docClass\">cls</a>.</p>\n","params":[],"return":{"type":"String/String[]","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"id":"method-getCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":214}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of cls. ..."},{"tagname":"method","name":"getComponentLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2343}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2343,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getComponentLayout","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"peek","default":"false","optional":true,"doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"ifInitialized","default":"false","optional":true,"doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"id":"method-getConfig","owner":"Ext.Base","short_doc":"Returns a specified config property value. ..."},{"tagname":"method","name":"getController","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":78}],"doc":"<p>Returns the <a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a> instance associated with this\ncomponent via the <a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a> config or <a href=\"#!/api/Ext.mixin.Bindable-method-setController\" rel=\"Ext.mixin.Bindable-method-setController\" class=\"docClass\">setController</a> method.</p>\n","return":{"type":"Ext.app.ViewController","name":"return","doc":"<p>Returns this component's ViewController or\nnull if one was not configured</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},"params":[],"id":"method-getController","owner":"Ext.mixin.Bindable","short_doc":"Returns the Ext.app.ViewController instance associated with this\ncomponent via the controller config or setController..."},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getCurrentConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getDefaultListenerScope","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-defaultListenerScope\" rel=\"Ext.mixin.Bindable-cfg-defaultListenerScope\" class=\"docClass\">defaultListenerScope</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getDefaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of defaultListenerScope. ..."},{"tagname":"method","name":"getDisabled","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-disabled\" rel=\"Ext.Widget-cfg-disabled\" class=\"docClass\">disabled</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":500}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of disabled. ..."},{"tagname":"method","name":"getEl","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2355}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2355,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getEl","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getElementConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":876}],"doc":"<p>A template method for modifying the <a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> config before it is processed.\nBy default adds the result of <code>this.getTemplate()</code> as the <code>children</code> array of\n<a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> if <code>children</code> were not specified in the original\n<a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> config.  Typically this method should not need to be implemented\nin subclasses.  Instead the <a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> property should be use to configure\nthe element template for a given Widget subclass.</p>\n\n<p>This method is called once when the first instance of each Widget subclass is\ncreated.  The element config object that is returned is cached and used as the template\nfor all successive instances.  The scope object for this method is the class prototype,\nnot the instance.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the element config object</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getTemplate"],"id":"method-getElementConfig","owner":"Ext.Widget","short_doc":"A template method for modifying the element config before it is processed. ..."},{"tagname":"method","name":"getEventHandlers","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-eventHandlers\" rel=\"Ext.Widget-cfg-eventHandlers\" class=\"docClass\">eventHandlers</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getEventHandlers","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":358}],"properties":null,"private":true,"deprecated":{"text":"<p>Inline event handlers are deprecated</p>\n\n\n\n","version":"6.6.0"},"static":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of eventHandlers. ..."},{"tagname":"method","name":"getExpandable","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-expandable\" rel=\"Ext.list.AbstractTreeItem-cfg-expandable\" class=\"docClass\">expandable</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getExpandable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":56}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of expandable. ..."},{"tagname":"method","name":"getExpanded","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-expanded\" rel=\"Ext.list.AbstractTreeItem-cfg-expanded\" class=\"docClass\">expanded</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getExpanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":63}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of expanded. ..."},{"tagname":"method","name":"getFloated","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-floated\" rel=\"Ext.list.AbstractTreeItem-cfg-floated\" class=\"docClass\">floated</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getFloated","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":585}],"static":null,"private":null,"inheritable":null,"linenr":585,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of floated. ..."},{"tagname":"method","name":"getFocusClsEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":123}],"doc":"<p>Returns the element used to apply focus styling CSS class when Focusable's\n<a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> becomes focused. By default it is <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a>.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"focusEl","optional":true,"doc":"<p>Return focus styling element for the given\nfocused element. This is used by Components implementing multiple focusable\nelements.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The focus styling element.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFocusEl"],"id":"method-getFocusClsEl","owner":"Ext.mixin.Focusable","short_doc":"Returns the element used to apply focus styling CSS class when Focusable's\nfocusEl becomes focused. ..."},{"tagname":"method","name":"getFocusEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":109}],"doc":"<p>Returns the main focus holder element associated with this Focusable, i.e.\nthe element that will be focused when Focusable's method!focus method is\ncalled. For most Focusables, this will be the <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a>.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getFocusEl","owner":"Ext.mixin.Focusable","short_doc":"Returns the main focus holder element associated with this Focusable, i.e. ..."},{"tagname":"method","name":"getFocusTask","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1308}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getFocusTask","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"getHeight","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-height\" rel=\"Ext.Widget-cfg-height\" class=\"docClass\">height</a>.</p>\n","params":[],"return":{"type":"Number/String","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":479}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of height. ..."},{"tagname":"method","name":"getHidden","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-hidden\" rel=\"Ext.Widget-cfg-hidden\" class=\"docClass\">hidden</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getHidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":490}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of hidden. ..."},{"tagname":"method","name":"getHideMode","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-hideMode\" rel=\"Ext.Widget-cfg-hideMode\" class=\"docClass\">hideMode</a>.</p>\n","params":[],"return":{"type":"'clip'/'display'/'offsets'/'opacity'/'visibility'","doc":"\n","html_type":"'clip'/'display'/'offsets'/'opacity'/'visibility'"},"id":"method-getHideMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":435}],"properties":null,"since":"6.5.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of hideMode. ..."},{"tagname":"method","name":"getIconCls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-iconCls\" rel=\"Ext.list.AbstractTreeItem-cfg-iconCls\" class=\"docClass\">iconCls</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getIconCls","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":70}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of iconCls. ..."},{"tagname":"method","name":"getIconClsProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-iconClsProperty\" rel=\"Ext.list.AbstractTreeItem-cfg-iconClsProperty\" class=\"docClass\">iconClsProperty</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getIconClsProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":105}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of iconClsProperty. ..."},{"tagname":"method","name":"getIndent","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-indent\" rel=\"Ext.list.AbstractTreeItem-cfg-indent\" class=\"docClass\">indent</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getIndent","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":111}],"static":null,"private":null,"inheritable":null,"linenr":111,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of indent. ..."},{"tagname":"method","name":"getInherited","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":85}],"doc":"<p>This method returns an object containing the inherited properties for this instance.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"inner","default":"false","optional":true,"doc":"<p>Pass <code>true</code> to return <code>inheritedStateInner</code> instead\nof the normal <code>inheritedState</code> object. This is only needed internally and should\nnot be passed by user code.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>inheritedState</code> object containing inherited properties.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getRefOwner","initInheritedState"],"id":"method-getInherited","owner":"Ext.mixin.Inheritable","short_doc":"This method returns an object containing the inherited properties for this instance. ..."},{"tagname":"method","name":"getInheritedConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":142}],"doc":"<p>This method returns the value of a config property that may be inherited from some\nancestor.</p>\n\n<p>In some cases, a config may be explicitly set on a component with the intent of\n<em>only</em> being presented to its children while that component should act upon the\ninherited value (see <code>referenceHolder</code> for example). In these cases the <code>skipThis</code>\nparameter should be specified as <code>true</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the config property to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"skipThis","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the property should be ignored if\nfound on this instance. In other words, <code>true</code> means the property must be inherited\nand not explicitly set on this instance.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Mixed","name":"return","doc":"<p>The value of the requested <code>property</code>.</p>\n","properties":null,"html_type":"Mixed"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInherited"],"id":"method-getInheritedConfig","owner":"Ext.mixin.Inheritable","short_doc":"This method returns the value of a config property that may be inherited from some\nancestor. ..."},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getInitialConfig","owner":"Ext.Base","short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ..."},{"tagname":"method","name":"getInstanceCls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-instanceCls\" rel=\"Ext.Widget-cfg-instanceCls\" class=\"docClass\">instanceCls</a>.</p>\n","params":[],"return":{"type":"String/String[]","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"id":"method-getInstanceCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":456}],"properties":null,"private":true,"since":"6.5.0","static":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of instanceCls. ..."},{"tagname":"method","name":"getItemId","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2381}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2381,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getItemId","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getLeaf","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-leaf\" rel=\"Ext.list.AbstractTreeItem-cfg-leaf\" class=\"docClass\">leaf</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getLeaf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":77}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of leaf. ..."},{"tagname":"method","name":"getLoading","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-loading\" rel=\"Ext.list.AbstractTreeItem-cfg-loading\" class=\"docClass\">loading</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":84}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of loading. ..."},{"tagname":"method","name":"getMargin","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-margin\" rel=\"Ext.Widget-cfg-margin\" class=\"docClass\">margin</a>.</p>\n","params":[],"return":{"type":"Number/String","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getMargin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":223}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of margin. ..."},{"tagname":"method","name":"getNode","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","params":[],"return":{"type":"Ext.data.TreeModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},"id":"method-getNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":119}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of node. ..."},{"tagname":"method","name":"getOver","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-over\" rel=\"Ext.list.AbstractTreeItem-cfg-over\" class=\"docClass\">over</a>.</p>\n","params":[],"return":{"type":"Number","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"id":"method-getOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":125}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of over. ..."},{"tagname":"method","name":"getOwner","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-owner\" rel=\"Ext.list.AbstractTreeItem-cfg-owner\" class=\"docClass\">owner</a>.</p>\n","params":[],"return":{"type":"Ext.list.Tree","doc":"\n","html_type":"<a href=\"#!/api/Ext.list.Tree\" rel=\"Ext.list.Tree\" class=\"docClass\">Ext.list.Tree</a>"},"id":"method-getOwner","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":113}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of owner. ..."},{"tagname":"method","name":"getParentItem","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-parentItem\" rel=\"Ext.list.AbstractTreeItem-cfg-parentItem\" class=\"docClass\">parentItem</a>.</p>\n","params":[],"return":{"type":"Ext.list.AbstractTreeItem","doc":"\n","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"},"id":"method-getParentItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":135}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of parentItem. ..."},{"tagname":"method","name":"getPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":188}],"doc":"<p>Retrieves a plugin by its <code>id</code>.</p>\n\n<pre><code> var list = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'list',\n     itemTpl: '&lt;div class=\"item\"&gt;{title}&lt;/div&gt;',\n     store: 'Items',\n\n     plugins: [{\n         type: 'pullrefresh',\n         id: 'foo'\n     }]\n });\n\n list.getPlugin('foo').setPullRefreshText('Pull to refresh...');\n</code></pre>\n\n<p><strong>Note:</strong> See also <a href=\"#!/api/Ext.mixin.Pluggable-method-findPlugin\" rel=\"Ext.mixin.Pluggable-method-findPlugin\" class=\"docClass\">findPlugin</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The <code>id</code> of the plugin.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getPlugins"],"id":"method-getPlugin","owner":"Ext.mixin.Pluggable","short_doc":"Retrieves a plugin by its id. ..."},{"tagname":"method","name":"getPublishes","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-publishes\" rel=\"Ext.mixin.Bindable-cfg-publishes\" class=\"docClass\">publishes</a>.</p>\n","params":[],"return":{"type":"String/String[]/Object","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getPublishes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":102}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of publishes. ..."},{"tagname":"method","name":"getRefOwner","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":304}],"doc":"<p>Used by <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>, and the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a>\nmethod to find the owning Component in the linkage hierarchy.</p>\n\n<p>By default this returns the Container which contains this Component.</p>\n\n<p>This may be overridden by Component authors who implement ownership hierarchies\nwhich are not based upon ownerCt, such as BoundLists being owned by Fields or Menus\nbeing owned by Buttons.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getRefOwner","owner":"Ext.mixin.Inheritable","short_doc":"Used by ComponentQuery, and the up\nmethod to find the owning Component in the linkage hierarchy. ..."},{"tagname":"method","name":"getReference","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":324}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":324,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getReference","owner":"Ext.mixin.Bindable","short_doc":" ..."},{"tagname":"method","name":"getRenderTo","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-renderTo\" rel=\"Ext.Widget-cfg-renderTo\" class=\"docClass\">renderTo</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getRenderTo","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2288}],"static":null,"private":null,"inheritable":null,"linenr":2288,"owner":"Ext.Widget","short_doc":"Returns the value of renderTo. ..."},{"tagname":"method","name":"getRipple","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-ripple\" rel=\"Ext.Widget-cfg-ripple\" class=\"docClass\">ripple</a>.</p>\n","params":[],"return":{"type":"Boolean/Object/String","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getRipple","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":408}],"properties":[{"tagname":"cfg","type":"String","name":"color","doc":"<p>The background color of the ripple.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","type":"Array","name":"position","doc":"<p>Position for the ripple to start at [x,y].\nDetermines if a Ripple effect should happen whenever this element is pressed.</p>\n\n\n\n\n<p>For example:\n     {\n         ripple: true\n     }</p>\n\n\n\n\n<p>Or:</p>\n\n\n\n\n<pre><code> {\n     ripple: {\n         color: 'red'\n     }\n }\n</code></pre>\n\n\n\n\n<p>For complex components, individual elements can suppress ripples by adding the\n<code>x-no-ripple</code> class to disable rippling for a tree of elements.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"since":"6.5.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of ripple. ..."},{"tagname":"method","name":"getSelected","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-selected\" rel=\"Ext.list.AbstractTreeItem-cfg-selected\" class=\"docClass\">selected</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":91}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of selected. ..."},{"tagname":"method","name":"getSelectedParent","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-selectedParent\" rel=\"Ext.list.AbstractTreeItem-cfg-selectedParent\" class=\"docClass\">selectedParent</a>.</p>\n","params":[],"return":{"type":"Boolean","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"id":"method-getSelectedParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":97}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of selectedParent. ..."},{"tagname":"method","name":"getSession","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a>.</p>\n","params":[],"return":{"type":"Boolean/Object/Ext.data.Session","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"id":"method-getSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of session. ..."},{"tagname":"method","name":"getSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":905}],"doc":"<p>Returns the height and width of the Component.</p>\n","return":{"type":"Object","name":"return","doc":"<p>The current <code>height</code> and <code>width</code> of the Component.</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSize","owner":"Ext.Widget","short_doc":"Returns the height and width of the Component. ..."},{"tagname":"method","name":"getSizeModel","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2386}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2386,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getSizeModel","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getStyle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1505}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getStyle","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":393}],"doc":"<p>Return the actual tabIndex for this Focusable.</p>\n","return":{"type":"Number","name":"return","doc":"<p>tabIndex attribute value</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getFocusEl"],"id":"method-getTabIndex","owner":"Ext.mixin.Focusable","short_doc":"Return the actual tabIndex for this Focusable. ..."},{"tagname":"method","name":"getTdCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2359}],"doc":"<p>Needed for when widget is rendered into a grid cell. The class to add to the cell element.</p>\n","private":true,"owner":"Ext.Widget","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getTdType"],"id":"method-getTdCls","short_doc":"Needed for when widget is rendered into a grid cell. ..."},{"tagname":"method","name":"getTdType","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2368}],"doc":"<p>Partner method to <a href=\"#!/api/Ext.Widget-method-getTdCls\" rel=\"Ext.Widget-method-getTdCls\" class=\"docClass\">getTdCls</a>.</p>\n\n<p>Returns the base type for the component. Defaults to return <code>this.xtype</code>, but\nAll derived classes of <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">TextField</a> can return the type 'textfield',\nand all derived classes of <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Button</a> can return the type 'button'</p>\n","private":true,"owner":"Ext.Widget","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getTdType","short_doc":"Partner method to getTdCls. ..."},{"tagname":"method","name":"getTemplate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":915}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":915,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-getTemplate","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"getText","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-text\" rel=\"Ext.list.AbstractTreeItem-cfg-text\" class=\"docClass\">text</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":141}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of text. ..."},{"tagname":"method","name":"getTextProperty","doc":"<p>Returns the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-textProperty\" rel=\"Ext.list.AbstractTreeItem-cfg-textProperty\" class=\"docClass\">textProperty</a>.</p>\n","params":[],"return":{"type":"String","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getTextProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":151}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Returns the value of textProperty. ..."},{"tagname":"method","name":"getToolElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":215}],"doc":"<p>Gets the element to be used for the tree when it is in\n<a href=\"#!/api/Ext.list.Tree-cfg-micro\" rel=\"Ext.list.Tree-cfg-micro\" class=\"docClass\">micro</a> mode.</p>\n","return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The element.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-getToolElement","owner":"Ext.list.AbstractTreeItem","short_doc":"Gets the element to be used for the tree when it is in\nmicro mode. ..."},{"tagname":"method","name":"getTouchAction","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-touchAction\" rel=\"Ext.Widget-cfg-touchAction\" class=\"docClass\">touchAction</a>.</p>\n","params":[],"return":{"type":"Object","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getTouchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":302}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of touchAction. ..."},{"tagname":"method","name":"getTwoWayBindable","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-twoWayBindable\" rel=\"Ext.mixin.Bindable-cfg-twoWayBindable\" class=\"docClass\">twoWayBindable</a>.</p>\n","params":[],"return":{"type":"String/String[]/Object","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"id":"method-getTwoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of twoWayBindable. ..."},{"tagname":"method","name":"getUi","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-ui\" rel=\"Ext.Widget-cfg-ui\" class=\"docClass\">ui</a>.</p>\n","params":[],"return":{"type":"String/String[]","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"id":"method-getUi","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":384}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of ui. ..."},{"tagname":"method","name":"getUserCls","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-userCls\" rel=\"Ext.Widget-cfg-userCls\" class=\"docClass\">userCls</a>.</p>\n","params":[],"return":{"type":"String/String[]","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"id":"method-getUserCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":392}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of userCls. ..."},{"tagname":"method","name":"getViewModel","doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a>.</p>\n","params":[],"return":{"type":"String/Object/Ext.app.ViewModel","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"id":"method-getViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Returns the value of viewModel. ..."},{"tagname":"method","name":"getWidth","doc":"<p>Returns the value of <a href=\"#!/api/Ext.Widget-cfg-width\" rel=\"Ext.Widget-cfg-width\" class=\"docClass\">width</a>.</p>\n","params":[],"return":{"type":"Number/String","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"id":"method-getWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":468}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Returns the value of width. ..."},{"tagname":"method","name":"handleBlurEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":852}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"info","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-blur\" rel=\"Ext.mixin.Focusable-event-blur\" class=\"docClass\">blur</a>"],"method_calls":["isBlurring","onBlur"],"id":"method-handleBlurEvent","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"handleFocusEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":825}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"info","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-focus\" rel=\"Ext.mixin.Focusable-event-focus\" class=\"docClass\">focus</a>"],"method_calls":["isFocusing","onFocus"],"id":"method-handleFocusEvent","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"hasCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1363}],"doc":"<p>Checks if the specified CSS class exists on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to check for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the class exists, else <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasCls","owner":"Ext.Widget","short_doc":"Checks if the specified CSS class exists on this element's DOM node. ..."},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasConfig","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ..."},{"tagname":"method","name":"hide","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":955}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":955,"params":[],"chainable":false,"fires":[],"method_calls":["setHidden"],"id":"method-hide","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"initBindable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":764}],"doc":"<p>This method triggers the lazy configs and must be called when it is time to\nfully boot up. The configs that must be initialized are: <code>bind</code>, <code>publishes</code>,\n<code>session</code>, <code>twoWayBindable</code> and <code>viewModel</code>.</p>\n","private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getBind","getPublishes","getViewModel","publishState"],"id":"method-initBindable","owner":"Ext.mixin.Bindable","short_doc":"This method triggers the lazy configs and must be called when it is time to\nfully boot up. ..."},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","protected":true,"params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"id":"method-initConfig","owner":"Ext.Base","short_doc":"Initialize configuration for this class. ..."},{"tagname":"method","name":"initElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":959}],"doc":"<p>Initializes the Element for this Widget instance.  If this is the first time a\nWidget of this type has been instantiated the <a href=\"#!/api/Ext.Widget-property-element\" rel=\"Ext.Widget-property-element\" class=\"docClass\">element</a> config will be\nprocessed to create an Element.  This Element is then cached on the prototype (see\nafterCachedConfig) so that future instances can obtain their element by simply\ncloning the Element that was cached by the first instance.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["addElementReference","addElementReferenceOnDemand","getClassCls","getId","initUiReference"],"id":"method-initElement","owner":"Ext.Widget","short_doc":"Initializes the Element for this Widget instance. ..."},{"tagname":"method","name":"initElementListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1912}],"doc":"<p>Called for the first instance of this Widget to create an object that contains the\nlistener configs for all of the element references keyed by reference name. The\nobject is cached on the prototype and has the following shape:</p>\n\n<pre><code>_elementListeners: {\n    element: {\n        click: 'onClick',\n        scope: this\n    },\n    fooReference: {\n        tap: {\n            fn: someFunction,\n            delay: 100\n        }\n    }\n}\n</code></pre>\n\n<p>The returned object is prototype chained to the <em>elementListeners object of its\nsuperclass, and each key in the object is prototype chained to object with the\ncorresponding key in the superclass </em>elementListeners.  This allows element\nlisteners to be inherited and overridden when subclassing widgets.</p>\n\n<p>This method is invoked with the prototype object as the scope</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"elementConfig","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["hasOwnProperty","initElementListeners"],"id":"method-initElementListeners","owner":"Ext.Widget","short_doc":"Called for the first instance of this Widget to create an object that contains the\nlistener configs for all of the el..."},{"tagname":"method","name":"initFocusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":138}],"doc":"<p>Template method to do any Focusable related initialization that\ndoes not involve event listeners creation.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":null,"fires":null,"method_calls":null,"id":"method-initFocusable","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any Focusable related initialization that\ndoes not involve event listeners creation. ..."},{"tagname":"method","name":"initFocusableElement","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":763}],"doc":"<p>Sets up the focus listener on this Component's <a href=\"#!/api/Ext.mixin.Focusable-method-getFocusEl\" rel=\"Ext.mixin.Focusable-method-getFocusEl\" class=\"docClass\">focusEl</a> if it has one.</p>\n\n<p>Form Components which must implicitly participate in tabbing order usually have\na naturally focusable element as their <a href=\"#!/api/Ext.mixin.Focusable-method-getFocusEl\" rel=\"Ext.mixin.Focusable-method-getFocusEl\" class=\"docClass\">focusEl</a>, and it is\nthe DOM event of that receiving focus which drives the Component's <code>onFocus</code> handling,\nand the DOM event of it being blurred which drives the <code>onBlur</code> handling.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"force","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["canFocus","getFocusEl","getTabIndex","setTabIndex"],"id":"method-initFocusableElement","owner":"Ext.mixin.Focusable","short_doc":"Sets up the focus listener on this Component's focusEl if it has one. ..."},{"tagname":"method","name":"initFocusableEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":145}],"doc":"<p>Template method to do any event listener initialization for a Focusable.\nThis generally happens after the focusEl is available.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"force","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["initFocusableElement"],"id":"method-initFocusableEvents","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any event listener initialization for a Focusable. ..."},{"tagname":"method","name":"initInheritedState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":329}],"doc":"<p>Called by <code>getInherited</code> to initialize the inheritedState the first time it is\nrequested.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"name":"inheritedState","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getConfig","getController","getDefaultListenerScope"],"id":"method-initInheritedState","owner":"Ext.mixin.Bindable","overrides":[{"name":"initInheritedState","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-initInheritedState\" rel=\"Ext.mixin.Inheritable-method-initInheritedState\" class=\"docClass\">Ext.mixin.Inheritable.initInheritedState</a>"}],"short_doc":"Called by getInherited to initialize the inheritedState the first time it is\nrequested. ..."},{"tagname":"method","name":"initKeyMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":203}],"doc":"<p>This method should be called when the instance is ready to start listening for\nkeyboard events. This is called automatically for <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> and derived\nclasses. This is done after the component is rendered.</p>\n","protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getKeyMap","getKeyMapEnabled","setKeyMapEnabled","setKeyMapListener"],"id":"method-initKeyMap","owner":"Ext.mixin.Keyboard","short_doc":"This method should be called when the instance is ready to start listening for\nkeyboard events. ..."},{"tagname":"method","name":"initUiReference","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2111}],"doc":"<p>Initializes a \"uiReference\".  Ui rerefences are reference elements that have\nclassCls and ui info in their CSS class names.  They can be used by setting\nuiCls in the template, or by invoking this method to setup the ui reference\nafter element/template initialization (Toolable uses this for its dock wrapper)</p>\n","params":[{"tagname":"params","type":"String","name":"referenceName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"uiCls","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"isInstance","default":"false","optional":true,"doc":"<p>pass <code>false</code> if this is not an instance-level\nreference</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["hasOwnProperty","syncUiCls"],"id":"method-initUiReference","owner":"Ext.Widget","short_doc":"Initializes a \"uiReference\". ..."},{"tagname":"method","name":"insertItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":226}],"doc":"<p>Append a new child item to the DOM.</p>\n","params":[{"tagname":"params","type":"Ext.list.AbstractTreeItem","name":"item","doc":"<p>The item to insert.</p>\n","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"},{"tagname":"params","type":"Ext.list.AbstractTreeItem","name":"refItem","doc":"<p>The item the node is to\nbe inserted before. <code>null</code> if the item is to be added to the end.</p>\n","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-insertItem","owner":"Ext.list.AbstractTreeItem","short_doc":"Append a new child item to the DOM. ..."},{"tagname":"method","name":"invalidateInheritedState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":389}],"doc":"<p>This method marks the current inherited state as invalid. The next time a call is\nmade to <code>getInherited</code> the objects will be recreated and initialized.</p>\n","private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-invalidateInheritedState","owner":"Ext.mixin.Inheritable","short_doc":"This method marks the current inherited state as invalid. ..."},{"tagname":"method","name":"is","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1133}],"doc":"<p>Tests whether this Widget matches a <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>\nselector string.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The selector string to test against.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this Widget matches the selector.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-is","owner":"Ext.Widget","short_doc":"Tests whether this Widget matches a ComponentQuery\nselector string. ..."},{"tagname":"method","name":"isAncestor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2451}],"doc":"<p>Determines whether <strong>this Component</strong> is an ancestor of the passed Component.\nThis will return <code>true</code> if the passed Component is anywhere within the subtree\nbeneath this Component.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":2451,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isAncestor","owner":"Ext.Widget","overrides":[{"name":"isAncestor","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-isAncestor\" rel=\"Ext.mixin.Inheritable-method-isAncestor\" class=\"docClass\">Ext.mixin.Inheritable.isAncestor</a>"}],"short_doc":"Determines whether this Component is an ancestor of the passed Component. ..."},{"tagname":"method","name":"isBlurring","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":899}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getFocusEl"],"id":"method-isBlurring","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"isBound","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":382}],"doc":"<p>Determines if the passed property name is bound to ViewModel data.</p>\n","params":[{"tagname":"params","type":"String","name":"name","optional":true,"doc":"<p>The property name to test. Defaults to the\n<a href=\"#!/api/Ext.mixin.Bindable-property-defaultBindProperty\" rel=\"Ext.mixin.Bindable-property-defaultBindProperty\" class=\"docClass\">defaultBindProperty</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the passed property receives data from a ViewModel.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"since":"6.5.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBind"],"id":"method-isBound","owner":"Ext.mixin.Bindable","short_doc":"Determines if the passed property name is bound to ViewModel data. ..."},{"tagname":"method","name":"isDescendantOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":348}],"doc":"<p>Determines whether this component is the descendant of a passed component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"ancestor","doc":"<p>A Component which may contain this Component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the component is the descendant of the passed component,\notherwise <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isDescendantOf","owner":"Ext.mixin.Inheritable","short_doc":"Determines whether this component is the descendant of a passed component. ..."},{"tagname":"method","name":"isDestructing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":214}],"doc":"<p>Determines if this Component is inside a Component tree which is destroyed, <em>or\nis being destroyed</em>.</p>\n","return":{"type":"boolean","name":"return","doc":"<p><code>true</code> if this Component, or any ancestor is destroyed, or\nis being destroyed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">boolean</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-isDestructing","owner":"Ext.mixin.Focusable","short_doc":"Determines if this Component is inside a Component tree which is destroyed, or\nis being destroyed. ..."},{"tagname":"method","name":"isDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":739}],"doc":"<p>Returns <code>true</code> if this Component is currently disabled.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if currently disabled.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getDisabled"],"id":"method-isDisabled","owner":"Ext.Widget","short_doc":"Returns true if this Component is currently disabled. ..."},{"tagname":"method","name":"isEnabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":747}],"doc":"<p>Returns <code>true</code> if this Component is not currently disabled.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if not currently disabled.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getDisabled"],"id":"method-isEnabled","owner":"Ext.Widget","short_doc":"Returns true if this Component is not currently disabled. ..."},{"tagname":"method","name":"isExpanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":238}],"doc":"<p>Check if the current item is expanded.</p>\n","return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this item is expanded.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getExpanded"],"id":"method-isExpanded","owner":"Ext.list.AbstractTreeItem","short_doc":"Check if the current item is expanded. ..."},{"tagname":"method","name":"isFocusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":180}],"doc":"<p>Determine if this Focusable can receive focus at this time.</p>\n\n<p>Note that Containers can be non-focusable themselves while delegating\nfocus treatment to a child Component; see <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">#defaultFocus</a>\nfor more information.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p>Optionally determine if the container itself\nis focusable, or if container's focus is delegated to a child component\nand that child is focusable.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p>True if component is focusable, false if not.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["canFocus","getFocusEl"],"id":"method-isFocusable","owner":"Ext.mixin.Focusable","short_doc":"Determine if this Focusable can receive focus at this time. ..."},{"tagname":"method","name":"isFocusing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":877}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getFocusEl"],"id":"method-isFocusing","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"isHeighted","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1573}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getHeight"],"id":"method-isHeighted","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"isHidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1143}],"doc":"<p>Returns <code>true</code> if this Component is currently hidden.</p>\n","params":[{"tagname":"params","type":"Boolean/Ext.Widget","name":"deep","default":"false","optional":true,"doc":"<p><code>true</code> to check if this component\nis hidden because a parent container is hidden. Alternatively, a reference to the\ntop-most parent at which to stop climbing.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if currently hidden.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getHidden","getRefOwner"],"id":"method-isHidden","owner":"Ext.Widget","short_doc":"Returns true if this Component is currently hidden. ..."},{"tagname":"method","name":"isLayoutChild","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2463}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2463,"params":[{"name":"candidate","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-isLayoutChild","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"isSelectionEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":246}],"doc":"<p>Checks whether the event is an event that should select this node.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event should select this node.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-isSelectionEvent","owner":"Ext.list.AbstractTreeItem","short_doc":"Checks whether the event is an event that should select this node. ..."},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","optional":true,"doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","short_doc":"Checks if all events, or a specific event, is suspended. ..."},{"tagname":"method","name":"isSyncing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":800}],"doc":"<p>Checks if a particular binding is synchronizing the value.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the property being bound to.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the binding is syncing.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBind"],"id":"method-isSyncing","owner":"Ext.mixin.Bindable","short_doc":"Checks if a particular binding is synchronizing the value. ..."},{"tagname":"method","name":"isToggleEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":257}],"doc":"<p>Checks whether the event is an event that should toggle the expand/collapse state.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event should toggle the expand/collapsed state.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-isToggleEvent","owner":"Ext.list.AbstractTreeItem","short_doc":"Checks whether the event is an event that should toggle the expand/collapse state. ..."},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1166}],"doc":"<p>Returns <code>true</code> if this Component is currently visible.</p>\n\n<p>A Widget is visible if its element is not hidden, <em>and</em> has been\nproperty!rendered <em>and</em> has not been destroyed.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","default":"false","optional":true,"doc":"<p><code>true</code> to check if this component\nis visible and all parents are also visible.</p>\n\n<p>Contrast this with the <a href=\"#!/api/Ext.Widget-method-isHidden\" rel=\"Ext.Widget-method-isHidden\" class=\"docClass\">isHidden</a> method which just checks the\nhidden state of the component.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if currently visible.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["isHidden"],"id":"method-isVisible","owner":"Ext.Widget","short_doc":"Returns true if this Component is currently visible. ..."},{"tagname":"method","name":"isWidthed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1564}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getWidth"],"id":"method-isWidthed","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"isXType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1183}],"doc":"<p>Tests whether or not this Component is of a specific xtype. This can test whether this\nComponent is descended from the xtype (default) or whether it is directly of the xtype\nspecified (<code>shallow = true</code>).\n**If using your own subclasses, be aware that a Component must register its own xtype\nto participate in determination of inherited xtypes.__</p>\n\n<p>For a list of all available xtypes, see the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> header.</p>\n\n<p>Example usage:</p>\n\n<pre><code>var t = new Ext.field.Text();\nvar isText = t.isXType('textfield'); // true\nvar isBoxSubclass = t.isXType('field'); // true, descended from Ext.field.Field\nvar isBoxInstance = t.isXType('field', true); // false, not a direct\n                                              // Ext.field.Field instance\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"xtype","doc":"<p>The xtype to check for this Component.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"shallow","optional":true,"doc":"<p><code>false</code> to check whether this Component is descended\nfrom the xtype (this is the default), or <code>true</code> to check whether this Component is directly\nof the specified xtype.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this component descends from the specified xtype, <code>false</code>\notherwise.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-isXType","owner":"Ext.Widget","short_doc":"Tests whether or not this Component is of a specific xtype. ..."},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-link","owner":"Ext.Base","short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi..."},{"tagname":"method","name":"lookupController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":395}],"doc":"<p>Gets the controller that controls this view. May be a controller that belongs\nto a view higher in the hierarchy.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","default":"false","optional":true,"doc":"<p><code>true</code> to not consider the controller directly attached\nto this view (if it exists).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.app.ViewController","name":"return","doc":"<p>The controller. <code>null</code> if no controller is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},"since":"5.0.1","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig"],"id":"method-lookupController","owner":"Ext.mixin.Bindable","short_doc":"Gets the controller that controls this view. ..."},{"tagname":"method","name":"lookupNameHolder","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":268}],"doc":"<p>Gets the Form or Component that is used as the name holder for this component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","default":"true","optional":true,"doc":"<p><code>false</code> to return this as the name holder if\nthis instance has set <code>nameHolder</code>. Unlike <code>getInheritedConfig</code> this method\ndefaults to <code>true</code> because it is possible that a <code>name</code> property set by the\nowner of a component that is also a <code>nameHolder</code> itself. In this case, the\n<code>name</code> connects not to this component but to the parent nameHolder.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The name holder.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"private":true,"since":"6.5.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig"],"id":"method-lookupNameHolder","owner":"Ext.mixin.Inheritable","short_doc":"Gets the Form or Component that is used as the name holder for this component. ..."},{"tagname":"method","name":"lookupReferenceHolder","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":286}],"doc":"<p>Gets the Controller or Component that is used as the reference holder for this view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","default":"true","optional":true,"doc":"<p><code>false</code> to return this as the reference holder if\nthis instance has set <code>referenceHolder</code>. Unlike <code>getInheritedConfig</code> this method\ndefaults to <code>true</code> because it is possible that a <code>reference</code> property set by the\nowner of a component that is also a <code>referenceHolder</code> itself. In this case, the\n<code>reference</code> connects not to this component but to the parent referenceHolder.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.app.ViewController/Ext.container.Container","name":"return","doc":"<p>The reference holder.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>/<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"private":true,"since":"5.0.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig"],"id":"method-lookupReferenceHolder","owner":"Ext.mixin.Inheritable","short_doc":"Gets the Controller or Component that is used as the reference holder for this view. ..."},{"tagname":"method","name":"lookupSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":409}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a></code> for this instance. This property may come\nfrom this instance's <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a></code> or be inherited from this object's parent.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","default":"false","optional":true,"doc":"<p>Pass <code>true</code> to ignore a <code>session</code> configured on\nthis instance and only consider an inherited session.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.data.Session","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig","getSession"],"id":"method-lookupSession","owner":"Ext.mixin.Bindable","short_doc":"Returns the Ext.data.Session for this instance. ..."},{"tagname":"method","name":"lookupTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1211}],"doc":"<p>Gets a named template instance for this class. See <a href=\"#!/api/Ext.XTemplate-static-method-getTpl\" rel=\"Ext.XTemplate-static-method-getTpl\" class=\"docClass\">Ext.XTemplate.getTpl</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the property that holds the template.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.XTemplate","name":"return","doc":"<p>The template, <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-lookupTpl","owner":"Ext.Widget","short_doc":"Gets a named template instance for this class. ..."},{"tagname":"method","name":"lookupViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":432}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a></code> for this instance. This property may come from this\nthis instance's <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a></code> or be inherited from this object's parent.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","default":"false","optional":true,"doc":"<p>Pass <code>true</code> to ignore a <code>viewModel</code> configured on\nthis instance and only consider an inherited view model.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.app.ViewModel","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig","getViewModel"],"id":"method-lookupViewModel","owner":"Ext.mixin.Bindable","short_doc":"Returns the Ext.app.ViewModel for this instance. ..."},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mon","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for addManagedListener. ..."},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-mun","owner":"Ext.mixin.Observable","return":null,"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for removeManagedListener. ..."},{"tagname":"method","name":"nodeCollapse","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":268}],"doc":"<p>Handle this node being collapsed.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node being collapsed.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},{"tagname":"params","name":"collapsingForExpand","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getOwner","nodeCollapseBegin","nodeCollapseEnd"],"id":"method-nodeCollapse","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle this node being collapsed. ..."},{"tagname":"method","name":"nodeCollapseBegin","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":286}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":286,"params":[{"name":"animation","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"collapsingForExpand","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getOwner","setExpanded"],"id":"method-nodeCollapseBegin","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"nodeCollapseEnd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":295}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":295,"params":[{"name":"collapsingForExpand","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getOwner"],"id":"method-nodeCollapseEnd","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"nodeExpand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":301}],"doc":"<p>Handle this node being expanded.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node being expanded.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFloated","getOwner","nodeExpandBegin","nodeExpandEnd"],"id":"method-nodeExpand","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle this node being expanded. ..."},{"tagname":"method","name":"nodeExpandBegin","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":320}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":320,"params":[{"name":"animation","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getOwner","setExpanded"],"id":"method-nodeExpandBegin","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"nodeExpandEnd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":329}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":329,"params":[],"chainable":false,"fires":[],"method_calls":["getOwner"],"id":"method-nodeExpandEnd","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"nodeInsert","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":335}],"doc":"<p>Handle a node being inserted as a child of this item.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node being inserted.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},{"tagname":"params","type":"Ext.data.TreeModel","name":"refNode","doc":"<p>The node that is to be inserted before. <code>null</code>\nif this operation is an append.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doUpdateExpandable","getOwner","insertItem"],"id":"method-nodeInsert","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle a node being inserted as a child of this item. ..."},{"tagname":"method","name":"nodeRemove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":380}],"doc":"<p>Handle a node being removed as a child of this item.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node being removed.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doUpdateExpandable","getOwner","removeItem"],"id":"method-nodeRemove","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle a node being removed as a child of this item. ..."},{"tagname":"method","name":"nodeUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":406}],"doc":"<p>Handle this node having fields changed.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeModel","name":"node","doc":"<p>The node.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"},{"tagname":"params","type":"String[]","name":"modifiedFieldNames","doc":"<p>The modified field names, if known.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doNodeUpdate"],"id":"method-nodeUpdate","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle this node having fields changed. ..."},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","optional":true,"doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"delegate","optional":true,"doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"capture","optional":true,"doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopPropagation","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"preventDefault","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"stopEvent","optional":true,"doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Array","name":"args","optional":true,"doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"params","type":"Boolean","name":"destroyable","default":"false","optional":true,"doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Number","name":"priority","optional":true,"doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"order","default":"'current'","optional":true,"doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-on","owner":"Ext.mixin.Observable","return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"throws":null,"properties":null,"type":null,"short_doc":"The on method is shorthand for\naddListener. ..."},{"tagname":"method","name":"onAdded","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2390}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2390,"params":[{"name":"container","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"pos","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"instanced","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onInheritedAdd"],"id":"method-onAdded","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-onAfter","owner":"Ext.mixin.Observable","short_doc":"Appends an after-event handler. ..."},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["addListener"],"id":"method-onBefore","owner":"Ext.mixin.Observable","short_doc":"Appends a before-event handler. ..."},{"tagname":"method","name":"onBlur","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":328}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-blur\" rel=\"Ext.mixin.Focusable-event-blur\" class=\"docClass\">blur</a>"],"method_calls":["beforeBlur","fireEvent","postBlur","removeFocusCls"],"id":"method-onBlur","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"onClassExtended","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1701}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1701,"params":[{"name":"Class","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"members","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassExtended","owner":"Ext.Widget","overrides":[{"name":"onClassExtended","owner":"Ext.Evented","link":"<a href=\"#!/api/Ext.Evented-method-onClassExtended\" rel=\"Ext.Evented-method-onClassExtended\" class=\"docClass\">Ext.Evented.onClassExtended</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Factoryable.js","linenr":545}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":545,"params":[{"name":"targetClass","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","overrides":[{"name":"onClassMixedIn","owner":"Ext.mixin.ComponentDelegation","link":"<a href=\"#!/api/Ext.mixin.ComponentDelegation-method-onClassMixedIn\" rel=\"Ext.mixin.ComponentDelegation-method-onClassMixedIn\" class=\"docClass\">Ext.mixin.ComponentDelegation.onClassMixedIn</a>"}],"short_doc":" ..."},{"tagname":"method","name":"onClick","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":418}],"doc":"<p>Handle a click on this item.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getNode","getOwner","isSelectionEvent","isToggleEvent","toggleExpanded"],"id":"method-onClick","owner":"Ext.list.AbstractTreeItem","short_doc":"Handle a click on this item. ..."},{"tagname":"method","name":"onFocus","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":360}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-focus\" rel=\"Ext.mixin.Focusable-event-focus\" class=\"docClass\">focus</a>"],"method_calls":["addFocusCls","beforeFocus","canFocus","fireEvent","postFocus"],"id":"method-onFocus","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"onFocusEnter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2455}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2455,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-onFocusEnter","owner":"Ext.Widget","overrides":[{"name":"onFocusEnter","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-method-onFocusEnter\" rel=\"Ext.mixin.Focusable-method-onFocusEnter\" class=\"docClass\">Ext.mixin.Focusable.onFocusEnter</a>"}],"return":null,"throws":null,"properties":null,"type":null,"short_doc":" ..."},{"tagname":"method","name":"onFocusLeave","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2459}],"doc":"<p>Called when focus exits from this Component's hierarchy</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":2459,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.Widget-event-focusleave\" rel=\"Ext.Widget-event-focusleave\" class=\"docClass\">focusleave</a>"],"method_calls":["fireEvent"],"id":"method-onFocusLeave","owner":"Ext.Widget","overrides":[{"name":"onFocusLeave","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-method-onFocusLeave\" rel=\"Ext.mixin.Focusable-method-onFocusLeave\" class=\"docClass\">Ext.mixin.Focusable.onFocusLeave</a>"}],"template":true,"protected":true,"short_doc":"Called when focus exits from this Component's hierarchy ..."},{"tagname":"method","name":"onFocusMove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":560}],"doc":"<p>Called when focus moves <em>within</em> this Component's hierarchy</p>\n","template":true,"protected":true,"params":[{"tagname":"params","type":"Object","name":"info","doc":"\n","properties":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The underlying Event object.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","type":"HTMLElement","name":"toElement","doc":"<p>The element gaining focus.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"HTMLElement","name":"fromElement","doc":"<p>The element losing focus.</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Ext.Component","name":"toComponent","doc":"<p>The Component gaining focus.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Ext.Component","name":"fromComponent","doc":"<p>The Component losing focus.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Boolean","name":"backwards","doc":"<p><code>true</code> if the focus movement is backward in DOM order</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-onFocusMove","owner":"Ext.mixin.Focusable","short_doc":"Called when focus moves within this Component's hierarchy ..."},{"tagname":"method","name":"onInheritedAdd","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":440}],"doc":"<p>Called when this Inheritable is added to a parent</p>\n","params":[{"tagname":"params","name":"parent","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"instanced","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["invalidateInheritedState"],"id":"method-onInheritedAdd","owner":"Ext.mixin.Inheritable","short_doc":"Called when this Inheritable is added to a parent ..."},{"tagname":"method","name":"onInheritedRemove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":458}],"doc":"<p>Called when this inheritable is removed from a parent</p>\n","params":[{"tagname":"params","type":"Boolean","name":"destroying","doc":"<p><code>true</code> if this item will be destroyed by it's container</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["invalidateInheritedState"],"id":"method-onInheritedRemove","owner":"Ext.mixin.Inheritable","short_doc":"Called when this inheritable is removed from a parent ..."},{"tagname":"method","name":"onRemoved","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2401}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2401,"params":[{"name":"destroying","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["onInheritedRemove"],"id":"method-onRemoved","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"onRippleStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1478}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1478,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["shouldRipple"],"id":"method-onRippleStart","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"owns","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1222}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1222,"params":[{"name":"element","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-owns","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"parseBox","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2407}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2407,"params":[{"name":"box","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-parseBox","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"postBlur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1226}],"doc":"<p>Template method to do any post-blur processing.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-postBlur","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any post-blur processing. ..."},{"tagname":"method","name":"postFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1242}],"doc":"<p>Template method to do any post-focus processing.</p>\n","protected":true,"params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-postFocus","owner":"Ext.mixin.Focusable","short_doc":"Template method to do any post-focus processing. ..."},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","short_doc":"Prepares a given class for observable instances. ..."},{"tagname":"method","name":"processElementConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2004}],"doc":"<p>Recursively processes the element templates for this class and its superclasses,\nascending the hierarchy until it reaches a superclass whose element template\nhas already been processed.  This method is invoked using the prototype as the scope.</p>\n","private":true,"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["getElementConfig","hasOwnProperty","initElementListeners"],"id":"method-processElementConfig","owner":"Ext.Widget","short_doc":"Recursively processes the element templates for this class and its superclasses,\nascending the hierarchy until it rea..."},{"tagname":"method","name":"publishState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":457}],"doc":"<p>Publish this components state to the <code>ViewModel</code>. If no arguments are given (or if\nthis is the first call), the entire state is published. This state is determined by\nthe <code>publishes</code> property.</p>\n\n<p>This method is called only by component authors.</p>\n","params":[{"tagname":"params","type":"String","name":"property","optional":true,"doc":"<p>The name of the property to update.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value of <code>property</code>. Only needed if <code>property</code> is given.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"protected":true,"since":"5.0.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getBind","getConfig","getInitialConfig","getPublishes","lookupViewModel"],"id":"method-publishState","owner":"Ext.mixin.Bindable","short_doc":"Publish this components state to the ViewModel. ..."},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"prefix","optional":true,"doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createRelayer","mon"],"id":"method-relayEvents","owner":"Ext.mixin.Observable","short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ..."},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","short_doc":"Alias for unAfter. ..."},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","short_doc":"Alias for unBefore. ..."},{"tagname":"method","name":"removeCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1336}],"doc":"<p>Removes the given CSS class(es) from this widget's primary element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The class(es) to remove.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String","name":"prefix","default":"\"\"","optional":true,"doc":"<p>Optional prefix to prepend before each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"suffix","default":"\"\"","optional":true,"doc":"<p>Optional suffix to append to each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeCls","owner":"Ext.Widget","short_doc":"Removes the given CSS class(es) from this widget's primary element. ..."},{"tagname":"method","name":"removeClsWithUI","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2411}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2411,"params":[{"name":"cls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeClsWithUI","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"removeDelegatedListener","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":127}],"doc":"<p>Removes delegated listeners for a given eventName, function, and scope.\nUsers should not invoke this method directly.  It is called automatically by\nthe framework as part of removeListener processing.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"eventName","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-removeDelegatedListener","owner":"Ext.mixin.ComponentDelegation","short_doc":"Removes delegated listeners for a given eventName, function, and scope. ..."},{"tagname":"method","name":"removeItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":471}],"doc":"<p>Remove a child item from the DOM.</p>\n","params":[{"tagname":"params","type":"Ext.list.AbstractTreeItem","name":"item","doc":"<p>The item to remove.</p>\n","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"}],"protected":true,"template":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-removeItem","owner":"Ext.list.AbstractTreeItem","short_doc":"Remove a child item from the DOM. ..."},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["doRemoveListener"],"id":"method-removeListener","owner":"Ext.mixin.Observable","short_doc":"Removes an event handler. ..."},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","short_doc":"Removes listeners that were added by the mon method. ..."},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","private":true,"params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","short_doc":"Remove a single managed listener item ..."},{"tagname":"method","name":"removePlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Pluggable.js","linenr":227}],"doc":"<p>Removes and (optionally) destroys a plugin.</p>\n\n<p><strong>Note:</strong> Not all plugins are designed to be removable. Consult the documentation\nfor the specific plugin in question to be sure.</p>\n","params":[{"tagname":"params","type":"String/Ext.plugin.Abstract","name":"plugin","doc":"<p>The plugin or its <code>id</code> to remove.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},{"tagname":"params","type":"Boolean","name":"destroy","optional":true,"doc":"<p>Pass <code>true</code> to not call <code>destroy()</code> on the plugin.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"since":"6.2.0","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getPlugins"],"id":"method-removePlugin","owner":"Ext.mixin.Pluggable","short_doc":"Removes and (optionally) destroys a plugin. ..."},{"tagname":"method","name":"render","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2415}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2415,"params":[{"name":"container","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"position","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["finishRender"],"id":"method-render","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"replaceCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1348}],"doc":"<p>Replaces specified classes with the newly specified classes.\nIt uses the <a href=\"#!/api/Ext.Widget-method-addCls\" rel=\"Ext.Widget-method-addCls\" class=\"docClass\">addCls</a> and <a href=\"#!/api/Ext.Widget-method-removeCls\" rel=\"Ext.Widget-method-removeCls\" class=\"docClass\">removeCls</a> methods, so if the class(es) you\nare removing don't exist, it will still add the new classes.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"oldCls","doc":"<p>The class(es) to remove.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String/String[]","name":"newCls","doc":"<p>The class(es) to add.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"params","type":"String","name":"prefix","default":"\"\"","optional":true,"doc":"<p>Optional prefix to prepend before each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"String","name":"suffix","default":"\"\"","optional":true,"doc":"<p>Optional suffix to append to each class.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-replaceCls","owner":"Ext.Widget","short_doc":"Replaces specified classes with the newly specified classes. ..."},{"tagname":"method","name":"resolveListenerScope","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1287}],"doc":"<p>Gets the Controller or Component that is used as the event root for this view.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":1287,"params":[{"name":"defaultScope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"skipThis","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getInheritedConfig","getRefOwner"],"id":"method-resolveListenerScope","owner":"Ext.Widget","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"}],"return":{"type":"Ext.app.ViewController/Ext.container.Container","name":"return","doc":"<p>The default listener scope.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>/<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"protected":true,"since":"5.0.0","short_doc":"Gets the Controller or Component that is used as the event root for this view. ..."},{"tagname":"method","name":"resolveSatelliteListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":229}],"doc":"<p>Returns the default listener scope for a \"satellite\" of this component.\nUsed for resolving scope for observable objects that are not part of the normal\nContainer/Component hierarchy (for example, plugins)</p>\n","params":[{"tagname":"params","type":"Ext.mixin.Observable","name":"satellite","doc":"\n","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>"},{"tagname":"params","type":"Object","name":"defaultScope","optional":true,"doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Object","name":"return","doc":"<p>The listener scope</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"protected":true,"since":"5.1.1","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInheritedConfig"],"id":"method-resolveSatelliteListenerScope","owner":"Ext.mixin.Inheritable","short_doc":"Returns the default listener scope for a \"satellite\" of this component. ..."},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","short_doc":"Resumes firing of the named event(s). ..."},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","optional":true,"doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","short_doc":"Resumes firing events (see suspendEvents). ..."},{"tagname":"method","name":"revertFocus","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":587}],"doc":"<p>Returns focus to the Component or element found in the cached\nfocusEnterEvent.</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["findFocusTarget"],"id":"method-revertFocus","owner":"Ext.mixin.Focusable","short_doc":"Returns focus to the Component or element found in the cached\nfocusEnterEvent. ..."},{"tagname":"method","name":"revertFocusTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":668}],"doc":"<p>This field is on the recieving end of a call from method!revertFocus.</p>\n\n<p>It is called when focus is being pushed back into this Component from a Component\nthat is focused and is being hidden or disabled.</p>\n\n<p>We must focus the passed element.</p>\n\n<p>Subclasses may perform some extra processing to prepare for refocusing.</p>\n","params":[{"tagname":"params","name":"target","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-revertFocusTo","owner":"Ext.mixin.Focusable","short_doc":"This field is on the recieving end of a call from method!revertFocus. ..."},{"tagname":"method","name":"setAriaAttributes","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaAttributes\" rel=\"Ext.mixin.Accessible-cfg-ariaAttributes\" class=\"docClass\">ariaAttributes</a>.</p>\n","params":[{"type":"Object","name":"ariaAttributes","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setAriaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Accessible","short_doc":"Sets the value of ariaAttributes. ..."},{"tagname":"method","name":"setBaseCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1696}],"doc":"<p><debug></debug></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-setBaseCls","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"setBind","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-bind\" rel=\"Ext.mixin.Bindable-cfg-bind\" class=\"docClass\">bind</a>.</p>\n","params":[{"type":"Object/String","name":"bind","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setBind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of bind. ..."},{"tagname":"method","name":"setBorder","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-border\" rel=\"Ext.Widget-cfg-border\" class=\"docClass\">border</a>.</p>\n","params":[{"type":"Boolean","name":"border","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setBorder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":257}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of border. ..."},{"tagname":"method","name":"setCls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-cls\" rel=\"Ext.Widget-cfg-cls\" class=\"docClass\">cls</a>.</p>\n","params":[{"type":"String/String[]","name":"cls","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"id":"method-setCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":214}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of cls. ..."},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"value","optional":true,"doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-setConfig","owner":"Ext.Base","short_doc":"Sets a single/multiple configuration options. ..."},{"tagname":"method","name":"setController","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a>.</p>\n","params":[{"type":"String/Object/Ext.app.ViewController","name":"controller","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"}],"id":"method-setController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":47}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of controller. ..."},{"tagname":"method","name":"setDefaultListenerScope","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-defaultListenerScope\" rel=\"Ext.mixin.Bindable-cfg-defaultListenerScope\" class=\"docClass\">defaultListenerScope</a>.</p>\n","params":[{"type":"Boolean","name":"defaultListenerScope","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setDefaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of defaultListenerScope. ..."},{"tagname":"method","name":"setDisabled","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-disabled\" rel=\"Ext.Widget-cfg-disabled\" class=\"docClass\">disabled</a>.</p>\n","params":[{"type":"Boolean","name":"disabled","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":500}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of disabled. ..."},{"tagname":"method","name":"setEventHandlers","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-eventHandlers\" rel=\"Ext.Widget-cfg-eventHandlers\" class=\"docClass\">eventHandlers</a>.</p>\n","params":[{"type":"Object","name":"eventHandlers","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setEventHandlers","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":358}],"properties":null,"private":true,"deprecated":{"text":"<p>Inline event handlers are deprecated</p>\n\n\n\n","version":"6.6.0"},"static":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of eventHandlers. ..."},{"tagname":"method","name":"setExpandable","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-expandable\" rel=\"Ext.list.AbstractTreeItem-cfg-expandable\" class=\"docClass\">expandable</a>.</p>\n","params":[{"type":"Boolean","name":"expandable","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setExpandable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":56}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of expandable. ..."},{"tagname":"method","name":"setExpanded","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-expanded\" rel=\"Ext.list.AbstractTreeItem-cfg-expanded\" class=\"docClass\">expanded</a>.</p>\n","params":[{"type":"Boolean","name":"expanded","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setExpanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":63}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of expanded. ..."},{"tagname":"method","name":"setFloated","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-floated\" rel=\"Ext.list.AbstractTreeItem-cfg-floated\" class=\"docClass\">floated</a>.</p>\n","params":[{"type":"Object","name":"floated","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setFloated","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":585}],"static":null,"private":null,"inheritable":null,"linenr":585,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of floated. ..."},{"tagname":"method","name":"setHeight","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-height\" rel=\"Ext.Widget-cfg-height\" class=\"docClass\">height</a>.</p>\n","params":[{"type":"Number/String","name":"height","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":479}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of height. ..."},{"tagname":"method","name":"setHidden","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-hidden\" rel=\"Ext.Widget-cfg-hidden\" class=\"docClass\">hidden</a>.</p>\n","params":[{"type":"Boolean","name":"hidden","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setHidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":490}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of hidden. ..."},{"tagname":"method","name":"setHideMode","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-hideMode\" rel=\"Ext.Widget-cfg-hideMode\" class=\"docClass\">hideMode</a>.</p>\n","params":[{"type":"'clip'/'display'/'offsets'/'opacity'/'visibility'","name":"hideMode","doc":"<p>The new value.</p>\n","html_type":"'clip'/'display'/'offsets'/'opacity'/'visibility'"}],"id":"method-setHideMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":435}],"properties":null,"since":"6.5.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of hideMode. ..."},{"tagname":"method","name":"setIconCls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-iconCls\" rel=\"Ext.list.AbstractTreeItem-cfg-iconCls\" class=\"docClass\">iconCls</a>.</p>\n","params":[{"type":"String","name":"iconCls","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setIconCls","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":70}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of iconCls. ..."},{"tagname":"method","name":"setIconClsProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-iconClsProperty\" rel=\"Ext.list.AbstractTreeItem-cfg-iconClsProperty\" class=\"docClass\">iconClsProperty</a>.</p>\n","params":[{"type":"String","name":"iconClsProperty","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setIconClsProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":105}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of iconClsProperty. ..."},{"tagname":"method","name":"setIndent","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-indent\" rel=\"Ext.list.AbstractTreeItem-cfg-indent\" class=\"docClass\">indent</a>.</p>\n","params":[{"type":"Object","name":"indent","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setIndent","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":111}],"static":null,"private":null,"inheritable":null,"linenr":111,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of indent. ..."},{"tagname":"method","name":"setInstanceCls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-instanceCls\" rel=\"Ext.Widget-cfg-instanceCls\" class=\"docClass\">instanceCls</a>.</p>\n","params":[{"type":"String/String[]","name":"instanceCls","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"id":"method-setInstanceCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":456}],"properties":null,"private":true,"since":"6.5.0","static":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of instanceCls. ..."},{"tagname":"method","name":"setLeaf","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-leaf\" rel=\"Ext.list.AbstractTreeItem-cfg-leaf\" class=\"docClass\">leaf</a>.</p>\n","params":[{"type":"Boolean","name":"leaf","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setLeaf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":77}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of leaf. ..."},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","short_doc":"An alias for addListener. ..."},{"tagname":"method","name":"setLoading","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-loading\" rel=\"Ext.list.AbstractTreeItem-cfg-loading\" class=\"docClass\">loading</a>.</p>\n","params":[{"type":"Boolean","name":"loading","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":84}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of loading. ..."},{"tagname":"method","name":"setMargin","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-margin\" rel=\"Ext.Widget-cfg-margin\" class=\"docClass\">margin</a>.</p>\n","params":[{"type":"Number/String","name":"margin","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setMargin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":223}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of margin. ..."},{"tagname":"method","name":"setNode","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-node\" rel=\"Ext.list.AbstractTreeItem-cfg-node\" class=\"docClass\">node</a>.</p>\n","params":[{"type":"Ext.data.TreeModel","name":"node","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">Ext.data.TreeModel</a>"}],"id":"method-setNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":119}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of node. ..."},{"tagname":"method","name":"setOver","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-over\" rel=\"Ext.list.AbstractTreeItem-cfg-over\" class=\"docClass\">over</a>.</p>\n","params":[{"type":"Number","name":"over","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"id":"method-setOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":125}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of over. ..."},{"tagname":"method","name":"setOwner","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-owner\" rel=\"Ext.list.AbstractTreeItem-cfg-owner\" class=\"docClass\">owner</a>.</p>\n","params":[{"type":"Ext.list.Tree","name":"owner","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.list.Tree\" rel=\"Ext.list.Tree\" class=\"docClass\">Ext.list.Tree</a>"}],"id":"method-setOwner","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":113}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of owner. ..."},{"tagname":"method","name":"setParentItem","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-parentItem\" rel=\"Ext.list.AbstractTreeItem-cfg-parentItem\" class=\"docClass\">parentItem</a>.</p>\n","params":[{"type":"Ext.list.AbstractTreeItem","name":"parentItem","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.list.AbstractTreeItem\" rel=\"Ext.list.AbstractTreeItem\" class=\"docClass\">Ext.list.AbstractTreeItem</a>"}],"id":"method-setParentItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":135}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of parentItem. ..."},{"tagname":"method","name":"setPosition","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2443}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2443,"params":[{"name":"x","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"y","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-setPosition","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"setPublishes","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-publishes\" rel=\"Ext.mixin.Bindable-cfg-publishes\" class=\"docClass\">publishes</a>.</p>\n","params":[{"type":"String/String[]/Object","name":"publishes","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setPublishes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":102}],"properties":null,"since":"5.0.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of publishes. ..."},{"tagname":"method","name":"setRenderTo","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-renderTo\" rel=\"Ext.Widget-cfg-renderTo\" class=\"docClass\">renderTo</a>.</p>\n","params":[{"type":"Object","name":"renderTo","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setRenderTo","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2288}],"static":null,"private":null,"inheritable":null,"linenr":2288,"owner":"Ext.Widget","short_doc":"Sets the value of renderTo. ..."},{"tagname":"method","name":"setRipple","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-ripple\" rel=\"Ext.Widget-cfg-ripple\" class=\"docClass\">ripple</a>.</p>\n","params":[{"type":"Boolean/Object/String","name":"ripple","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setRipple","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":408}],"properties":[{"tagname":"cfg","type":"String","name":"color","doc":"<p>The background color of the ripple.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","type":"Array","name":"position","doc":"<p>Position for the ripple to start at [x,y].\nDetermines if a Ripple effect should happen whenever this element is pressed.</p>\n\n\n\n\n<p>For example:\n     {\n         ripple: true\n     }</p>\n\n\n\n\n<p>Or:</p>\n\n\n\n\n<pre><code> {\n     ripple: {\n         color: 'red'\n     }\n }\n</code></pre>\n\n\n\n\n<p>For complex components, individual elements can suppress ripples by adding the\n<code>x-no-ripple</code> class to disable rippling for a tree of elements.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"}],"since":"6.5.0","static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of ripple. ..."},{"tagname":"method","name":"setSelected","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-selected\" rel=\"Ext.list.AbstractTreeItem-cfg-selected\" class=\"docClass\">selected</a>.</p>\n","params":[{"type":"Boolean","name":"selected","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":91}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of selected. ..."},{"tagname":"method","name":"setSelectedParent","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-selectedParent\" rel=\"Ext.list.AbstractTreeItem-cfg-selectedParent\" class=\"docClass\">selectedParent</a>.</p>\n","params":[{"type":"Boolean","name":"selectedParent","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"id":"method-setSelectedParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":97}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of selectedParent. ..."},{"tagname":"method","name":"setSession","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a>.</p>\n","params":[{"type":"Boolean/Object/Ext.data.Session","name":"session","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"}],"id":"method-setSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of session. ..."},{"tagname":"method","name":"setSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1292}],"doc":"<p>Sets the size of the Component.</p>\n","params":[{"tagname":"params","type":"Number","name":"width","doc":"<p>The new width for the Component.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"Number","name":"height","doc":"<p>The new height for the Component.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["setHeight","setSize","setWidth"],"id":"method-setSize","owner":"Ext.Widget","short_doc":"Sets the size of the Component. ..."},{"tagname":"method","name":"setStyle","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-style\" rel=\"Ext.Widget-cfg-style\" class=\"docClass\">style</a>.</p>\n","params":[{"type":"String/Object","name":"style","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":230}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of style. ..."},{"tagname":"method","name":"setTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":445}],"doc":"<p>Set the tabIndex property for this Focusable. If the focusEl\nis available, set tabIndex attribute on it, too.</p>\n","params":[{"tagname":"params","type":"Number","name":"newTabIndex","doc":"<p>new tabIndex to set</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"params","type":"HTMLElement","name":"focusEl","optional":true,"doc":"<p>(private)</p>\n","html_type":"HTMLElement"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getFocusEl","isDisabled"],"id":"method-setTabIndex","owner":"Ext.mixin.Focusable","short_doc":"Set the tabIndex property for this Focusable. ..."},{"tagname":"method","name":"setText","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-text\" rel=\"Ext.list.AbstractTreeItem-cfg-text\" class=\"docClass\">text</a>.</p>\n","params":[{"type":"String","name":"text","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":141}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of text. ..."},{"tagname":"method","name":"setTextProperty","doc":"<p>Sets the value of <a href=\"#!/api/Ext.list.AbstractTreeItem-cfg-textProperty\" rel=\"Ext.list.AbstractTreeItem-cfg-textProperty\" class=\"docClass\">textProperty</a>.</p>\n","params":[{"type":"String","name":"textProperty","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setTextProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":151}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.list.AbstractTreeItem","short_doc":"Sets the value of textProperty. ..."},{"tagname":"method","name":"setTouchAction","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-touchAction\" rel=\"Ext.Widget-cfg-touchAction\" class=\"docClass\">touchAction</a>.</p>\n","params":[{"type":"Object","name":"touchAction","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setTouchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":302}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of touchAction. ..."},{"tagname":"method","name":"setTwoWayBindable","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-twoWayBindable\" rel=\"Ext.mixin.Bindable-cfg-twoWayBindable\" class=\"docClass\">twoWayBindable</a>.</p>\n","params":[{"type":"String/String[]/Object","name":"twoWayBindable","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"method-setTwoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of twoWayBindable. ..."},{"tagname":"method","name":"setUi","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-ui\" rel=\"Ext.Widget-cfg-ui\" class=\"docClass\">ui</a>.</p>\n","params":[{"type":"String/String[]","name":"ui","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"id":"method-setUi","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":384}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of ui. ..."},{"tagname":"method","name":"setUserCls","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-userCls\" rel=\"Ext.Widget-cfg-userCls\" class=\"docClass\">userCls</a>.</p>\n","params":[{"type":"String/String[]","name":"userCls","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"id":"method-setUserCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":392}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of userCls. ..."},{"tagname":"method","name":"setViewModel","doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a>.</p>\n","params":[{"type":"String/Object/Ext.app.ViewModel","name":"viewModel","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"}],"id":"method-setViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.mixin.Bindable","short_doc":"Sets the value of viewModel. ..."},{"tagname":"method","name":"setWidth","doc":"<p>Sets the value of <a href=\"#!/api/Ext.Widget-cfg-width\" rel=\"Ext.Widget-cfg-width\" class=\"docClass\">width</a>.</p>\n","params":[{"type":"Number/String","name":"width","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"id":"method-setWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":468}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Sets the value of width. ..."},{"tagname":"method","name":"shouldRipple","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1458}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1458,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getDisabled","getRipple"],"id":"method-shouldRipple","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"show","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1312}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1312,"params":[],"chainable":false,"fires":[],"method_calls":["setHidden"],"id":"method-show","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","protected":true,"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-statics","owner":"Ext.Base","short_doc":"Get the reference to the class from which this object was instantiated. ..."},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>..."}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["_initEvent"],"id":"method-suspendEvent","owner":"Ext.mixin.Observable","short_doc":"Suspends firing of the named event(s). ..."},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","short_doc":"Suspends the firing of all events. ..."},{"tagname":"method","name":"syncKeyboardMode","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1061}],"doc":"\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"e","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-syncKeyboardMode","owner":"Ext.mixin.Focusable","short_doc":" ..."},{"tagname":"method","name":"toggleCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1273}],"doc":"<p>Toggles the specified CSS class on this element (removes it if it already exists,\notherwise adds it).</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to toggle.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Boolean","name":"state","optional":true,"doc":"<p>If specified as <code>true</code>, causes the class to be added. If\nspecified as <code>false</code>, causes the class to be removed.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"chainable":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"id":"method-toggleCls","owner":"Ext.Widget","return":{"type":"Ext.Widget","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},"short_doc":"Toggles the specified CSS class on this element (removes it if it already exists,\notherwise adds it). ..."},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":null,"fires":null,"method_calls":null,"id":"method-un","owner":"Ext.mixin.Observable","return":null,"throws":null,"properties":null,"type":null,"short_doc":"Shorthand for removeListener. ..."},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-unAfter","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Object","name":"options","optional":true,"doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["removeListener"],"id":"method-unBefore","owner":"Ext.mixin.Observable","short_doc":"Removes a before-event handler. ..."},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":true,"fires":null,"method_calls":null,"id":"method-unlink","owner":"Ext.Base","short_doc":"Destroys a given set of linked objects. ..."},{"tagname":"method","name":"up","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2447}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2447,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"method-up","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateBorder","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":771}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":771,"params":[{"name":"border","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["toggleCls"],"id":"method-updateBorder","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1373}],"doc":"<p>All cls methods directly report to the <a href=\"#!/api/Ext.Widget-cfg-cls\" rel=\"Ext.Widget-cfg-cls\" class=\"docClass\">cls</a> configuration, so anytime it changes,\n<a href=\"#!/api/Ext.Widget-method-updateCls\" rel=\"Ext.Widget-method-updateCls\" class=\"docClass\">updateCls</a> will be called</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"newCls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldCls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateCls","owner":"Ext.Widget","short_doc":"All cls methods directly report to the cls configuration, so anytime it changes,\nupdateCls will be called ..."},{"tagname":"method","name":"updateDisabled","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":683}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":683,"params":[{"name":"disabled","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["disableFocusable","enableFocusable"],"id":"method-updateDisabled","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1553}],"doc":"\n","params":[{"tagname":"params","name":"height","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-updateHeight","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateHidden","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1382}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1382,"params":[{"name":"hidden","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["activateFocusableContainer","revertFocus"],"id":"method-updateHidden","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateInstanceCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1640}],"doc":"<p>empty fn for modern/classic compat</p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"instanceCls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"oldInstanceCls","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["syncUiCls"],"id":"method-updateInstanceCls","owner":"Ext.Widget","short_doc":"empty fn for modern/classic compat ..."},{"tagname":"method","name":"updateLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":2312}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":2312,"params":[],"chainable":false,"fires":[],"method_calls":["getRefOwner"],"id":"method-updateLayout","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateMargin","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1435}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1435,"params":[{"name":"margin","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateMargin","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateNode","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":158}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":158,"params":[{"name":"node","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["doNodeUpdate","getOwner","insertItem","setExpanded"],"id":"method-updateNode","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"updateOwner","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":562}],"doc":"<p>Implementation so that the Traversable mixin which manipulates the parent\naxis can function in a TreeList.</p>\n","params":[{"tagname":"params","type":"Ext.list.Tree/Ext.list.TreeItem","name":"owner","doc":"<p>The owner of this node.</p>\n","html_type":"<a href=\"#!/api/Ext.list.Tree\" rel=\"Ext.list.Tree\" class=\"docClass\">Ext.list.Tree</a>/<a href=\"#!/api/Ext.list.TreeItem\" rel=\"Ext.list.TreeItem\" class=\"docClass\">Ext.list.TreeItem</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-updateOwner","owner":"Ext.list.AbstractTreeItem","short_doc":"Implementation so that the Traversable mixin which manipulates the parent\naxis can function in a TreeList. ..."},{"tagname":"method","name":"updateRenderTo","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1510}],"doc":"<p></p>\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":null,"params":[{"name":"newContainer","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["render"],"id":"method-updateRenderTo","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateRipple","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1439}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1439,"params":[{"name":"ripple","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateRipple","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateSelected","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/list/AbstractTreeItem.js","linenr":188}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":188,"params":[{"name":"selected","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getParentItem"],"id":"method-updateSelected","owner":"Ext.list.AbstractTreeItem","short_doc":" ..."},{"tagname":"method","name":"updateSession","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":860}],"doc":"<p>Updates the session config.</p>\n","params":[{"tagname":"params","type":"Ext.data.Session","name":"session","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getInherited"],"id":"method-updateSession","owner":"Ext.mixin.Bindable","short_doc":"Updates the session config. ..."},{"tagname":"method","name":"updateTouchAction","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1516}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1516,"params":[{"name":"touchAction","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-updateTouchAction","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateUi","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1536}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":1536,"params":[],"chainable":false,"fires":[],"method_calls":["syncUiCls"],"id":"method-updateUi","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"updateViewModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":876}],"doc":"<p>Updates the viewModel config.</p>\n","params":[{"tagname":"params","type":"Ext.app.ViewModel","name":"viewModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},{"tagname":"params","type":"Ext.app.ViewModel","name":"oldViewModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"}],"private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getController","getInherited"],"id":"method-updateViewModel","owner":"Ext.mixin.Bindable","short_doc":"Updates the viewModel config. ..."},{"tagname":"method","name":"updateWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":1542}],"doc":"\n","params":[{"tagname":"params","name":"width","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"protected":true,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-updateWidth","owner":"Ext.Widget","short_doc":" ..."},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","private":true,"since":"6.7.0","inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":[],"method_calls":["getConfigWatcher"],"id":"method-watchConfig","owner":"Ext.Base","short_doc":"Watches config properties. ..."},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Ext.Class","name":"mixinClass","optional":true,"doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"}],"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator"],"id":"static-method-addConfig","owner":"Ext.Base","short_doc":"Adds new config properties to this class. ..."},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"name","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"member","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","name":"privacy","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addMember","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"Boolean","name":"isStatic","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","type":"Boolean","name":"privacy","default":"false","optional":true,"doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addConfig","addMembers"],"id":"static-method-addMembers","owner":"Ext.Base","short_doc":"Add methods / properties to the prototype of this class. ..."},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":true,"fires":null,"method_calls":["addMembers"],"id":"static-method-addStatics","owner":"Ext.Base","short_doc":"Add / override static properties of this class. ..."},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"private":true,"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addMembers"],"id":"static-method-borrow","owner":"Ext.Base","short_doc":"Borrow another class' members to the prototype of this class. ..."},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callParent","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","protected":true,"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[{"name":"args","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-callSuper","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-create","owner":"Ext.Base","short_doc":"Create a new instance of this Class. ..."},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":null,"fires":null,"method_calls":null,"id":"static-method-createAlias","owner":"Ext.Base","short_doc":"Create aliases for existing prototype methods. ..."},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","private":true,"static":true,"inheritable":true,"params":[{"tagname":"params","name":"parentClass","doc":"\n","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"inheritdoc":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"id":"static-method-extend","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getConfigurator","owner":"Ext.Base","short_doc":"Returns the Ext.Configurator for this class. ..."},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-getName","owner":"Ext.Base","short_doc":"Get the current class' name in string format. ..."},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"name","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"mixinClass","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":false,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"id":"static-method-mixin","owner":"Ext.Base","short_doc":"Used internally by the mixins pre-processor ..."},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[{"name":"fn","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"name":"scope","type":"Object","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"chainable":true,"fires":null,"method_calls":null,"id":"static-method-onExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"inheritable":true,"inheritdoc":null,"private":null,"linenr":null,"chainable":false,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"id":"static-method-override","owner":"Ext.Base","short_doc":"Override members of this class. ..."},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","private":true,"static":true,"inheritable":true,"inheritdoc":null,"linenr":null,"params":[],"chainable":false,"fires":null,"method_calls":null,"id":"static-method-triggerExtended","owner":"Ext.Base","short_doc":" ..."},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":88}],"doc":"<p>Fires when this Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> loses focus.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The blur event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-blur","owner":"Ext.mixin.Focusable","short_doc":"Fires when this Component's focusEl loses focus. ..."},{"tagname":"event","name":"disabledchange","doc":"<p>Fires when the <a href=\"#!/api/Ext.Widget-cfg-disabled\" rel=\"Ext.Widget-cfg-disabled\" class=\"docClass\">disabled</a> configuration is changed by <a href=\"#!/api/Ext.Widget-method-setDisabled\" rel=\"Ext.Widget-method-setDisabled\" class=\"docClass\">setDisabled</a>.</p>\n","params":[{"name":"this","type":"Ext.Widget","doc":"<p>The <a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a> instance.</p>\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},{"name":"value","type":"Boolean","doc":"<p>The new value being set.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"name":"oldValue","type":"Boolean","doc":"<p>The existing value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-disabledchange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":500}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Fires when the disabled configuration is changed by setDisabled. ..."},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":81}],"doc":"<p>Fires when this Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> receives focus.</p>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Widget","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focus event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-focus","owner":"Ext.mixin.Focusable","short_doc":"Fires when this Component's focusEl receives focus. ..."},{"tagname":"event","name":"focusenter","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":95}],"doc":"<p>Fires when focus enters this Component's hierarchy.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focusenter event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-focusenter","owner":"Ext.mixin.Focusable","short_doc":"Fires when focus enters this Component's hierarchy. ..."},{"tagname":"event","name":"focusleave","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":102}],"doc":"<p>Fires when focus leaves this Component's hierarchy.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focusleave event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-focusleave","owner":"Ext.mixin.Focusable","short_doc":"Fires when focus leaves this Component's hierarchy. ..."},{"tagname":"event","name":"heightchange","doc":"<p>Fires when the <a href=\"#!/api/Ext.Widget-cfg-height\" rel=\"Ext.Widget-cfg-height\" class=\"docClass\">height</a> configuration is changed by <a href=\"#!/api/Ext.Widget-method-setHeight\" rel=\"Ext.Widget-method-setHeight\" class=\"docClass\">setHeight</a>.</p>\n","params":[{"name":"this","type":"Ext.Widget","doc":"<p>The <a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a> instance.</p>\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},{"name":"value","type":"Number/String","doc":"<p>The new value being set.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"name":"oldValue","type":"Number/String","doc":"<p>The existing value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-heightchange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":479}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Fires when the height configuration is changed by setHeight. ..."},{"tagname":"event","name":"hiddenchange","doc":"<p>Fires when the <a href=\"#!/api/Ext.Widget-cfg-hidden\" rel=\"Ext.Widget-cfg-hidden\" class=\"docClass\">hidden</a> configuration is changed by <a href=\"#!/api/Ext.Widget-method-setHidden\" rel=\"Ext.Widget-method-setHidden\" class=\"docClass\">setHidden</a>.</p>\n","params":[{"name":"this","type":"Ext.Widget","doc":"<p>The <a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a> instance.</p>\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},{"name":"value","type":"Boolean","doc":"<p>The new value being set.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"name":"oldValue","type":"Boolean","doc":"<p>The existing value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-hiddenchange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":490}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Fires when the hidden configuration is changed by setHidden. ..."},{"tagname":"event","name":"widthchange","doc":"<p>Fires when the <a href=\"#!/api/Ext.Widget-cfg-width\" rel=\"Ext.Widget-cfg-width\" class=\"docClass\">width</a> configuration is changed by <a href=\"#!/api/Ext.Widget-method-setWidth\" rel=\"Ext.Widget-method-setWidth\" class=\"docClass\">setWidth</a>.</p>\n","params":[{"name":"this","type":"Ext.Widget","doc":"<p>The <a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a> instance.</p>\n","html_type":"<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>"},{"name":"value","type":"Number/String","doc":"<p>The new value being set.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"name":"oldValue","type":"Number/String","doc":"<p>The existing value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","ext4_auto_param":true,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"}],"id":"event-widthchange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Widget.js","linenr":468}],"properties":null,"static":null,"private":null,"inheritable":null,"linenr":null,"owner":"Ext.Widget","short_doc":"Fires when the width configuration is changed by setWidth. ..."}],"code_type":"ext_define","id":"class-Ext.list.AbstractTreeItem","singleton":null,"private":null}