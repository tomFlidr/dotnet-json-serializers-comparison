{"tagname":"class","name":"Ext.chart.Util","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true,"singleton":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-charts/chart/Util.js","linenr":1}],"doc":"\n","private":true,"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":[],"uses":[],"members":[{"tagname":"property","name":"defaultRange","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-charts/chart/Util.js","linenr":45}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":45,"type":"Array","default":"[0, 1]","readonly":null,"id":"property-defaultRange","owner":"Ext.chart.Util","short_doc":" ...","html_type":"Array"},{"tagname":"method","name":"applyAnimation","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-charts/chart/Util.js","linenr":140}],"doc":"\n","inheritdoc":null,"static":null,"private":true,"inheritable":null,"linenr":140,"params":[{"name":"animation","type":"Object","html_type":"Object"},{"name":"oldAnimation","type":"Object","html_type":"Object"}],"chainable":false,"fires":null,"method_calls":null,"id":"method-applyAnimation","owner":"Ext.chart.Util","short_doc":" ..."},{"tagname":"method","name":"expandRange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-charts/chart/Util.js","linenr":7}],"doc":"<p>Given a <code>range</code> array of two (min/max) numbers and an arbitrary array of numbers\n(<code>data</code>), updates the given <code>range</code>, if the range of <code>data</code> exceeds it.\nTypically, one would start with the <code>[NaN, NaN]</code> range array instance, call the\nmethod on multiple datasets with that range instance, then validate it with\n<a href=\"#!/api/Ext.chart.Util-method-validateRange\" rel=\"Ext.chart.Util-method-validateRange\" class=\"docClass\">validateRange</a>.</p>\n","private":true,"params":[{"tagname":"params","type":"Number[]","name":"range","doc":"\n","html_type":"Number[]"},{"tagname":"params","type":"Number[]","name":"data","doc":"\n","html_type":"Number[]"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-expandRange","owner":"Ext.chart.Util","short_doc":"Given a range array of two (min/max) numbers and an arbitrary array of numbers\n(data), updates the given range, if th..."},{"tagname":"method","name":"validateRange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-charts/chart/Util.js","linenr":47}],"doc":"<p>Makes sure the range exists, is not zero, and its min/max values are finite numbers.\nIf this is not the case, the values from the provided <code>defaultRange</code>\nare used.</p>\n\n<p>The range to validate. Never modified.</p>\n","private":true,"params":[{"tagname":"params","type":"Number[]","name":"range","doc":"<p>The default range to use, if the given range is not a valid data structure,\nif both values are infinities, or if both values are the same and dangerously\nclose to either infinity (which makes expansion of the range by the value of\n<code>padding</code> impossible).\nIf only a single value is infinity, the other value will be derived\nfrom the finite value by incrementing/decrementing it by the span\nof the default range towards the infinity.\nFor example, if the <code>defaultRange</code> is <code>[0, 1]</code>, we have:</p>\n\n<pre><code>[5, Infinity]   --&gt; [5, 6]\n[3, -Infinity]  --&gt; [2, 3]\n[-Infinity, -5] --&gt; [-6, -5]\n[-3, -Infinity] --&gt; [-4, -3]\n</code></pre>\n","html_type":"Number[]"},{"tagname":"params","type":"Number[]","name":"defaultRange","default":"[0, 1]","optional":true,"doc":"<p>A non-negative padding to use in case of identical min/max.\nNote that the range span is not guaranteed to be <code>padding * 2</code> in this case,\nif min/max are close to MIN_SAFE_INTEGER/MAX_SAFE_INTEGER.</p>\n","html_type":"Number[]"},{"tagname":"params","type":"Number","name":"padding","default":"0.5","optional":true,"doc":"\n","html_type":"Number"}],"return":{"type":"Number[]","name":"return","doc":"\n","properties":null,"html_type":"Number[]"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-validateRange","owner":"Ext.chart.Util","short_doc":"Makes sure the range exists, is not zero, and its min/max values are finite numbers. ..."}],"code_type":"ext_define","singleton":true,"id":"class-Ext.chart.Util"}