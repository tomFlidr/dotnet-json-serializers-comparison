{"tagname":"class","name":"Ext.direct.AmfRemotingProvider","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":3}],"doc":"<p>The <a href=\"#!/api/Ext.direct.AmfRemotingProvider\" rel=\"Ext.direct.AmfRemotingProvider\" class=\"docClass\">AmfRemotingProvider</a>\nallows making RPC calls to a Java object on a BlazeDS or ColdFusion using either the AMFX or the AMF protocols.</p>\n\n\n\n\n<p>The default protocol is AMFX which works on all browsers. If you choose AMF, a flash plugin might be loaded in certain browsers that do not support posting binary data to the server, e.g. Internet Explorer version 9 or less. To choose AMF, set the <a href=\"#!/api/Ext.direct.AmfRemotingProvider-cfg-binary\" rel=\"Ext.direct.AmfRemotingProvider-cfg-binary\" class=\"docClass\">binary</a> property to true.</p>\n\n\n<p>For AMFX, the server must be configured to expose the desired services via an HTTPEndpoint. For example, the following configuration snippet adds an HTTPEndpoint (AMFX endpoint) to the BlazeDS services-config.xml file:</p>\n\n\n<pre><code>&lt;channel-definition id=\"my-http\" class=\"mx.messaging.channels.HTTPChannel\"&gt;\n &lt;endpoint url=\"http://{server.name}:{server.port}/{context.root}/messagebroker/http\" class=\"flex.messaging.endpoints.HTTPEndpoint\"/&gt;\n&lt;/channel-definition&gt;\n </code></pre>\n\n\n\n\n<p>Once the HTTPEndpoint is configured, make sure the service is exposed via the channel by adding the channel (e.g. my-http) to your remoting-services.xml file.\nFor example this allows services to be accessed remotely by both AMF and AMFX:</p>\n\n\n<pre><code>&lt;default-channels&gt;\n &lt;channel ref=\"my-amf\"/&gt;\n &lt;channel ref=\"my-http\"/&gt;\n&lt;/default-channels&gt;\n</code></pre>\n\n\n\n\n<p>In order to make a call, you first need to declare the API to Ext direct. The following example defines local methods to the services provided by the sample Products application provided by Adobe as part of the BlazeDS 4.x binary turnkey distribution's testdrive (Sample 5: Updating Data):</p>\n\n\n<pre><code>    Ext.direct.Manager.addProvider({\n        \"url\":\"/samples/messagebroker/http\", // URL for the HTTPEndpoint\n        \"type\":\"amfremoting\",\n        \"endpoint\": \"my-http\", // the name of the HTTPEndpoint channel as defined in the server's services-config.xml\n        \"actions\":{\n        \"product\":[{ // name of the destination as defined in remoting-config.xml on the server\n            \"name\":\"getProducts\", // method name of the method to call\n            \"len\":0 // number of parameters\n        },{\n            \"name\":\"add\",\n            \"len\":1\n        },{\n            \"name\":\"bad\",\n            \"len\":0\n        }]\n        }\n    });\n\n</code></pre>\n\n\n<p>You can now call the service as follows:</p>\n\n\n\n\n<pre><code>product.getProducts((function(provider, response) {\n    // do something with the response\n    console.log(\"Got \" + response.data.length + \" objects\");\n});\n</code></pre>\n\n\n<p>Note that in case server methods require parameters of a specific class (e.g. flex.samples.product.Product), you should make sure the passed parameter has a field called $flexType set to the class name (in this case flex.Samples.product.Product). This is similar to the remote class alias definition in ActionScript.</p>\n\n<p>The following example shows how to define a binary AMF-based call:</p>\n\n\n<pre><code>    Ext.direct.Manager.addProvider({\n        \"url\":\"/samples/messagebroker/amf\", // URL for the AMFEndpoint\n        \"type\":\"amfremoting\",\n        \"endpoint\": \"my-amf\", // the name of the AMFEndpoint channel as defined in the server's services-config.xml\n        \"binary\": true, // chooses AMF encoding\n        \"actions\":{\n        \"product\":[{ // name of the destination as defined in remoting-config.xml on the server\n            \"name\":\"getProducts\", // method name of the method to call\n            \"len\":0 // number of parameters\n        },{\n            \"name\":\"add\",\n            \"len\":1\n        },{\n            \"name\":\"bad\",\n            \"len\":0\n        }]\n        }\n    });\n\n</code></pre>\n\n\n<p>Calling the server is done the same way as for the AMFX-based definition.</p>\n\n","members":[{"tagname":"cfg","name":"actions","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":102}],"doc":"<p>Object literal defining the server side actions and methods. For example, if\nthe Provider is configured with:</p>\n\n<pre><code>\"actions\":{ // each property within the 'actions' object represents a server side Class \n    \"TestAction\":[ // array of methods within each server side Class to be   \n    {              // stubbed out on client\n        \"name\":\"doEcho\", \n        \"len\":1            \n    },{\n        \"name\":\"multiply\",// name of method\n        \"len\":2           // The number of parameters that will be used to create an\n                          // array of data to send to the server side function.\n                          // Ensure the server sends back a Number, not a String. \n    },{\n        \"name\":\"doForm\",\n        \"formHandler\":true, // direct the client to use specialized form handling method \n        \"len\":1\n    }]\n}\n</code></pre>\n\n\n<p>Note that a Store is not required, a server method can be called at any time.\nIn the following example a <b>client side</b> handler is used to call the\nserver side method \"multiply\" in the server-side \"TestAction\" Class:</p>\n\n\n<pre><code>TestAction.multiply(\n    2, 4, // pass two arguments to server, so specify len=2\n    // callback function after the server is called\n    // result: the result returned by the server\n    //      e: Ext.direct.RemotingEvent object\n    function(result, e) {\n        var t = e.getTransaction();\n        var action = t.action; // server side Class called\n        var method = t.method; // server side method called\n        if(e.status) {\n            var answer = Ext.encode(result); // 8\n    \n        } else {\n            var msg = e.message; // failure message\n        }\n    }\n);\n</code></pre>\n\n\n<p>In the example above, the server side \"multiply\" function will be passed two\narguments (2 and 4).  The \"multiply\" method should return the value 8 which will be\navailable as the <tt>result</tt> in the example above.</p>\n","type":"Object","default":null,"properties":null,"id":"cfg-actions","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Object literal defining the server side actions and methods. ...","html_type":"Object"},{"tagname":"cfg","name":"binary","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":177}],"doc":"<p>If true, use AMF binary encoding instead of AMFX XML-based encoding. Note that on some\nbrowsers, this will load a flash plugin to handle binary communication with the server.\nImportant: If using binary encoding with older browsers, see notes in\nBinaryXhr regarding packaging the Flash plugin for use\nin older browsers.</p>\n","type":"String","default":"false","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-binary","owner":"Ext.direct.AmfRemotingProvider","short_doc":"If true, use AMF binary encoding instead of AMFX XML-based encoding. ...","html_type":"String"},{"tagname":"cfg","name":"enableUrlEncode","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":171}],"doc":"<p>Specify which param will hold the arguments for the method.\nDefaults to <tt>'data'</tt>.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-enableUrlEncode","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Specify which param will hold the arguments for the method. ...","html_type":"String"},{"tagname":"cfg","name":"endpoint","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":165}],"doc":"<p><b>Requred</b>. This is the channel id defined in services-config.xml on the server\n(e.g. my-amf or my-http).</p>\n","type":"String","default":null,"properties":null,"id":"cfg-endpoint","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Requred. ...","html_type":"String"},{"tagname":"cfg","name":"maxRetries","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":187}],"doc":"<p>Number of times to re-attempt delivery on failure of a call.</p>\n","type":"Number","default":"1","properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-maxRetries","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Number of times to re-attempt delivery on failure of a call. ...","html_type":"Number"},{"tagname":"cfg","name":"namespace","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":151}],"doc":"<p>Namespace for the Remoting Provider (defaults to the browser global scope of <i>window</i>).\nExplicitly specify the namespace Object, or specify a String to have a\nnamespace created implicitly.</p>\n","type":"String/Object","default":null,"properties":null,"id":"cfg-namespace","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Namespace for the Remoting Provider (defaults to the browser global scope of window). ...","html_type":"String/Object"},{"tagname":"cfg","name":"timeout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":193}],"doc":"<p>The timeout to use for each request.</p>\n","type":"Number","default":null,"properties":null,"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"accessor":null,"evented":null,"id":"cfg-timeout","owner":"Ext.direct.AmfRemotingProvider","html_type":"Number"},{"tagname":"cfg","name":"url","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":158}],"doc":"<p><b>Required</b>. The URL to connect to the Flex remoting server (LCDS, BlazeDS, etc).\nThis should include the /messagebroker/amf suffix as defined in the services-config.xml\nand remoting-config.xml files.</p>\n","type":"String","default":null,"properties":null,"id":"cfg-url","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Required. ...","html_type":"String"},{"tagname":"method","name":"combineAndSend","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":553}],"doc":"<p>Combine any buffered requests and send them off</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":[],"method_calls":["sendRequest"],"id":"method-combineAndSend","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Combine any buffered requests and send them off ..."},{"tagname":"method","name":"configureFormRequest","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":567}],"doc":"<p>Configure a form submission request</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"action","doc":"<p>The action being executed</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"method","doc":"<p>The method being executed</p>\n","html_type":"Object"},{"tagname":"params","type":"HTMLElement","name":"form","doc":"<p>The form being submitted</p>\n","html_type":"HTMLElement"},{"tagname":"params","type":"Function","name":"callback","optional":true,"doc":"<p>A callback to run after the form submits</p>\n","html_type":"Function"},{"tagname":"params","type":"Object","name":"scope","optional":true,"doc":"<p>A scope to execute the callback in</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-configureFormRequest","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Configure a form submission request ..."},{"tagname":"method","name":"configureRequest","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":403}],"doc":"<p>Configure a direct request</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"action","doc":"<p>The action being executed</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"method","doc":"<p>The method being executed</p>\n","html_type":"Object"},{"tagname":"params","type":"Object","name":"args","doc":"<p>The argument to pass to the request</p>\n","html_type":"Object"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-beforecall\" rel=\"Ext.direct.AmfRemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>","<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-call\" rel=\"Ext.direct.AmfRemotingProvider-event-call\" class=\"docClass\">call</a>"],"method_calls":["fireEvent","queueTransaction"],"id":"method-configureRequest","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Configure a direct request ..."},{"tagname":"method","name":"createEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":703}],"doc":"<p>Create an event from an AMFX response object</p>\n","params":[{"tagname":"params","type":"Object","name":"response","doc":"<p>The AMFX response object</p>\n","html_type":"Object"}],"return":{"type":"Ext.direct.Event","name":"return","doc":"<p>The event</p>\n","properties":null,"html_type":"Ext.direct.Event"},"inheritdoc":null,"static":null,"private":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-createEvent","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Create an event from an AMFX response object ..."},{"tagname":"method","name":"createEvents","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":647}],"doc":"<p>Creates a set of events based on the XHR response</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"response","doc":"<p>The XHR response</p>\n","html_type":"Object"}],"return":{"type":"Ext.direct.Event[]","name":"return","doc":"<p>An array of Ext.direct.Event</p>\n","properties":null,"html_type":"Ext.direct.Event[]"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["createEvent"],"id":"method-createEvents","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Creates a set of events based on the XHR response ..."},{"tagname":"method","name":"createHandler","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":255}],"doc":"<p>Create a handler function for a direct call.</p>\n","private":true,"params":[{"tagname":"params","type":"String","name":"action","doc":"<p>The action the call is for</p>\n","html_type":"String"},{"tagname":"params","type":"Object","name":"method","doc":"<p>The details of the method</p>\n","html_type":"Object"}],"return":{"type":"Function","name":"return","doc":"<p>A JS function that will kick off the call</p>\n","properties":null,"html_type":"Function"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":["<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-beforecall\" rel=\"Ext.direct.AmfRemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>","<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-call\" rel=\"Ext.direct.AmfRemotingProvider-event-call\" class=\"docClass\">call</a>"],"method_calls":["configureFormRequest","configureRequest"],"id":"method-createHandler","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Create a handler function for a direct call. ..."},{"tagname":"method","name":"getCallData","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":434}],"doc":"<p>Gets the Flex remoting message info for a transaction</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"<p>The transaction</p>\n","html_type":"Ext.direct.Transaction"}],"return":{"type":"Object","name":"return","doc":"<p>The Flex remoting message structure ready to encode in an AMFX RemoteMessage</p>\n","properties":null,"html_type":"Object"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getCallData","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Gets the Flex remoting message info for a transaction ..."},{"tagname":"method","name":"getTransaction","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":393}],"doc":"<p>Get transaction from XHR options</p>\n","private":true,"params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>The options sent to the Ajax request</p>\n","html_type":"Object"}],"return":{"type":"Ext.direct.Transaction","name":"return","doc":"<p>The transaction, null if not found</p>\n","properties":null,"html_type":"Ext.direct.Transaction"},"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-getTransaction","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Get transaction from XHR options ..."},{"tagname":"method","name":"initAPI","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":228}],"doc":"<p>Initialize the API</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[],"chainable":false,"fires":["<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-beforecall\" rel=\"Ext.direct.AmfRemotingProvider-event-beforecall\" class=\"docClass\">beforecall</a>","<a href=\"#!/api/Ext.direct.AmfRemotingProvider-event-call\" rel=\"Ext.direct.AmfRemotingProvider-event-call\" class=\"docClass\">call</a>"],"method_calls":["createHandler"],"id":"method-initAPI","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Initialize the API ..."},{"tagname":"method","name":"onData","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":341}],"doc":"<p>React to the ajax request being completed</p>\n","private":true,"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"params":[{"name":"options","type":"Object","html_type":"Object"},{"name":"success","type":"Object","html_type":"Object"},{"name":"response","type":"Object","html_type":"Object"}],"chainable":false,"fires":["data"],"method_calls":["createEvents","fireEvent","getTransaction","runCallback"],"id":"method-onData","owner":"Ext.direct.AmfRemotingProvider","short_doc":"React to the ajax request being completed ..."},{"tagname":"method","name":"queueTransaction","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":524}],"doc":"<p>Add a new transaction to the queue</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"<p>The transaction</p>\n","html_type":"Ext.direct.Transaction"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["combineAndSend","sendFormRequest"],"id":"method-queueTransaction","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Add a new transaction to the queue ..."},{"tagname":"method","name":"runCallback","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":316}],"doc":"<p>Run any callbacks related to the transaction.</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"<p>The transaction</p>\n","html_type":"Ext.direct.Transaction"},{"tagname":"params","type":"Ext.direct.Event","name":"event","doc":"<p>The event</p>\n","html_type":"Ext.direct.Event"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-runCallback","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Run any callbacks related to the transaction. ..."},{"tagname":"method","name":"sendFormRequest","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":624}],"doc":"<p>Sends a form request</p>\n","private":true,"params":[{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"<p>The transaction to send</p>\n","html_type":"Ext.direct.Transaction"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":null,"method_calls":null,"id":"method-sendFormRequest","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Sends a form request ..."},{"tagname":"method","name":"sendRequest","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":467}],"doc":"<p>Sends a request to the server</p>\n","private":true,"params":[{"tagname":"params","type":"Object/Array","name":"data","doc":"<p>The data to send</p>\n","html_type":"Object/Array"}],"inheritdoc":null,"static":null,"inheritable":null,"linenr":null,"chainable":false,"fires":[],"method_calls":["getCallData"],"id":"method-sendRequest","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Sends a request to the server ..."},{"tagname":"event","name":"beforecall","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":199}],"doc":"<p>Fires immediately before the client-side sends off the RPC call.\nBy returning false from an event handler you can prevent the call from\nexecuting.</p>\n","params":[{"tagname":"params","type":"Ext.direct.AmfRemotingProvider","name":"provider","doc":"\n","html_type":"<a href=\"#!/api/Ext.direct.AmfRemotingProvider\" rel=\"Ext.direct.AmfRemotingProvider\" class=\"docClass\">Ext.direct.AmfRemotingProvider</a>"},{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"\n","html_type":"Ext.direct.Transaction"},{"tagname":"params","type":"Object","name":"meta","doc":"<p>The meta data</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-beforecall","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Fires immediately before the client-side sends off the RPC call. ..."},{"tagname":"event","name":"call","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-amf/direct/AmfRemotingProvider.js","linenr":209}],"doc":"<p>Fires immediately after the request to the server-side is sent. This does\nNOT fire after the response has come back from the call.</p>\n","params":[{"tagname":"params","type":"Ext.direct.AmfRemotingProvider","name":"provider","doc":"\n","html_type":"<a href=\"#!/api/Ext.direct.AmfRemotingProvider\" rel=\"Ext.direct.AmfRemotingProvider\" class=\"docClass\">Ext.direct.AmfRemotingProvider</a>"},{"tagname":"params","type":"Ext.direct.Transaction","name":"transaction","doc":"\n","html_type":"Ext.direct.Transaction"},{"tagname":"params","type":"Object","name":"meta","doc":"<p>The meta data</p>\n","html_type":"Object"},{"tagname":"params","name":"eOpts","type":"Object","doc":"<p>The options object passed to Ext.util.Observable.addListener.</p>\n\n","ext4_auto_param":true,"html_type":"Object"}],"id":"event-call","owner":"Ext.direct.AmfRemotingProvider","short_doc":"Fires immediately after the request to the server-side is sent. ..."}],"alternateClassNames":[],"aliases":{},"id":"class-Ext.direct.AmfRemotingProvider","short_doc":"The AmfRemotingProvider\nallows making RPC calls to a Java object on a BlazeDS or ColdFusion using either the AMFX or ..."}