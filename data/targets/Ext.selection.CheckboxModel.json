{"tagname":"class","name":"Ext.selection.CheckboxModel","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":1}],"doc":"<p>A selection model that renders a column of checkboxes that can be toggled to\nselect or deselect rows. The default mode for this selection model is MULTI.</p>\n\n<pre class='inline-example '><code>var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n      fields: ['name', 'email', 'phone'],\n      data: [{\n          name: 'Lisa',\n          email: 'lisa@simpsons.com',\n          phone: '555-111-1224'\n      }, {\n          name: 'Bart',\n          email: 'bart@simpsons.com',\n          phone: '555-222-1234'\n      }, {\n          name: 'Homer',\n          email: 'homer@simpsons.com',\n          phone: '555-222-1244'\n      }, {\n          name: 'Marge',\n          email: 'marge@simpsons.com',\n          phone: '555-222-1254'\n      }]\n  });\n\n  <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n      title: 'Simpsons',\n      store: store,\n      columns: [{\n          text: 'Name',\n          dataIndex: 'name'\n      }, {\n          text: 'Email',\n          dataIndex: 'email',\n          flex: 1\n      }, {\n          text: 'Phone',\n          dataIndex: 'phone'\n      }],\n      height: 200,\n      width: 400,\n      renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n      selModel: {\n          selType: 'checkboxmodel'\n      }\n  });\n</code></pre>\n\n<p>The selection model will inject a header for the checkboxes in the first view\nand according to the <a href=\"#!/api/Ext.selection.CheckboxModel-cfg-injectCheckbox\" rel=\"Ext.selection.CheckboxModel-cfg-injectCheckbox\" class=\"docClass\">injectCheckbox</a> configuration.</p>\n","aliases":{"widget":null,"request":null},"alternateClassNames":[],"extends":"Ext.selection.RowModel","mixins":[],"requires":["Ext.grid.column.Check"],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"cfg","name":"allowDeselect","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":160}],"doc":"<p>Allow users to deselect a record in a DataView, List or Grid.\nOnly applicable when the <a href=\"#!/api/Ext.selection.CheckboxModel-cfg-mode\" rel=\"Ext.selection.CheckboxModel-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":160,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-allowDeselect","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"allowDeselect","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">Ext.selection.Model.allowDeselect</a>"}],"short_doc":"Allow users to deselect a record in a DataView, List or Grid. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"checkOnly","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":74}],"doc":"<p>True if rows can only be selected by clicking on the checkbox column, not by clicking\non the row itself. Note that this only refers to selection via the UI, programmatic\nselection will still occur regardless.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-checkOnly","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"True if rows can only be selected by clicking on the checkbox column, not by clicking\non the row itself. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"deselectOnContainerClick","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":92}],"doc":"<p>!deselectOnContainerClick</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-deselectOnContainerClick","owner":"Ext.selection.RowModel","overrides":null,"short_doc":"!deselectOnContainerClick ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"editRenderer","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":87}],"doc":"<p>A renderer to be used in conjunction with\n<a href=\"#!/api/Ext.grid.plugin.RowEditing\" rel=\"Ext.grid.plugin.RowEditing\" class=\"docClass\">RowEditing</a>. This renderer is used to display a\ncustom value for non-editable fields.</p>\n\n<p><strong>Note:</strong> The editRenderer is called when the roweditor is initially shown.\nChanges to the record during editing will not call editRenderer.</p>\n\n<pre><code>var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    fields: ['name', 'email'],\n    data: [{\n        \"name\": \"Finn\",\n        \"email\": \"finn@adventuretime.com\"\n    }, {\n        \"name\": \"Jake\",\n        \"email\": \"jake@adventuretime.com\"\n    }]\n});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    title: 'Land Of Ooo',\n    store: store,\n    columns: [{\n        text: 'Name',\n        dataIndex: 'name',\n        editRenderer: function(value){\n            return '&lt;span style=\"color:gray;\"&gt;' + value + '&lt;/span&gt;';\n          }\n    }, {\n        text: 'Email',\n        dataIndex: 'email',\n        flex: 1,\n        editor: {\n            xtype: 'textfield',\n            allowBlank: false\n        }\n    }],\n    plugins: {\n        rowediting: {\n            clicksToEdit: 1\n        }\n    },\n    height: 200,\n    width: 400,\n    renderTo: document.body\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"value","doc":"<p>The data value for the current cell</p>\n\n\n\n\n<pre><code>editRenderer: function(value){\n    // evaluates `value` to append either `person' or `people`\n    return <a href=\"#!/api/Ext.util.Format-method-plural\" rel=\"Ext.util.Format-method-plural\" class=\"docClass\">Ext.util.Format.plural</a>(value, 'person', 'people');\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"metaData","doc":"<p><strong>Note:</strong> The metadata param is passed to the\neditRenderer, but is not used.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record for the current row</p>\n\n\n\n\n<pre><code>editRenderer: function (value, metaData, record) {\n    // evaluate the record's `updated` field and if truthy return the value\n    // from the `newVal` field, else return value\n    var updated = record.get('updated');\n    return updated ? record.get('newVal') : value;\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"rowIndex","doc":"<p>The index of the current row</p>\n\n\n\n\n<pre><code>editRenderer: function (value, metaData, record, rowIndex) {\n    // style the value differently for even / odd values\n    var odd = (rowIndex % 2 === 0),\n        color = (odd ? 'gray' : 'red');\n    return '&lt;span style=\"color:' + color + ';\"&gt;' + value + '&lt;/span&gt;';\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"colIndex","doc":"<p>The index of the current column</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The data store</p>\n\n\n\n\n<pre><code>editRenderer: function (value, metaData, record, rowIndex, colIndex, store) {\n    // style the cell differently depending on how the value relates to the\n    // average of all values\n    var average = store.average('grades'),\n        status = (value &lt; average) ? 'needsImprovement' : 'satisfactory';\n    return '&lt;span class=\"' + status + '\"&gt;' + value + '&lt;/span&gt;';\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.view.View","name":"view","doc":"<p>The data view</p>\n\n\n\n\n<pre><code>editRenderer: function (value, metaData, record, rowIndex, colIndex, store, view) {\n    // style the value using the dataIndex of the column\n    var headerCt = this.getHeaderContainer(),\n        column = headerCt.getHeaderAtIndex(colIndex);\n\n    return '&lt;span class=\"app-' + column.dataIndex + '\"&gt;' + value + '&lt;/span&gt;';\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">Ext.view.View</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The HTML string to be rendered.\n@controllable</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":"Function/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-editRenderer","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"A renderer to be used in conjunction with\nRowEditing. ...","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"enableKeyNav","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":49}],"doc":"<p>Turns on/off keyboard navigation within the grid.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-enableKeyNav","owner":"Ext.selection.RowModel","overrides":[{"name":"enableKeyNav","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-cfg-enableKeyNav\" rel=\"Ext.selection.DataViewModel-cfg-enableKeyNav\" class=\"docClass\">Ext.selection.DataViewModel.enableKeyNav</a>"}],"short_doc":"Turns on/off keyboard navigation within the grid. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"headerAriaLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":116}],"doc":"<p>ARIA label for screen readers to announce for the check column's header when it is focused.\nNote that this label will not be visible on screen.</p>\n\n<p>@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Row selector'","properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-headerAriaLabel","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"ARIA label for screen readers to announce for the check column's header when it is focused. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"headerDeselectText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":136}],"doc":"<p>ARIA description text to announce for the check column's header when it is focused,\n<a href=\"#!/api/Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" rel=\"Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" class=\"docClass\">showHeaderCheckbox</a> is shown, and all rows are selected.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Press Space to deselect all rows'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-headerDeselectText","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"ARIA description text to announce for the check column's header when it is focused,\nshowHeaderCheckbox is shown, and ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"headerSelectText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":126}],"doc":"<p>ARIA description text to announce for the check column's header when it is focused,\n<a href=\"#!/api/Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" rel=\"Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" class=\"docClass\">showHeaderCheckbox</a> is shown, and not all rows are selected.</p>\n\n<p>@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Press Space to select all rows'","properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-headerSelectText","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"ARIA description text to announce for the check column's header when it is focused,\nshowHeaderCheckbox is shown, and ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"headerText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":107}],"doc":"<p>Displays the configured text in the check column's header.</p>\n\n<p>if <a href=\"#!/api/Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" rel=\"Ext.selection.CheckboxModel-cfg-showHeaderCheckbox\" class=\"docClass\">showHeaderCheckbox</a> is <code>true</code>, the text is shown <em>above</em> the checkbox.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-headerText","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Displays the configured text in the check column's header. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ignoreRightMouseSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":126}],"doc":"<p>True to ignore selections that are made when using the right mouse button if there are\nrecords that are already selected. If no records are selected, selection will continue\nas normal</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ignoreRightMouseSelection","owner":"Ext.selection.Model","overrides":null,"short_doc":"True to ignore selections that are made when using the right mouse button if there are\nrecords that are already selec...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"injectCheckbox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":67}],"doc":"<p>The index at which to insert the checkbox column.\nSupported values are a numeric index, and the strings 'first' and 'last'.</p>\n","params":null,"return":null,"type":"Number/String","throws":null,"default":"0","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-injectCheckbox","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"The index at which to insert the checkbox column. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":289}],"doc":"<p>A config object containing one or more event handlers to be added to this object during\ninitialization. This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\",\n\"mouseover\" etc), this is usually only done when extra value can be added. For example\nthe <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>\nevent passing the node clicked on. To access DOM events directly from a child element\nof a Component, we need to specify the <code>element</code> option to identify the Component\nproperty to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"A config object containing one or more event handlers to be added to this object during\ninitialization. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"locked","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":92}],"doc":"<p>If set to true, the checkbox column will be locked.\nNote: For this config to work, it is necessary to configure the grid with\n<code>enableLocking: true</code>, if no other columns are initially locked.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-locked","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"If set to true, the checkbox column will be locked. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"mode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":60}],"doc":"<p>Modes of selection.\nValid values are <code>\"SINGLE\"</code>, <code>\"SIMPLE\"</code>, and <code>\"MULTI\"</code>.</p>\n","params":null,"return":null,"type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\"","throws":null,"default":"'MULTI'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-mode","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"mode","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">Ext.selection.Model.mode</a>"}],"short_doc":"Modes of selection. ...","html_type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\""},{"tagname":"cfg","name":"ordered","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":88}],"doc":"<p>If this is set to <code>true</code>, the selected items will be tracked in an instance of\n{<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>} instead of {<a href=\"#!/api/Ext.util.Bag\" rel=\"Ext.util.Bag\" class=\"docClass\">Ext.util.Bag</a>} to maintain insertion order.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ordered","owner":"Ext.selection.Model","overrides":null,"short_doc":"If this is set to true, the selected items will be tracked in an instance of\n{Ext.util.Collection} instead of {Ext.ut...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"pruneRemoved","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":105}],"doc":"<p>Remove records from the selection when they are removed from the store.</p>\n\n<p><strong>Important:</strong> When using <a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">paging</a> or a\n<a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">Ext.data.BufferedStore</a>, records which are cached in the Store's\n<a href=\"#!/api/Ext.data.Store-property-data\" rel=\"Ext.data.Store-property-data\" class=\"docClass\">data collection</a> may be removed from the Store\nwhen pages change, or when rows are scrolled out of view. For this reason <code>pruneRemoved</code>\nshould be set to <code>false</code> when using a buffered Store.</p>\n\n<p>Also, when previously pruned pages are returned to the cache, the records objects in the page\nwill be <em>new instances</em>, and will not match the instances in the selection model's\ncollection. For this reason, you MUST ensure that the Model definition's\n<a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a> references a unique key because\nin this situation, records in the Store have their <strong>IDs</strong> compared to records\nin the SelectionModel in order to re-select a record which is scrolled back into view.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-pruneRemoved","owner":"Ext.selection.Model","overrides":null,"short_doc":"Remove records from the selection when they are removed from the store. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"renderer","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":82}],"doc":"<p>A renderer is an 'interceptor' method which can be used to transform data (value,\nappearance, etc.) before it is rendered. Example:</p>\n\n<p><strong>NOTE:</strong> In previous releases, a string was treated as a method on\n<code><a href=\"#!/api/Ext.util.Format\" rel=\"Ext.util.Format\" class=\"docClass\">Ext.util.Format</a></code> but that is now handled by the formatter config.</p>\n","params":[{"tagname":"params","type":"Object","name":"value","doc":"<p>The data value for the current cell</p>\n\n\n\n\n<pre><code>renderer: function(value){\n    // evaluates `value` to append either `person' or `people`\n    return <a href=\"#!/api/Ext.util.Format-method-plural\" rel=\"Ext.util.Format-method-plural\" class=\"docClass\">Ext.util.Format.plural</a>(value, 'person', 'people');\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"metaData","doc":"<p>A collection of metadata about the current cell; can be\nused or modified by the renderer. Recognized properties are: <code>tdCls</code>, <code>tdAttr</code>,\nand <code>tdStyle</code>.</p>\n\n\n\n\n<p>To add style attributes to the <code>&amp;lt;td&gt;</code> element, you must use the <code>tdStyle</code>\nproperty. Using a style attribute in the <code>tdAttr</code> property will override the\nstyles the column sets, such as the width which will break the rendering.</p>\n\n\n\n\n<p>You can see an example of using the metaData parameter below.</p>\n\n\n\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n      storeId: 'simpsonsStore',\n      fields: ['class', 'attr', 'style'],\n      data: {\n          'class': 'red-bg',\n          'attr': 'lightyellow',\n          'style': 'red'\n      }\n });\n\n <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n      title: 'Simpsons',\n      store: <a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.data.StoreManager.lookup</a>('simpsonsStore'),\n      columns: [{\n          text: 'Name',\n          dataIndex: 'class',\n          renderer: function (value, metaData) {\n              metaData.tdCls = value;\n              return value;\n          }\n      }, {\n          text: 'Email',\n          dataIndex: 'attr',\n          flex: 1,\n          renderer: function (value, metaData) {\n              metaData.tdAttr = 'bgcolor=\"' + value + '\"';\n              return value;\n          }\n      }, {\n          text: 'Phone',\n          dataIndex: 'style',\n          renderer: function (value, metaData) {\n              metaData.tdStyle = 'color:' + value;\n              return value;\n          }\n      }],\n      height: 200,\n      width: 400,\n      renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n  });\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record for the current row</p>\n\n\n\n\n<pre><code>renderer: function (value, metaData, record) {\n    // evaluate the record's `updated` field and if truthy return the value\n    // from the `newVal` field, else return value\n    var updated = record.get('updated');\n    return updated ? record.get('newVal') : value;\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"rowIndex","doc":"<p>The index of the current row</p>\n\n\n\n\n<pre><code>renderer: function (value, metaData, record, rowIndex) {\n    // style the cell differently for even / odd values\n    var odd = (rowIndex % 2 === 0);\n    metaData.tdStyle = 'color:' + (odd ? 'gray' : 'red');\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"colIndex","doc":"<p>The index of the current column</p>\n\n\n\n\n<pre><code>var myRenderer = function(value, metaData, record, rowIndex, colIndex) {\n    if (colIndex === 0) {\n        metaData.tdAttr = 'data-qtip=' + value;\n    }\n    // additional logic to apply to values in all columns\n    return value;\n}\n\n// using the same renderer on all columns you can process the value for\n// each column with the same logic and only set a tooltip on the first column\nrenderer: myRenderer\n</code></pre>\n\n\n\n\n<p><em>See also <a href=\"#!/api/Ext.tip.QuickTipManager\" rel=\"Ext.tip.QuickTipManager\" class=\"docClass\">Ext.tip.QuickTipManager</a></em></p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"<p>The data store</p>\n\n\n\n\n<pre><code>renderer: function (value, metaData, record, rowIndex, colIndex, store) {\n    // style the cell differently depending on how the value relates to the\n    // average of all values\n    var average = store.average('grades');\n    metaData.tdCls = (value &lt; average) ? 'needsImprovement' : 'satisfactory';\n    return value;\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.view.View","name":"view","doc":"<p>The data view</p>\n\n\n\n\n<pre><code>renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {\n    // style the cell using the dataIndex of the column\n    var headerCt = this.getHeaderContainer(),\n        column = headerCt.getHeaderAtIndex(colIndex);\n\n    metaData.tdCls = 'app-' + column.dataIndex;\n    return value;\n}\n</code></pre>\n\n","html_type":"<a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">Ext.view.View</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The HTML string to be rendered.\n@controllable</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":"Function/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderer","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"A renderer is an 'interceptor' method which can be used to transform data (value,\nappearance, etc.) before it is rend...","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"rowDeselectText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":152}],"doc":"<p>ARIA description text to announce when check column cell is focused and the row\nis selected.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Press Space to deselect this row'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-rowDeselectText","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"ARIA description text to announce when check column cell is focused and the row\nis selected. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"rowSelectText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":144}],"doc":"<p>ARIA description text to announce when check column cell is focused and the row\nis not selected.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Press Space to select this row'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-rowSelectText","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"ARIA description text to announce when check column cell is focused and the row\nis not selected. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"selected","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":45}],"doc":"<p>The <a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">collection</a> or <a href=\"#!/api/Ext.util.Bag\" rel=\"Ext.util.Bag\" class=\"docClass\">bag</a> of\nselected records.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-selected","owner":"Ext.selection.Model","overrides":null,"short_doc":"The collection or bag of\nselected records. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"showHeaderCheckbox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":99}],"doc":"<p>Configure as <code>false</code> to not display the header checkbox at the top of the column.\nWhen the store is a <a href=\"#!/api/Ext.data.BufferedStore\" rel=\"Ext.data.BufferedStore\" class=\"docClass\">BufferedStore</a>, this configuration will\nnot be available because the buffered data set does not always contain all data.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-showHeaderCheckbox","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Configure as false to not display the header checkbox at the top of the column. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"store","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":38}],"doc":"<p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a> in which this selection model represents\nthe selected subset.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-store","owner":"Ext.selection.Model","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"toggleOnClick","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":80}],"doc":"<p><code>true</code> to toggle the selection state of an item when clicked.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">allowDeselect</a> is 'true'.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-toggleOnClick","owner":"Ext.selection.Model","overrides":null,"short_doc":"true to toggle the selection state of an item when clicked. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":31}],"doc":"<p>We do not want \"_hidden\" style backing properties.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.selection.Model","overrides":[{"name":"$configPrefixed","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configPrefixed\" rel=\"Ext.Base-property-S-configPrefixed\" class=\"docClass\">Ext.Base.$configPrefixed</a>"}],"short_doc":"We do not want \"_hidden\" style backing properties. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":34}],"doc":"<p>We also want non-config system properties to go to the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.selection.Model","overrides":[{"name":"$configStrict","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configStrict\" rel=\"Ext.Base-property-S-configStrict\" class=\"docClass\">Ext.Base.$configStrict</a>"}],"short_doc":"We also want non-config system properties to go to the instance. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"autoDestroyBoundStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/StoreHolder.js","linenr":17}],"doc":"<p>This property allows the object\nto destroy bound stores that have <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoDestroy\" rel=\"Ext.data.AbstractStore-cfg-autoDestroy\" class=\"docClass\">Ext.data.AbstractStore.autoDestroy</a>\noption set to <code>true</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-autoDestroyBoundStore","owner":"Ext.util.StoreHolder","overrides":null,"short_doc":"This property allows the object\nto destroy bound stores that have Ext.data.AbstractStore.autoDestroy\noption set to true. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"checkerOnCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":164}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'grid-hd-checker-on'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-checkerOnCls","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"deselectOnContainerClick","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/DataViewModel.js","linenr":13}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":13,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-deselectOnContainerClick","owner":"Ext.selection.DataViewModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":25}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{defaultType: 'dataviewmodel'}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":25,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-factoryConfig","owner":"Ext.selection.Model","overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-hasListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"headerWidth","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":162}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"24","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":162,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-headerWidth","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isSelectionModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":55}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated\n<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">selection model</a>, or subclass thereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isSelectionModel","owner":"Ext.selection.Model","overrides":null,"short_doc":"true in this class to identify an object as an instantiated\nselection model, or subclass thereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Factoryable.js","linenr":543}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'factoryable'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":543,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinId","owner":"Ext.mixin.Factoryable","overrides":[{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"},{"name":"mixinId","owner":"Ext.mixin.Bindable","link":"<a href=\"#!/api/Ext.mixin.Bindable-property-mixinId\" rel=\"Ext.mixin.Bindable-property-mixinId\" class=\"docClass\">Ext.mixin.Bindable.mixinId</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":591}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":591,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-privates","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"privates","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-property-privates\" rel=\"Ext.selection.Model-property-privates\" class=\"docClass\">Ext.selection.Model.privates</a>"}],"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"selected","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":96}],"doc":"<p>A collection that maintains all of the currently selected records. The type\nof collection class depends on the <code>ordered</code> config.</p>\n","params":null,"return":null,"type":"Ext.util.Bag/Ext.util.Collection","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-selected","owner":"Ext.selection.Model","overrides":null,"short_doc":"A collection that maintains all of the currently selected records. ...","html_type":"<a href=\"#!/api/Ext.util.Bag\" rel=\"Ext.util.Bag\" class=\"docClass\">Ext.util.Bag</a>/<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"suspendChange","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":124}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":124,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-suspendChange","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"tdCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":169}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'grid-cell-special ' + Ext.baseCSSPrefix + 'selmodel-column'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":169,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tdCls","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":171}],"doc":"\n","params":[],"return":{"type":"Ext.selection.CheckboxModel","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.selection.CheckboxModel\" rel=\"Ext.selection.CheckboxModel\" class=\"docClass\">Ext.selection.CheckboxModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":171,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-constructor","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Adds declarative listeners as nested arrays of listener objects. ...","html_type":null},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onAfter. ...","html_type":null},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onBefore. ...","html_type":null},{"tagname":"method","name":"addCheckbox","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":283}],"doc":"<p>Add the header checkbox to the header row</p>\n","params":[{"tagname":null,"type":"Object","name":"view","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getHeaderConfig"],"readonly":null,"required":null,"template":null,"id":"method-addCheckbox","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Add the header checkbox to the header row ...","html_type":null},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener"],"readonly":null,"required":null,"template":null,"id":"method-addListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addManagedListener"],"readonly":null,"required":null,"template":null,"id":"method-addManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o...","html_type":null},{"tagname":"method","name":"applySelected","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":172}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"selected","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":172,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applySelected","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"beforeViewRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":190}],"doc":"<p>Allows multiple views to be controlled by one selection model.\nCalled by AbstractView's beforeRender method.</p>\n","params":[{"tagname":null,"type":"Object","name":"view","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":190,"fires":[],"method_calls":["addCheckbox","callParent","hasLockedHeader","mon"],"readonly":null,"required":null,"template":true,"id":"method-beforeViewRender","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"beforeViewRender","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-beforeViewRender\" rel=\"Ext.selection.Model-method-beforeViewRender\" class=\"docClass\">Ext.selection.Model.beforeViewRender</a>"}],"short_doc":"Allows multiple views to be controlled by one selection model. ...","html_type":null},{"tagname":"method","name":"bindComponent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":264}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"view","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":264,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-bindComponent","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"bindComponent","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-bindComponent\" rel=\"Ext.selection.Model-method-bindComponent\" class=\"docClass\">Ext.selection.Model.bindComponent</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"bindStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/StoreHolder.js","linenr":24}],"doc":"<p>Binds a store to this instance.</p>\n","params":[{"tagname":"params","type":"Ext.data.AbstractStore/String","name":"store","doc":"<p>The store to bind or ID of the store.\nWhen no store given (or when <code>null</code> or <code>undefined</code> passed), unbinds the existing store.</p>\n","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"initial","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"propertyName","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["storechange"],"method_calls":["bindStoreListeners","fireEvent","onBindStore","onUnbindStore","unbindStoreListeners"],"readonly":null,"required":null,"template":null,"id":"method-bindStore","owner":"Ext.util.StoreHolder","overrides":null,"short_doc":"Binds a store to this instance. ...","html_type":null},{"tagname":"method","name":"bindStoreListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/StoreHolder.js","linenr":116}],"doc":"<p>Binds listeners for this component to the store. By default it will add\nanything bound by the getStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store to bind to</p>\n","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStoreListeners"],"readonly":null,"required":null,"template":null,"id":"method-bindStoreListeners","owner":"Ext.util.StoreHolder","overrides":null,"short_doc":"Binds listeners for this component to the store. ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"o","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1394}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearManagedListeners"],"readonly":null,"required":null,"template":null,"id":"method-clearListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all managed listeners for this object. ...","html_type":null},{"tagname":"method","name":"clearSelections","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1113}],"doc":"<p>A fast reset of the selections without firing events, updating the ui, etc.\nFor private usage only.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSelected"],"readonly":null,"required":null,"template":null,"id":"method-clearSelections","owner":"Ext.selection.Model","overrides":null,"short_doc":"A fast reset of the selections without firing events, updating the ui, etc. ...","html_type":null},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"beginEnd","doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ...","html_type":null},{"tagname":"method","name":"deselect","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":642}],"doc":"<p>Deselects a record instance by record instance or index.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model[]/Number","name":"records","doc":"<p>An array of records or an index</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to not fire a deselect event</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect"],"readonly":null,"required":null,"template":null,"id":"method-deselect","owner":"Ext.selection.Model","overrides":null,"short_doc":"Deselects a record instance by record instance or index. ...","html_type":null},{"tagname":"method","name":"deselectAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":238}],"doc":"<p>Deselects all records in the view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to suppress any deselect events</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-deselectAll","owner":"Ext.selection.Model","overrides":null,"short_doc":"Deselects all records in the view. ...","html_type":null},{"tagname":"method","name":"deselectDuringSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":753}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"toSelect","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"suppressEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":753,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-deselectDuringSelect","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"deselectRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":569}],"doc":"<p>Deselects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"startRow","doc":"<p>The record or index of the first row in the range</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model/Number","name":"endRow","doc":"<p>The record or index of the last row in the range</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","isLocked","isSelected","normalizeRowRange"],"readonly":null,"required":null,"template":null,"id":"method-deselectRange","owner":"Ext.selection.Model","overrides":null,"short_doc":"Deselects a range of rows if the selection model is not locked. ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/DataViewModel.js","linenr":134}],"doc":"<p>cleanup.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":134,"fires":[],"method_calls":["bindComponent","callParent"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.selection.DataViewModel","overrides":[{"name":"destroy","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-destroy\" rel=\"Ext.selection.Model-method-destroy\" class=\"docClass\">Ext.selection.Model.destroy</a>"}],"short_doc":"cleanup. ...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"doDeselect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":794}],"doc":"<p>records can be an index, a record or an array of records</p>\n","params":[{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"suppressEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-doDeselect","owner":"Ext.selection.Model","overrides":null,"short_doc":"records can be an index, a record or an array of records ...","html_type":null},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":857}],"doc":"<p>Continue to fire event.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleParent"],"readonly":null,"required":null,"template":null,"id":"method-doFireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Continue to fire event. ...","html_type":null},{"tagname":"method","name":"doMultiSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":684}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"keepExisting","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"suppressEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":684,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectDuringSelect","isSelected","maybeFireSelectionChange","onSelectChange"],"readonly":null,"required":null,"template":null,"id":"method-doMultiSelect","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"doSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":651}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"keepExisting","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"suppressEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":651,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doMultiSelect","doSingleSelect"],"readonly":null,"required":null,"template":null,"id":"method-doSelect","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"doSingleSelect","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":869}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"suppressEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":869,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectDuringSelect","isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-doSingleSelect","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-enableBubble","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...","html_type":null},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'before'","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList...","html_type":null},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doFireEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameter list. ...","html_type":null},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","params":[],"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleTarget"],"readonly":null,"required":null,"template":null,"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Gets the bubbling parent for an Observable ...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getCount","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1205}],"doc":"<p>Returns the count of selected records.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The number of selected records</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCount","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns the count of selected records. ...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getCurrentPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":150}],"doc":"<p>Returns position of the first selected cell in the selection in the format\n{row: row, column: column}</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use the <a href=\"#!/api/Ext.view.Table-method-getNavigationModel\" rel=\"Ext.view.Table-method-getNavigationModel\" class=\"docClass\">NavigationModel</a> instead.</p>\n","version":"5.0.1"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentPosition","owner":"Ext.selection.RowModel","overrides":null,"short_doc":"Returns position of the first selected cell in the selection in the format\n{row: row, column: column} ...","html_type":null},{"tagname":"method","name":"getHeaderConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":400}],"doc":"<p>Retrieve a configuration to be used in a HeaderContainer.\nThis is called when injectCheckbox is not <code>false</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasLockedHeader"],"readonly":null,"required":null,"template":null,"id":"method-getHeaderConfig","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Retrieve a configuration to be used in a HeaderContainer. ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getLastSelected","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1390}],"doc":"<p>Called by <a href=\"#!/api/Ext.panel.Table-method-updateBindSelection\" rel=\"Ext.panel.Table-method-updateBindSelection\" class=\"docClass\">Ext.panel.Table.updateBindSelection</a> when publishing the <code>selection</code>\nproperty. It should yield the last record selected.</p>\n","params":[],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The last record selected. This is only available\nif the current selection type is cells or rows.\nIn the case of multiple selection, the <em>last</em> record added to the selection is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLastSelected","owner":"Ext.selection.Model","overrides":null,"short_doc":"Called by Ext.panel.Table.updateBindSelection when publishing the selection\nproperty. ...","html_type":null},{"tagname":"method","name":"getSelected","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":45}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.selection.Model-cfg-selected\" rel=\"Ext.selection.Model-cfg-selected\" class=\"docClass\">selected</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSelected","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns the value of selected. ...","html_type":null},{"tagname":"method","name":"getSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":933}],"doc":"<p>Returns an array of the currently selected records.</p>\n","params":[],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The selected records</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSelection","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns an array of the currently selected records. ...","html_type":null},{"tagname":"method","name":"getSelectionMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":941}],"doc":"<p>Returns the current selectionMode.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The selectionMode: 'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSelectionMode","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns the current selectionMode. ...","html_type":null},{"tagname":"method","name":"getSelectionStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":285}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":285,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSelectionStart","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getStore","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":38}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.selection.Model-cfg-store\" rel=\"Ext.selection.Model-cfg-store\" class=\"docClass\">store</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStore","owner":"Ext.selection.Model","overrides":[{"name":"getStore","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-getStore\" rel=\"Ext.util.StoreHolder-method-getStore\" class=\"docClass\">Ext.util.StoreHolder.getStore</a>"}],"short_doc":"Returns the value of store. ...","html_type":null},{"tagname":"method","name":"getStoreListeners","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":182}],"doc":"<p>Gets the listeners to bind to a new store.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>The listeners to be bound to the store in object literal form. The scope\nmay be omitted, it is assumed to be the current instance.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":182,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStoreListeners","owner":"Ext.selection.Model","overrides":[{"name":"getStoreListeners","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-getStoreListeners\" rel=\"Ext.util.StoreHolder-method-getStoreListeners\" class=\"docClass\">Ext.util.StoreHolder.getStoreListeners</a>"}],"short_doc":"Gets the listeners to bind to a new store. ...","html_type":null},{"tagname":"method","name":"getViewListeners","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/DataViewModel.js","linenr":83}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":83,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getViewListeners","owner":"Ext.selection.DataViewModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ...","html_type":null},{"tagname":"method","name":"hasLockedHeader","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":269}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":269,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasLockedHeader","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1012}],"doc":"<p>Returns true if there are any a selected records.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSelected"],"readonly":null,"required":null,"template":null,"id":"method-hasSelection","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns true if there are any a selected records. ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"isCellSelected","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":228}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"view","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"columnHeader","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":228,"fires":[],"method_calls":["isSelected"],"readonly":null,"required":null,"template":null,"id":"method-isCellSelected","owner":"Ext.selection.RowModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"isLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":960}],"doc":"<p>Returns true if the selections are locked.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isLocked","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns true if the selections are locked. ...","html_type":null},{"tagname":"method","name":"isRangeSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":976}],"doc":"<p>Returns true if the specified row is selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"startRow","doc":"<p>The start of the range to check.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model/Number","name":"endRow","doc":"<p>The end of the range to check.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isSelected","normalizeRowRange"],"readonly":null,"required":null,"template":null,"id":"method-isRangeSelected","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns true if the specified row is selected. ...","html_type":null},{"tagname":"method","name":"isRowSelected","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":224}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":224,"fires":[],"method_calls":["isSelected"],"readonly":null,"required":null,"template":null,"id":"method-isRowSelected","owner":"Ext.selection.RowModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"isSelected","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1001}],"doc":"<p>Returns true if the specified row is selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"record","doc":"<p>The record or index of the record to check</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isSelected","owner":"Ext.selection.Model","overrides":null,"short_doc":"Returns true if the specified row is selected. ...","html_type":null},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks if all events, or a specific event, is suspended. ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"maybeFireSelectionChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":530}],"doc":"<p>fire selection change as long as true is not passed\ninto maybeFireSelectionChange</p>\n","params":[{"tagname":null,"type":"Object","name":"fireEvent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":530,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-maybeFireSelectionChange","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"maybeFireSelectionChange","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-maybeFireSelectionChange\" rel=\"Ext.selection.Model-method-maybeFireSelectionChange\" class=\"docClass\">Ext.selection.Model.maybeFireSelectionChange</a>"}],"short_doc":"fire selection change as long as true is not passed\ninto maybeFireSelectionChange ...","html_type":null},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mon","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for addManagedListener. ...","html_type":null},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mun","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeManagedListener. ...","html_type":null},{"tagname":"method","name":"normalizeRowRange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":602}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"startRow","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"endRow","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":602,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-normalizeRowRange","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-on","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends an after-event handler. ...","html_type":null},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends a before-event handler. ...","html_type":null},{"tagname":"method","name":"onBeforeReconfigure","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":315}],"doc":"<p>Handles the grid's beforereconfigure event. Removes the checkbox header\nif the columns are being reconfigured.</p>\n","params":[{"tagname":null,"type":"Object","name":"grid","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"store","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"columns","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldStore","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldColumns","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onBeforeReconfigure","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Handles the grid's beforereconfigure event. ...","html_type":null},{"tagname":"method","name":"onBindStore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":200}],"doc":"<p>Template method, it is called when a new store is bound\nto the current instance.</p>\n","params":[{"tagname":null,"type":"Object","name":"store","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldStore","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"initial","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":200,"fires":[],"method_calls":["updateSelectedInstances"],"readonly":null,"required":null,"template":null,"id":"method-onBindStore","owner":"Ext.selection.Model","overrides":[{"name":"onBindStore","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-onBindStore\" rel=\"Ext.util.StoreHolder-method-onBindStore\" class=\"docClass\">Ext.util.StoreHolder.onBindStore</a>"}],"short_doc":"Template method, it is called when a new store is bound\nto the current instance. ...","html_type":null},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Factoryable.js","linenr":545}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"targetClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":545,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","overrides":[{"name":"onClassMixedIn","owner":"Ext.mixin.ComponentDelegation","link":"<a href=\"#!/api/Ext.mixin.ComponentDelegation-method-onClassMixedIn\" rel=\"Ext.mixin.ComponentDelegation-method-onClassMixedIn\" class=\"docClass\">Ext.mixin.ComponentDelegation.onClassMixedIn</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"onColumnLock","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":246}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"lockable","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"column","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":246,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onColumnLock","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onColumnUnlock","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":228}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"lockable","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"column","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":228,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onColumnUnlock","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onContainerClick","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/DataViewModel.js","linenr":100}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":100,"fires":["<a href=\"#!/api/Ext.selection.DataViewModel-event-selectionchange\" rel=\"Ext.selection.DataViewModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectAll"],"readonly":null,"required":null,"template":null,"id":"method-onContainerClick","owner":"Ext.selection.DataViewModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onEditorKey","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1343}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onEditorKey","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onHeaderClick","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":360}],"doc":"<p>Toggle between selecting all and deselecting all when clicking on\na checkbox header.</p>\n","params":[{"tagname":null,"type":"Object","name":"headerCt","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"header","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.CheckboxModel-event-selectionchange\" rel=\"Ext.selection.CheckboxModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselect","getSelection","selectAll"],"readonly":null,"required":null,"template":null,"id":"method-onHeaderClick","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onHeaderClick","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onHeaderClick\" rel=\"Ext.selection.Model-method-onHeaderClick\" class=\"docClass\">Ext.selection.Model.onHeaderClick</a>"}],"short_doc":"Toggle between selecting all and deselecting all when clicking on\na checkbox header. ...","html_type":null},{"tagname":"method","name":"onIdChanged","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1230}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"store","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"rec","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldId","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"newId","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1230,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onIdChanged","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onNavigate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":357}],"doc":"<p>Private\nCalled in response to a FocusModel's navigate event when a new record has been navigated to.\nEvent is passed so that shift and ctrl can be handled.</p>\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["deselectRange","doDeselect","doSelect","isSelected","onBeforeNavigate","selectRange","selectWithEvent","setSelectionStart","vetoSelection"],"readonly":null,"required":null,"template":null,"id":"method-onNavigate","owner":"Ext.selection.Model","overrides":null,"short_doc":"Private\nCalled in response to a FocusModel's navigate event when a new record has been navigated to. ...","html_type":null},{"tagname":"method","name":"onPageAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1190}],"doc":"<p>Page added to BufferedStore.\nCheck for return of already selected records</p>\n","params":[{"tagname":null,"type":"Object","name":"pageMap","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"pageNumber","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onPageAdd","owner":"Ext.selection.Model","overrides":null,"short_doc":"Page added to BufferedStore. ...","html_type":null},{"tagname":"method","name":"onPageRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1184}],"doc":"<p>Page evicted from BufferedStore.\nRemove any selections in that page unless pruneRemoved is false</p>\n","params":[{"tagname":null,"type":"Object","name":"pageMap","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"pageNumber","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onStoreRemove"],"readonly":null,"required":null,"template":null,"id":"method-onPageRemove","owner":"Ext.selection.Model","overrides":null,"short_doc":"Page evicted from BufferedStore. ...","html_type":null},{"tagname":"method","name":"onReconfigure","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":331}],"doc":"<p>Handles the grid's reconfigure event. Adds the checkbox header if the columns\nhave been reconfigured.</p>\n","params":[{"tagname":"params","type":"Ext.panel.Table","name":"grid","doc":"\n","html_type":"<a href=\"#!/api/Ext.panel.Table\" rel=\"Ext.panel.Table\" class=\"docClass\">Ext.panel.Table</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Store","name":"store","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"columns","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCheckbox"],"readonly":null,"required":null,"template":null,"id":"method-onReconfigure","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":"Handles the grid's reconfigure event. ...","html_type":null},{"tagname":"method","name":"onSelectChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":489}],"doc":"<p>Synchronize header checker value as selection changes.</p>\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"isSelected","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-onSelectChange","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onSelectChange","owner":"Ext.selection.RowModel","link":"<a href=\"#!/api/Ext.selection.RowModel-method-onSelectChange\" rel=\"Ext.selection.RowModel-method-onSelectChange\" class=\"docClass\">Ext.selection.RowModel.onSelectChange</a>"}],"short_doc":"Synchronize header checker value as selection changes. ...","html_type":null},{"tagname":"method","name":"onStoreAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":515}],"doc":"<p>when a record is added to a store</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":515,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-onStoreAdd","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onStoreAdd","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onStoreAdd\" rel=\"Ext.selection.Model-method-onStoreAdd\" class=\"docClass\">Ext.selection.Model.onStoreAdd</a>"}],"short_doc":"when a record is added to a store ...","html_type":null},{"tagname":"method","name":"onStoreClear","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1135}],"doc":"<p>when a store is cleared remove all selections\n(if there were any)</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearSelections","hasSelection","maybeFireSelectionChange"],"readonly":null,"required":null,"template":null,"id":"method-onStoreClear","owner":"Ext.selection.Model","overrides":null,"short_doc":"when a store is cleared remove all selections\n(if there were any) ...","html_type":null},{"tagname":"method","name":"onStoreLoad","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":507}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-onStoreLoad","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onStoreLoad","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onStoreLoad\" rel=\"Ext.selection.Model-method-onStoreLoad\" class=\"docClass\">Ext.selection.Model.onStoreLoad</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"onStoreRefresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":525}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":525,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-onStoreRefresh","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onStoreRefresh","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onStoreRefresh\" rel=\"Ext.selection.Model-method-onStoreRefresh\" class=\"docClass\">Ext.selection.Model.onStoreRefresh</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"onStoreRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":520}],"doc":"<p>prune records from the SelectionModel if\nthey were selected at the time they were\nremoved.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":520,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-onStoreRemove","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"onStoreRemove","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onStoreRemove\" rel=\"Ext.selection.Model-method-onStoreRemove\" class=\"docClass\">Ext.selection.Model.onStoreRemove</a>"}],"short_doc":"prune records from the SelectionModel if\nthey were selected at the time they were\nremoved. ...","html_type":null},{"tagname":"method","name":"onStoreUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1227}],"doc":"<p>if records are updated</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onStoreUpdate","owner":"Ext.selection.Model","overrides":null,"short_doc":"if records are updated ...","html_type":null},{"tagname":"method","name":"onUnbindStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/StoreHolder.js","linenr":150}],"doc":"<p>Template method, it is called when an existing store is unbound\nfrom the current instance.</p>\n","params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store being unbound</p>\n","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"initial","doc":"<p>True if this store is being bound as initialization of the instance.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onUnbindStore","owner":"Ext.util.StoreHolder","overrides":null,"short_doc":"Template method, it is called when an existing store is unbound\nfrom the current instance. ...","html_type":null},{"tagname":"method","name":"onUpdate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":98}],"doc":"<p>Called when the contents of the node are updated, perform any processing here.</p>\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":98,"fires":[],"method_calls":["isSelected"],"readonly":null,"required":null,"template":null,"id":"method-onUpdate","owner":"Ext.selection.RowModel","overrides":[{"name":"onUpdate","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-method-onUpdate\" rel=\"Ext.selection.DataViewModel-method-onUpdate\" class=\"docClass\">Ext.selection.DataViewModel.onUpdate</a>"}],"short_doc":"Called when the contents of the node are updated, perform any processing here. ...","html_type":null},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Prepares a given class for observable instances. ...","html_type":null},{"tagname":"method","name":"pruneRemovedOnRefresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1310}],"doc":"<p>onStoreRefresh asks if it should remove from the selection any selected records which are no\nlonger findable in the store after the refresh.\nSubclasses may override this.\nTreeModel does not use the pruneRemoved flag because records are being added and removed\nfrom TreeStores on expand and collapse. It uses the pruneRemovedNodes flag.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-pruneRemovedOnRefresh","owner":"Ext.selection.Model","overrides":null,"short_doc":"onStoreRefresh asks if it should remove from the selection any selected records which are no\nlonger findable in the s...","html_type":null},{"tagname":"method","name":"refresh","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":471}],"doc":"<p>After refresh, ensure that the header checkbox state matches</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-refresh","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"refresh","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-refresh\" rel=\"Ext.selection.Model-method-refresh\" class=\"docClass\">Ext.selection.Model.refresh</a>"}],"short_doc":"After refresh, ensure that the header checkbox state matches ...","html_type":null},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createRelayer","mon"],"readonly":null,"required":null,"template":null,"id":"method-relayEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ...","html_type":null},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unAfter. ...","html_type":null},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unBefore. ...","html_type":null},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doRemoveListener"],"readonly":null,"required":null,"template":null,"id":"method-removeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes an event handler. ...","html_type":null},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes listeners that were added by the mon method. ...","html_type":null},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Remove a single managed listener item ...","html_type":null},{"tagname":"method","name":"renderEmpty","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":467}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":467,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-renderEmpty","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"resolveListenerScope","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1370}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":null,"type":"Object","name":"defaultScope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1370,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-resolveListenerScope","owner":"Ext.selection.Model","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-resolveListenerScope\" rel=\"Ext.mixin.Observable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Observable.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ...","html_type":null},{"tagname":"method","name":"resumeChanges","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":538}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":538,"fires":[],"method_calls":["callParent","updateHeaderState"],"readonly":null,"required":null,"template":null,"id":"method-resumeChanges","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"resumeChanges","owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-resumeChanges\" rel=\"Ext.selection.Model-method-resumeChanges\" class=\"docClass\">Ext.selection.Model.resumeChanges</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing events (see suspendEvents). ...","html_type":null},{"tagname":"method","name":"select","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":628}],"doc":"<p>Selects a record instance by record instance or index.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model[]/Number","name":"records","doc":"<p>An array of records or an index</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"keepExisting","doc":"<p>True to retain existing selections</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to not fire a select event</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect"],"readonly":null,"required":null,"template":null,"id":"method-select","owner":"Ext.selection.Model","overrides":null,"short_doc":"Selects a record instance by record instance or index. ...","html_type":null},{"tagname":"method","name":"selectAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":216}],"doc":"<p>Selects all records in the view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to suppress any select events</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-selectAll","owner":"Ext.selection.Model","overrides":null,"short_doc":"Selects all records in the view. ...","html_type":null},{"tagname":"method","name":"selectByPosition","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"position","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"keepExisting","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":477,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-selectByPosition","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"selectByPosition","owner":"Ext.selection.RowModel","link":"<a href=\"#!/api/Ext.selection.RowModel-method-selectByPosition\" rel=\"Ext.selection.RowModel-method-selectByPosition\" class=\"docClass\">Ext.selection.RowModel.selectByPosition</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"selectNext","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":175}],"doc":"<p>Selects the record immediately following the currently selected record.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"keepExisting","doc":"<p>True to retain existing selections</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>Set to false to not fire a select event</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if there is a next record, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect","getSelection"],"readonly":null,"required":null,"template":null,"id":"method-selectNext","owner":"Ext.selection.RowModel","overrides":null,"short_doc":"Selects the record immediately following the currently selected record. ...","html_type":null},{"tagname":"method","name":"selectPrevious","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":200}],"doc":"<p>Selects the record that precedes the currently selected record.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"keepExisting","doc":"<p>True to retain existing selections</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>Set to false to not fire a select event</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if there is a previous record, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doSelect","getSelection"],"readonly":null,"required":null,"template":null,"id":"method-selectPrevious","owner":"Ext.selection.RowModel","overrides":null,"short_doc":"Selects the record that precedes the currently selected record. ...","html_type":null},{"tagname":"method","name":"selectRange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":501}],"doc":"<p>Selects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.\nAll rows in between startRow and endRow are also selected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model/Number","name":"startRow","doc":"<p>The record or index of the first row in the range</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model/Number","name":"endRow","doc":"<p>The record or index of the last row in the range</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"keepExisting","doc":"<p>True to retain existing selections</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["doDeselect","doMultiSelect","isLocked","isSelected","maybeFireSelectionChange","normalizeRowRange","resumeChanges","suspendChanges"],"readonly":null,"required":null,"template":null,"id":"method-selectRange","owner":"Ext.selection.Model","overrides":null,"short_doc":"Selects a range of rows if the selection model is not locked. ...","html_type":null},{"tagname":"method","name":"selectWithEvent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":293}],"doc":"<p>Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. Requires that an event be passed so that we can know\nif user held ctrl or shift.</p>\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isSelected","selectWithEventMulti","selectWithEventSimple","selectWithEventSingle"],"readonly":null,"required":null,"template":null,"id":"method-selectWithEvent","owner":"Ext.selection.Model","overrides":null,"short_doc":"Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"An alias for addListener. ...","html_type":null},{"tagname":"method","name":"setLocked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":968}],"doc":"<p>Locks the current selection and disables any changes from happening to the selection.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"locked","doc":"<p>True to lock, false to unlock.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocked","owner":"Ext.selection.Model","overrides":null,"short_doc":"Locks the current selection and disables any changes from happening to the selection. ...","html_type":null},{"tagname":"method","name":"setSelected","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":45}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.selection.Model-cfg-selected\" rel=\"Ext.selection.Model-cfg-selected\" class=\"docClass\">selected</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"selected","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSelected","owner":"Ext.selection.Model","overrides":null,"short_doc":"Sets the value of selected. ...","html_type":null},{"tagname":"method","name":"setSelectionMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":949}],"doc":"<p>Sets the current selectionMode.</p>\n","params":[{"tagname":"params","type":"String","name":"selMode","doc":"<p>'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSelectionMode","owner":"Ext.selection.Model","overrides":null,"short_doc":"Sets the current selectionMode. ...","html_type":null},{"tagname":"method","name":"setSelectionStart","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":289}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"selection","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":289,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSelectionStart","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setStore","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":38}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.selection.Model-cfg-store\" rel=\"Ext.selection.Model-cfg-store\" class=\"docClass\">store</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"store","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setStore","owner":"Ext.selection.Model","overrides":[{"name":"setStore","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-method-setStore\" rel=\"Ext.util.StoreHolder-method-setStore\" class=\"docClass\">Ext.util.StoreHolder.setStore</a>"}],"short_doc":"Sets the value of store. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"suspendChanges","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":206}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":206,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendChanges","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-suspendEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends the firing of all events. ...","html_type":null},{"tagname":"method","name":"toggleRecord","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":463}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"recordIndex","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"checked","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"cell","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":463,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-toggleRecord","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-un","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeListener. ...","html_type":null},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unbindStoreListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/StoreHolder.js","linenr":100}],"doc":"<p>Unbinds listeners from this component to the store. By default it will remove\nanything bound by the bindStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","params":[{"tagname":"params","type":"Ext.data.AbstractStore","name":"store","doc":"<p>The store to unbind from</p>\n","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unbindStoreListeners","owner":"Ext.util.StoreHolder","overrides":null,"short_doc":"Unbinds listeners from this component to the store. ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"updateHeaderState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":546}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-updateHeaderState","owner":"Ext.selection.CheckboxModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateSelectedInstances","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":1238}],"doc":"<p>Called when the store is refreshed.\nSelected records which are no longer present in the store are removed\nif <a href=\"#!/api/Ext.selection.Model-cfg-pruneRemoved\" rel=\"Ext.selection.Model-cfg-pruneRemoved\" class=\"docClass\">pruneRemoved</a> is <code>true</code>.</p>\n\n<p>Selected records which are still present have their instances in the passed collection\nupdated.</p>\n","params":[{"tagname":"params","type":"Ext.util.Collection/Ext.util.Bag","name":"selected","doc":"<p>A Collection representing\nthe currently selected records.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Collection\" rel=\"Ext.util.Collection\" class=\"docClass\">Ext.util.Collection</a>/<a href=\"#!/api/Ext.util.Bag\" rel=\"Ext.util.Bag\" class=\"docClass\">Ext.util.Bag</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["lastselectedchanged","<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"method_calls":["fireEvent","getSelection","getStore","maybeFireSelectionChange","pruneRemovedOnRefresh"],"readonly":null,"required":null,"template":null,"id":"method-updateSelectedInstances","owner":"Ext.selection.Model","overrides":null,"short_doc":"Called when the store is refreshed. ...","html_type":null},{"tagname":"method","name":"updateStore","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":168}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"store","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldStore","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":168,"fires":["storechange"],"method_calls":["bindStore"],"readonly":null,"required":null,"template":null,"id":"method-updateStore","owner":"Ext.selection.Model","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"vetoSelection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/CheckboxModel.js","linenr":577}],"doc":"<p>Checks whether a selection should proceed based on the ignoreRightMouseSelection\noption.</p>\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the selection should not proceed.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":577,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-vetoSelection","owner":"Ext.selection.CheckboxModel","overrides":[{"name":"vetoSelection","owner":"Ext.selection.RowModel","link":"<a href=\"#!/api/Ext.selection.RowModel-method-vetoSelection\" rel=\"Ext.selection.RowModel-method-vetoSelection\" class=\"docClass\">Ext.selection.RowModel.vetoSelection</a>"}],"short_doc":"Checks whether a selection should proceed based on the ignoreRightMouseSelection\noption. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.Base","overrides":null,"short_doc":"Create a new instance of this Class. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"event","name":"beforedeselect","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":56}],"doc":"<p>Fired before a record is deselected. If any listener returns false, the\ndeselection is cancelled.</p>\n","params":[{"tagname":"params","type":"Ext.selection.RowModel","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The deselected record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The row index deselected</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforedeselect","owner":"Ext.selection.RowModel","overrides":[{"name":"beforedeselect","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-event-beforedeselect\" rel=\"Ext.selection.DataViewModel-event-beforedeselect\" class=\"docClass\">Ext.selection.DataViewModel.beforedeselect</a>"}],"short_doc":"Fired before a record is deselected. ...","html_type":null},{"tagname":"event","name":"beforeselect","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":65}],"doc":"<p>Fired before a record is selected. If any listener returns false, the\nselection is cancelled.</p>\n","params":[{"tagname":"params","type":"Ext.selection.RowModel","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The selected record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The row index selected</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeselect","owner":"Ext.selection.RowModel","overrides":[{"name":"beforeselect","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-event-beforeselect\" rel=\"Ext.selection.DataViewModel-event-beforeselect\" class=\"docClass\">Ext.selection.DataViewModel.beforeselect</a>"}],"short_doc":"Fired before a record is selected. ...","html_type":null},{"tagname":"event","name":"deselect","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":74}],"doc":"<p>Fired after a record is deselected</p>\n","params":[{"tagname":"params","type":"Ext.selection.RowModel","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The deselected record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The row index deselected</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-deselect","owner":"Ext.selection.RowModel","overrides":[{"name":"deselect","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-event-deselect\" rel=\"Ext.selection.DataViewModel-event-deselect\" class=\"docClass\">Ext.selection.DataViewModel.deselect</a>"}],"short_doc":"Fired after a record is deselected ...","html_type":null},{"tagname":"event","name":"focuschange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":141}],"doc":"<p>Fired when a row is focused</p>\n","params":[{"tagname":"params","type":"Ext.selection.Model","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"oldFocused","doc":"<p>The previously focused record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"newFocused","doc":"<p>The newly focused record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focuschange","owner":"Ext.selection.Model","overrides":null,"short_doc":"Fired when a row is focused ...","html_type":null},{"tagname":"event","name":"select","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/RowModel.js","linenr":82}],"doc":"<p>Fired after a record is selected</p>\n","params":[{"tagname":"params","type":"Ext.selection.RowModel","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The selected record</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The row index selected</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-select","owner":"Ext.selection.RowModel","overrides":[{"name":"select","owner":"Ext.selection.DataViewModel","link":"<a href=\"#!/api/Ext.selection.DataViewModel-event-select\" rel=\"Ext.selection.DataViewModel-event-select\" class=\"docClass\">Ext.selection.DataViewModel.select</a>"}],"short_doc":"Fired after a record is selected ...","html_type":null},{"tagname":"event","name":"selectionchange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/selection/Model.js","linenr":134}],"doc":"<p>Fired after a selection change has occurred</p>\n","params":[{"tagname":"params","type":"Ext.selection.Model","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.Model[]","name":"selected","doc":"<p>The selected records</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-selectionchange","owner":"Ext.selection.Model","overrides":null,"short_doc":"Fired after a selection change has occurred ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.selection.CheckboxModel","component":false,"short_doc":"A selection model that renders a column of checkboxes that can be toggled to\nselect or deselect rows. ...","deprecated":null}