{"tagname":"class","name":"Ext.form.CheckboxGroup","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":1}],"doc":"<p>A <a href=\"#!/api/Ext.form.FieldContainer\" rel=\"Ext.form.FieldContainer\" class=\"docClass\">field container</a> which has a specialized layout for arranging\n<a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">Ext.form.field.Checkbox</a> controls into columns, and provides convenience\n<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a> methods for <a href=\"#!/api/Ext.form.CheckboxGroup-method-getValue\" rel=\"Ext.form.CheckboxGroup-method-getValue\" class=\"docClass\">getting</a>, <a href=\"#!/api/Ext.form.CheckboxGroup-method-setValue\" rel=\"Ext.form.CheckboxGroup-method-setValue\" class=\"docClass\">setting</a>,\nand <a href=\"#!/api/Ext.form.CheckboxGroup-method-validate\" rel=\"Ext.form.CheckboxGroup-method-validate\" class=\"docClass\">validating</a> the group of checkboxes as a whole.</p>\n\n<h1>Validation</h1>\n\n<p>Individual checkbox fields themselves have no default validation behavior, but\nsometimes you want to require a user to select at least one of a group of checkboxes.\nCheckboxGroup allows this by setting the config <code><a href=\"#!/api/Ext.form.CheckboxGroup-cfg-allowBlank\" rel=\"Ext.form.CheckboxGroup-cfg-allowBlank\" class=\"docClass\">allowBlank</a>:false</code>; when the user\ndoes not check at least one of the checkboxes, the entire group will be highlighted as invalid\nand the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-blankText\" rel=\"Ext.form.CheckboxGroup-cfg-blankText\" class=\"docClass\">error message</a> will be displayed according to the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-msgTarget\" rel=\"Ext.form.CheckboxGroup-cfg-msgTarget\" class=\"docClass\">msgTarget</a>\nconfig.</p>\n\n<h1>Layout</h1>\n\n<p>The default layout for CheckboxGroup makes it easy to arrange the checkboxes into\ncolumns; see the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-columns\" rel=\"Ext.form.CheckboxGroup-cfg-columns\" class=\"docClass\">columns</a> and <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-vertical\" rel=\"Ext.form.CheckboxGroup-cfg-vertical\" class=\"docClass\">vertical</a> config documentation for details.\nYou may also use a completely different layout by setting the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-layout\" rel=\"Ext.form.CheckboxGroup-cfg-layout\" class=\"docClass\">layout</a> to one of the\nother supported layout types; for instance you may wish to use a custom arrangement\nof hbox and vbox containers. In that case the checkbox components at any depth will\nstill be managed by the CheckboxGroup's validation.</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'Checkbox Group',\n    width: 300,\n    height: 125,\n    bodyPadding: 10,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    items:[{\n        xtype: 'checkboxgroup',\n        fieldLabel: 'Two Columns',\n        // Arrange checkboxes into two columns, distributed vertically\n        columns: 2,\n        vertical: true,\n        items: [\n            { boxLabel: 'Item 1', name: 'rb', inputValue: '1' },\n            { boxLabel: 'Item 2', name: 'rb', inputValue: '2', checked: true },\n            { boxLabel: 'Item 3', name: 'rb', inputValue: '3' },\n            { boxLabel: 'Item 4', name: 'rb', inputValue: '4' },\n            { boxLabel: 'Item 5', name: 'rb', inputValue: '5' },\n            { boxLabel: 'Item 6', name: 'rb', inputValue: '6' }\n        ]\n    }]\n});\n</code></pre>\n","aliases":{"widget":["checkboxgroup"],"request":null},"alternateClassNames":[],"extends":"Ext.form.FieldContainer","mixins":["Ext.form.field.Field"],"requires":["Ext.layout.container.CheckboxGroup","Ext.form.field.Checkbox","Ext.form.field.Base"],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"cfg","name":"actions","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":460}],"doc":"<p>An object containing properties which define named <a href=\"#!/api/Ext.Action\" rel=\"Ext.Action\" class=\"docClass\">actions</a>\nfor this container and any descendant components.</p>\n\n<p>An Action encapsulates a shareable, reusable set of properties which define a\n\"clickable\" UI component such as a <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">button</a> or\n<a href=\"#!/api/Ext.menu.Item\" rel=\"Ext.menu.Item\" class=\"docClass\">menu item</a>, or <a href=\"#!/api/Ext.panel.Panel-cfg-tools\" rel=\"Ext.panel.Panel-cfg-tools\" class=\"docClass\">panel header tool</a>,\nor an <a href=\"#!/api/Ext.grid.column.Action\" rel=\"Ext.grid.column.Action\" class=\"docClass\">ActionColumn item</a></p>\n\n<p>An Action, or more conveniently, the <em>name</em> of an action prefixed with <code>'@'</code>\nmay be used as a config object for creating child components which use a <code>handler</code>\nconfig property to reference a Controller method to invoke when the component is\nclicked.</p>\n\n<p>The property name is the action name, which may then be used as a child item\nconfiguration in an items configuration in\nany descendant component such as a toolbar or a menu, or in a\n<a href=\"#!/api/Ext.panel.Panel-cfg-tools\" rel=\"Ext.panel.Panel-cfg-tools\" class=\"docClass\">tools</a> configuration of a Panel.</p>\n\n<p>The property value is a configuration object for any clickable component.</p>\n\n<p>See the <a href=\"#!/api/Ext.Action\" rel=\"Ext.Action\" class=\"docClass\">Ext.Action</a> class for an example of reusable Actions.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-actions","owner":"Ext.container.Container","overrides":null,"short_doc":"An object containing properties which define named actions\nfor this container and any descendant components. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"activeChildTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":40}],"doc":"<p>DOM tabIndex attribute to set on the\nactive Focusable child of this container when using the \"Roaming tabindex\"\ntechnique.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-activeChildTabIndex","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"DOM tabIndex attribute to set on the\nactive Focusable child of this container when using the \"Roaming tabindex\"\ntechn...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"activeCounter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":130}],"doc":"<p>An incrementing numeric counter indicating activation\nindex for use by the <a href=\"#!/api/Ext.util.Floating-property-zIndexManager\" rel=\"Ext.util.Floating-property-zIndexManager\" class=\"docClass\">zIndexManager</a> to sort its stack.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-activeCounter","owner":"Ext.util.Floating","overrides":null,"short_doc":"An incrementing numeric counter indicating activation\nindex for use by the zIndexManager to sort its stack. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"activeError","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":372}],"doc":"<p>If specified, then the component will be displayed with this value as its active error\nwhen first rendered. Use <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a> or <a href=\"#!/api/Ext.form.Labelable-method-unsetActiveError\" rel=\"Ext.form.Labelable-method-unsetActiveError\" class=\"docClass\">unsetActiveError</a> to change it\nafter component creation.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-activeError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"If specified, then the component will be displayed with this value as its active error\nwhen first rendered. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"activeErrorsTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":149}],"doc":"<p>The template used to format the Array of error messages passed to <a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a>\ninto a single HTML string. if the <a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a> is title, it defaults to a list\nseparated by new lines. Otherwise, it renders each message as an item in an unordered list.</p>\n","params":null,"return":null,"type":"String/String[]/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-activeErrorsTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The template used to format the Array of error messages passed to setActiveErrors\ninto a single HTML string. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"activeItem","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":488}],"doc":"<p>A string component id or the numeric index of the component that should be\ninitially activated within the container's layout on render.  For example,\nactiveItem: 'item-1' or activeItem: 0 (index 0 = the first item in the\ncontainer's collection).  activeItem only applies to layout styles that can\ndisplay items one at a time (like <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> and\n<a href=\"#!/api/Ext.layout.container.Fit\" rel=\"Ext.layout.container.Fit\" class=\"docClass\">Ext.layout.container.Fit</a>).</p>\n","params":null,"return":null,"type":"String/Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-activeItem","owner":"Ext.container.Container","overrides":null,"short_doc":"A string component id or the numeric index of the component that should be\ninitially activated within the container's...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"afterBodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":413}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nat the end of the input containing element. If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-afterBodyEl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nat the end of the input containing element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"afterLabelTextTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":461}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the label text. If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-afterLabelTextTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the label text. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"afterLabelTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":429}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the label element. If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-afterLabelTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the label element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"afterSubTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":445}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nafter the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>. If an <code>XTemplate</code> is used, the\ncomponent's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-afterSubTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nafter the subTpl markup. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"alignOnScroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":46}],"doc":"<p>By default, when the <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> method is called, a floating\ncomponent will scroll to keep aligned with the anchoring element if the anchoring element\nis part of the scroll.</p>\n\n<p>If this is not necessary, and the <code>alignTo</code> is a one-off operation then set this config\nto <code>false</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-alignOnScroll","owner":"Ext.util.Floating","overrides":null,"short_doc":"By default, when the alignTo method is called, a floating\ncomponent will scroll to keep aligned with the anchoring el...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"alignTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":500}],"doc":"<p>A Component or Element by which to position this component according to the\n<a href=\"#!/api/Ext.Component-cfg-defaultAlign\" rel=\"Ext.Component-cfg-defaultAlign\" class=\"docClass\">defaultAlign</a>. Defaults to the owning Container.</p>\n\n<p><em>Only applicable if this component is <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a></em></p>\n\n<p><em>Used upon first show</em>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-alignTarget","owner":"Ext.Component","overrides":null,"short_doc":"A Component or Element by which to position this component according to the\ndefaultAlign. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"allowBlank","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":111}],"doc":"<p>False to validate that at least one item in the group is checked. If no items are selected at\nvalidation time, <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-blankText\" rel=\"Ext.form.CheckboxGroup-cfg-blankText\" class=\"docClass\">blankText</a> will be used as the error text.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-allowBlank","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"False to validate that at least one item in the group is checked. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"allowFocusingDisabledChildren","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":54}],"doc":"<p>Set this to <code>true</code>\nto enable focusing disabled child items via keyboard.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-allowFocusingDisabledChildren","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"Set this to true\nto enable focusing disabled child items via keyboard. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"alwaysOnTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":137}],"doc":"<p>A flag indicating that this component should be\non the top of the z-index stack for use by the <a href=\"#!/api/Ext.util.Floating-property-zIndexManager\" rel=\"Ext.util.Floating-property-zIndexManager\" class=\"docClass\">zIndexManager</a> to sort its stack.</p>\n\n<p>This may be a positive number to prioritize the ordering of multiple visible\nalways on top components.</p>\n\n<p>This may be set to a <em>negative</em> number to prioritize a component to the <em>bottom</em>\nof the z-index stack.</p>\n","params":null,"return":null,"type":"Boolean/Number","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-alwaysOnTop","owner":"Ext.util.Floating","overrides":null,"short_doc":"A flag indicating that this component should be\non the top of the z-index stack for use by the zIndexManager to sort ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"anchor","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":511}],"doc":"<p>This configuration option is to be applied to <strong>child <code>items</code></strong> of a container managed\nby an <a href=\"#!/api/Ext.layout.container.Anchor\" rel=\"Ext.layout.container.Anchor\" class=\"docClass\">Anchor Layout</a>.</p>\n\n<p>This value is what tells the layout how an item should be anchored to the container. <code>items</code>\nadded to an AnchorLayout accept an anchoring-specific config property of <strong>anchor</strong>\nwhich is a string containing two values: the horizontal anchor value and the vertical anchor\nvalue (for example, '100% 50%'). The following types of anchor values are supported:</p>\n\n<ul>\n<li><p><strong>Percentage</strong> : Any value between 1 and 100, expressed as a percentage.</p>\n\n<p>The first anchor is the percentage width that the item should take up within the container,\nand the second is the percentage height.  For example:</p>\n\n<pre><code>// two values specified\nanchor: '100% 50%' // render item complete width of the container and\n                   // 1/2 height of the container\n// one value specified\nanchor: '100%'     // the width value; the height will default to auto\n</code></pre></li>\n<li><p><strong>Offsets</strong> : Any positive or negative integer value.</p>\n\n<p>This is a raw adjustment where the first anchor is the offset from the right edge\nof the container, and the second is the offset from the bottom edge. For example:</p>\n\n<pre><code>// two values specified\nanchor: '-50 -100' // render item the complete width of the container\n                   // minus 50 pixels and\n                   // the complete height minus 100 pixels.\n// one value specified\nanchor: '-50'      // anchor value is assumed to be the right offset value\n                   // bottom offset will default to 0\n</code></pre></li>\n<li><p><strong>Sides</strong> : Valid values are <code>right</code> (or <code>r</code>) and <code>bottom</code> (or <code>b</code>).</p>\n\n<p>Either the container must have a fixed size or an anchorSize config value defined\nat render time in order for these to have any effect.</p></li>\n<li><p><strong>Mixed</strong> :</p>\n\n<p>Anchor values can also be mixed as needed.  For example, to render the width offset\nfrom the container right edge by 50 pixels and 75% of the container's height use:</p>\n\n<pre><code>anchor:   '-50 75%'\n</code></pre></li>\n</ul>\n\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-anchor","owner":"Ext.Component","overrides":null,"short_doc":"This configuration option is to be applied to child items of a container managed\nby an Anchor Layout. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"anchorSize","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/Anchor.js","linenr":306}],"doc":"<p>Defines the anchoring size of container.\nEither a number to define the width of the container or an object\nwith <code>width</code> and <code>height</code> fields.</p>\n","params":null,"return":null,"type":"Number/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-anchorSize","owner":"Ext.container.Container","overrides":null,"short_doc":"Defines the anchoring size of container. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"animateShadow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":30}],"doc":"<p><code>true</code> to animate the shadow along with the component while the component is animating.\nBy default the shadow is hidden while the component is animating</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-animateShadow","owner":"Ext.util.Floating","overrides":null,"short_doc":"true to animate the shadow along with the component while the component is animating. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"ariaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"doc":"<p>An object containing ARIA attributes to be set\non this Component's ARIA element. Use this to set the attributes that cannot be\ndetermined by the Component's state, such as <code>aria-live</code>, <code>aria-flowto</code>, etc.</p>\n\n<p><strong>Note</strong> that this config is only meaningful at the Component rendering time,\nand setting it after that will do nothing.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{$value: null, lazy: true}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaAttributes","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"An object containing ARIA attributes to be set\non this Component's ARIA element. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"ariaDescribedBy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":31}],"doc":"<p>DOM selector for a child element that is to be used\nas description for this Component, set in <code>aria-describedby</code> attribute.\nThe selector works the same way as <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaDescribedBy","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"DOM selector for a child element that is to be used\nas description for this Component, set in aria-describedby attrib...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaErrorText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":393}],"doc":"<p>Localized announcement text for validation errors. This text\nwill be used by Assistive Technologies such as screen readers to alert the users when\nfield validation fails.</p>\n\n<p>This config is used with <a href=\"#!/api/Ext.String-method-format\" rel=\"Ext.String-method-format\" class=\"docClass\">Ext.String.format</a>. '{0}' will be replaced with the actual\nerror message(s), '{1}' will be replaced with field label.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'Input error. {0}.'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaErrorText","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Localized announcement text for validation errors. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaHelp","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":386}],"doc":"<p>Optional text description for this object. This text will be\nannounced to Assistive Technology users when the object is focused.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaHelp","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Optional text description for this object. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaLabel","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":14}],"doc":"<p>ARIA label for this Component. It is best to use\n<a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> option instead, because screen readers prefer\n<code>aria-labelledby</code> attribute to <code>aria-label</code>. <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabel\" rel=\"Ext.mixin.Accessible-cfg-ariaLabel\" class=\"docClass\">ariaLabel</a> and\n<a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> config options are mutually exclusive.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaLabel","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"ARIA label for this Component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"ariaLabelledBy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":21}],"doc":"<p>DOM selector for a child element that is to be used\nas label for this Component, set in <code>aria-labelledby</code> attribute.\nIf the selector is by <code>#id</code>, the label element can be any existing element,\nnot necessarily a child of the main Component element.</p>\n\n<p><a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy\" rel=\"Ext.mixin.Accessible-cfg-ariaLabelledBy\" class=\"docClass\">ariaLabelledBy</a> and <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaLabel\" rel=\"Ext.mixin.Accessible-cfg-ariaLabel\" class=\"docClass\">ariaLabel</a> config options are\nmutually exclusive, and <code>ariaLabelledBy</code> has the higher precedence.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ariaLabelledBy","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"DOM selector for a child element that is to be used\nas label for this Component, set in aria-labelledby attribute. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"autoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":500}],"doc":"<p>If true the container will automatically destroy any contained component that is removed\nfrom it, else destruction must be handled manually.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoDestroy","owner":"Ext.container.Container","overrides":null,"short_doc":"If true the container will automatically destroy any contained component that is removed\nfrom it, else destruction mu...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"autoEl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":112}],"doc":"<p>A tag name or <a href=\"#!/api/Ext.dom.Helper\" rel=\"Ext.dom.Helper\" class=\"docClass\">DomHelper</a> spec used to create the <a href=\"#!/api/Ext.form.FieldContainer-method-getEl\" rel=\"Ext.form.FieldContainer-method-getEl\" class=\"docClass\">Element</a>\nwhich will encapsulate this Component.</p>\n\n<p>You do not normally need to specify this. For the base classes <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> and\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>, this defaults to <strong>'div'</strong>. The more complex Sencha classes\nuse a more complex DOM structure specified by their own <a href=\"#!/api/Ext.form.FieldContainer-cfg-renderTpl\" rel=\"Ext.form.FieldContainer-cfg-renderTpl\" class=\"docClass\">renderTpl</a>s.</p>\n\n<p>This is intended to allow the developer to create application-specific utility Components\nencapsulated by different DOM elements. Example usage:</p>\n\n<pre><code>{\n    xtype: 'component',\n    autoEl: {\n        tag: 'img',\n        src: 'http://www.example.com/example.jpg'\n    }\n}, {\n    xtype: 'component',\n    autoEl: {\n        tag: 'blockquote',\n        html: 'autoEl is cool!'\n    }\n}, {\n    xtype: 'container',\n    autoEl: 'ul',\n    cls: 'ux-unordered-list',\n    items: {\n        xtype: 'component',\n        autoEl: 'li',\n        html: 'First list item'\n    }\n}\n</code></pre>\n","params":null,"return":null,"type":"String/Object","throws":null,"default":"{tag: 'div', role: 'presentation'}","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":112,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoEl","owner":"Ext.form.FieldContainer","overrides":[{"name":"autoEl","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-autoEl\" rel=\"Ext.Component-cfg-autoEl\" class=\"docClass\">Ext.Component.autoEl</a>"}],"short_doc":"A tag name or DomHelper spec used to create the Element\nwhich will encapsulate this Component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"autoFitErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":332}],"doc":"<p>Whether to adjust the component's body width to make room for 'side'\n<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">error messages</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoFitErrors","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Whether to adjust the component's body width to make room for 'side'\nerror messages. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"autoRender","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":554}],"doc":"<p>This config is intended mainly for non-<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Components which may or may not\nbe shown. Instead of using <a href=\"#!/api/Ext.Component-cfg-renderTo\" rel=\"Ext.Component-cfg-renderTo\" class=\"docClass\">renderTo</a> in the configuration, and rendering upon\nconstruction, this allows a Component to render itself upon first\n<em><a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a></em>. If <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> is <code>true</code>, the value\nof this config is omitted as if it is <code>true</code>.</p>\n\n<p>Specify as <code>true</code> to have this Component render to the document body upon first show.</p>\n\n<p>Specify as an element, or the ID of an element to have this Component render to a specific\nelement upon first show.</p>\n","params":null,"return":null,"type":"Boolean/String/HTMLElement/Ext.dom.Element","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoRender","owner":"Ext.Component","overrides":null,"short_doc":"This config is intended mainly for non-floating Components which may or may not\nbe shown. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"cfg","name":"autoScroll","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":569}],"doc":"<p><code>true</code> to use overflow:'auto' on the components layout element and show scroll bars\nautomatically when necessary, <code>false</code> to clip any overflowing content.</p>\n\n<p>This should not be combined with <a href=\"#!/api/Ext.Component-cfg-overflowX\" rel=\"Ext.Component-cfg-overflowX\" class=\"docClass\">overflowX</a> or  <a href=\"#!/api/Ext.Component-cfg-overflowY\" rel=\"Ext.Component-cfg-overflowY\" class=\"docClass\">overflowY</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> instead</p>\n","version":"5.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoScroll","owner":"Ext.Component","overrides":null,"short_doc":"true to use overflow:'auto' on the components layout element and show scroll bars\nautomatically when necessary, false...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"autoShow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":578}],"doc":"<p><code>true</code> to automatically show the component upon creation. This config option may only be used\nfor <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> components or components that use <a href=\"#!/api/Ext.Component-cfg-autoRender\" rel=\"Ext.Component-cfg-autoRender\" class=\"docClass\">autoRender</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoShow","owner":"Ext.Component","overrides":null,"short_doc":"true to automatically show the component upon creation. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"baseBodyCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":226}],"doc":"<p>The CSS class to be applied to the body content element.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-body'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-baseBodyCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The CSS class to be applied to the body content element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"baseCls","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":802}],"doc":"<p>The base CSS class to apply to this component's element. This will also be prepended\nto elements within this component like Panel's body will get a class <code>x-panel-body</code>.\nThis means that if you create a subclass of Panel, and you want it to get all the Panels\nstyling for the element and the body, you leave the <code>baseCls</code> <code>x-panel</code> and use\n<code>componentCls</code> to add specific styling for this component.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'container'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-baseCls","owner":"Ext.container.Container","overrides":[{"name":"baseCls","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-baseCls\" rel=\"Ext.Component-cfg-baseCls\" class=\"docClass\">Ext.Component.baseCls</a>"}],"short_doc":"The base CSS class to apply to this component's element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"beforeBodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":405}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nat the beginning of the input containing element. If an <code>XTemplate</code> is used,\nthe component's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-beforeBodyEl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nat the beginning of the input containing ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"beforeLabelTextTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":453}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the label text. If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-beforeLabelTextTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the label text. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"beforeLabelTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":421}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the label element. If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-beforeLabelTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the label element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"beforeSubTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":437}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\nbefore the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">subTpl markup</a>. If an <code>XTemplate</code> is used, the\ncomponent's <a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-beforeSubTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\nbefore the subTpl markup. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"bind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"doc":"<p>Setting this config option adds or removes data bindings for other configs.\nFor example, to bind the <code>title</code> config:</p>\n\n<pre><code> var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'panel',\n     bind: {\n         title: 'Hello {user.name}'\n     }\n });\n</code></pre>\n\n<p>To dynamically add bindings:</p>\n\n<pre><code> panel.setBind({\n     title: 'Greetings {user.name}!'\n });\n</code></pre>\n\n<p>To remove bindings:</p>\n\n<pre><code> panel.setBind({\n     title: null\n });\n</code></pre>\n\n<p>The bind expressions are presented to <code><a href=\"#!/api/Ext.app.ViewModel-method-bind\" rel=\"Ext.app.ViewModel-method-bind\" class=\"docClass\">Ext.app.ViewModel.bind</a></code>. The\n<code>ViewModel</code> instance is determined by <code>lookupViewModel</code>.</p>\n\n<p><strong>Note:</strong> If  bind is passed as a string, it will use the\n<a href=\"#!/api/Ext.Component-property-defaultBindProperty\" rel=\"Ext.Component-property-defaultBindProperty\" class=\"docClass\">Ext.Component.defaultBindProperty</a> for the binding.</p>\n","params":null,"return":null,"type":"Object/String","throws":null,"default":"{$value: null, lazy: true}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-bind","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Setting this config option adds or removes data bindings for other configs. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"blankText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":118}],"doc":"<p>Error text to display if the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-allowBlank\" rel=\"Ext.form.CheckboxGroup-cfg-allowBlank\" class=\"docClass\">allowBlank</a> validation fails\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"\"You must select at least one item in this group\"","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-blankText","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"Error text to display if the allowBlank validation fails\n@locale ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"border","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":597}],"doc":"<p>Specifies the border size for this component. The border can be a single numeric value\nto apply to all sides or it can be a CSS style specification for each style,\nfor example: '10 5 3 10' (top, right, bottom, left).</p>\n\n<p>For components that have no border by default, setting this won't make the border appear\nby itself. You also need to specify border color and style:</p>\n\n<pre><code>border: 5,\nstyle: {\n    borderColor: 'red',\n    borderStyle: 'solid'\n}\n</code></pre>\n\n<p>To turn off the border, use <code>border: false</code>.</p>\n","params":null,"return":null,"type":"Number/String/Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-border","owner":"Ext.Component","overrides":null,"short_doc":"Specifies the border size for this component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"bubbleEvents","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":508}],"doc":"<p>An array of events that, when fired, should be bubbled to any parent container.\nSee <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">Ext.util.Observable.enableBubble</a>.</p>\n","params":null,"return":null,"type":"String[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-bubbleEvents","owner":"Ext.container.Container","overrides":null,"short_doc":"An array of events that, when fired, should be bubbled to any parent container. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"childEls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":117}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['containerEl']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":117,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-childEls","owner":"Ext.form.FieldContainer","overrides":[{"name":"childEls","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">Ext.Component.childEls</a>"},{"name":"childEls","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-cfg-childEls\" rel=\"Ext.form.Labelable-cfg-childEls\" class=\"docClass\">Ext.form.Labelable.childEls</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"cfg","name":"cls","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":634}],"doc":"<p>An optional extra CSS class that will be added to this component's Element.\nThe value can be a string, a list of strings separated by spaces, or an array of strings.\nThis can be useful for adding customized styles to the component or any of its children\nusing standard CSS rules.</p>\n","params":null,"return":null,"type":"String/String[]","throws":null,"default":"''","properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-cls","owner":"Ext.Component","overrides":null,"short_doc":"An optional extra CSS class that will be added to this component's Element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"columnWidth","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":644}],"doc":"<p>Defines the column width inside <a href=\"#!/api/Ext.layout.container.Column\" rel=\"Ext.layout.container.Column\" class=\"docClass\">column layout</a>.</p>\n\n<p>The columnWidth property is always evaluated as a percentage and must be a decimal value\ngreater than 0 and less than 1 (e.g., .25). See the description at the top of\n<a href=\"#!/api/Ext.layout.container.Column\" rel=\"Ext.layout.container.Column\" class=\"docClass\">column layout</a> for additional usage details when combining\nwidth and columnWidth configs within the layout.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-columnWidth","owner":"Ext.Component","overrides":null,"short_doc":"Defines the column width inside column layout. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"columns","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":82}],"doc":"<p>Specifies the number of columns to use when displaying grouped checkbox/radio controls using\nautomatic layout. This config can take several types of values:</p>\n\n<ul>\n<li>'auto' - The controls will be rendered one per column on one row and the width of each\ncolumn will be evenly distributed based on the width of the overall field container.\nThis is the default.</li>\n<li>Number - If you specific a number (e.g., 3) that number of columns will be created\nand the contained controls will be automatically distributed based on the value\nof <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-vertical\" rel=\"Ext.form.CheckboxGroup-cfg-vertical\" class=\"docClass\">vertical</a>.</li>\n<li>Array - You can also specify an array of column widths, mixing integer (fixed width)\nand float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values\nwill be rendered first, then any float values will be calculated as a percentage\nof the remaining space. Float values do not have to add up to 1 (100%)\nalthough if you want the controls to take up the entire field container you should do so.</li>\n</ul>\n\n","params":null,"return":null,"type":"String/Number/Number[]","throws":null,"default":"'auto'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-columns","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"Specifies the number of columns to use when displaying grouped checkbox/radio controls using\nautomatic layout. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},{"tagname":"cfg","name":"combineErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":137}],"doc":"<p>If set to true, the field container will automatically combine and display the validation\nerrors from all the fields it contains as a single error on the container, according to the\nconfigured <a href=\"#!/api/Ext.form.FieldContainer-cfg-msgTarget\" rel=\"Ext.form.FieldContainer-cfg-msgTarget\" class=\"docClass\">msgTarget</a>. Defaults to false.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-combineErrors","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"If set to true, the field container will automatically combine and display the validation\nerrors from all the fields ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"combineLabels","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":121}],"doc":"<p>If set to true, and there is no defined <a href=\"#!/api/Ext.form.FieldContainer-cfg-fieldLabel\" rel=\"Ext.form.FieldContainer-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>, the field container will\nautomatically generate its label by combining the labels of all the fields it contains.\nDefaults to false.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-combineLabels","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"If set to true, and there is no defined fieldLabel, the field container will\nautomatically generate its label by comb...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"componentCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":141}],"doc":"<p>CSS Class to be added to a components root level element to give distinction to it\nvia styling.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-checkboxgroup'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":141,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-componentCls","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"componentCls","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-cfg-componentCls\" rel=\"Ext.form.FieldContainer-cfg-componentCls\" class=\"docClass\">Ext.form.FieldContainer.componentCls</a>"}],"short_doc":"CSS Class to be added to a components root level element to give distinction to it\nvia styling. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"componentLayout","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":108}],"doc":"<p>The sizing and positioning of a Component's internal Elements is the responsibility\nof the Component's layout manager which sizes a Component's internal structure in response\nto the Component being sized.</p>\n\n<p>Generally, developers will not use this configuration as all provided Components which need\ntheir internal elements sizing (Such as <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">input fields</a>) come with\ntheir own componentLayout managers.</p>\n\n<p>The <a href=\"#!/api/Ext.layout.container.Auto\" rel=\"Ext.layout.container.Auto\" class=\"docClass\">default layout manager</a> will be used on instances of the\nbase <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> class which simply sizes the Component's encapsulating element to the\nheight and width specified in the <a href=\"#!/api/Ext.form.FieldContainer-method-setSize\" rel=\"Ext.form.FieldContainer-method-setSize\" class=\"docClass\">setSize</a> method.</p>\n","params":null,"return":null,"type":"String/Object","throws":null,"default":"'fieldcontainer'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":108,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-componentLayout","owner":"Ext.form.FieldContainer","overrides":[{"name":"componentLayout","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-componentLayout\" rel=\"Ext.Component-cfg-componentLayout\" class=\"docClass\">Ext.Component.componentLayout</a>"}],"short_doc":"The sizing and positioning of a Component's internal Elements is the responsibility\nof the Component's layout manager...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"constrain","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":37}],"doc":"<p>True to constrain this Components within its containing element, false to allow it to fall\noutside of its containing element. By default this Component will be rendered to\n<code>document.body</code>. To render and constrain this Component within another element specify\n<a href=\"#!/api/Ext.Component-cfg-renderTo\" rel=\"Ext.Component-cfg-renderTo\" class=\"docClass\">renderTo</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-constrain","owner":"Ext.util.Floating","overrides":null,"short_doc":"True to constrain this Components within its containing element, false to allow it to fall\noutside of its containing ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"constrainTo","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":687}],"doc":"<p>A <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> (or an element from which a Region measurement will be read)\nwhich is used to constrain the component. Only applies when the component is floating.</p>\n","params":null,"return":null,"type":"Ext.util.Region/Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-constrainTo","owner":"Ext.Component","overrides":null,"short_doc":"A Region (or an element from which a Region measurement will be read)\nwhich is used to constrain the component. ...","html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"cfg","name":"constraintInsets","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":678}],"doc":"<p>An object or a string (in TRBL order) specifying insets from the configured\n<a href=\"#!/api/Ext.Component-cfg-constrainTo\" rel=\"Ext.Component-cfg-constrainTo\" class=\"docClass\">constrain region</a> within which this component must be constrained\nwhen positioning or sizing. Example:</p>\n\n<pre><code>constraintInsets: '10 10 10 10' // Constrain with 10px insets from parent\n</code></pre>\n","params":null,"return":null,"type":"Object/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-constraintInsets","owner":"Ext.Component","overrides":null,"short_doc":"An object or a string (in TRBL order) specifying insets from the configured\nconstrain region within which this compon...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"contentEl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":693}],"doc":"<p>Specify an existing HTML element, or the <code>id</code> of an existing HTML element to use as the\ncontent for this component.</p>\n\n<p>This config option is used to take an existing HTML element and place it in the layout\nelement of a new component (it simply moves the specified DOM element <em>after the Component\nis rendered</em> to use as the content.</p>\n\n<p><strong>Notes:</strong></p>\n\n<p>The specified HTML element is appended to the layout element of the component <em>after any\nconfigured <a href=\"#!/api/Ext.Component-cfg-html\" rel=\"Ext.Component-cfg-html\" class=\"docClass\">HTML</a> has been inserted</em>, and so the document will not contain\nthis element at the time the <a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a> event is fired.</p>\n\n<p>The specified HTML element used will not participate in any\n<strong><code><a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a></code></strong> scheme that the Component may use.\nIt is just HTML. Layouts operate on child\n<strong><code><a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a></code></strong>.</p>\n\n<p>Add either the <code>x-hidden</code> or the <code>x-hidden-display</code> CSS class to prevent a brief flicker\nof the content before it is rendered to the panel.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-contentEl","owner":"Ext.Component","overrides":null,"short_doc":"Specify an existing HTML element, or the id of an existing HTML element to use as the\ncontent for this component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"controller","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":47}],"doc":"<p>A string alias, a configuration object or an instance of a <code>ViewController</code> for\nthis container. Sample usage:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.UserController', {\n    alias: 'controller.user'\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('UserContainer', {\n    extend: 'Ext.container.container',\n    controller: 'user'\n});\n// Or\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('UserContainer', {\n    extend: 'Ext.container.container',\n    controller: {\n        type: 'user',\n        someConfig: true\n    }\n});\n\n// Can also instance at runtime\nvar ctrl = new MyApp.UserController();\nvar view = new UserContainer({\n    controller: ctrl\n});\n</code></pre>\n","params":null,"return":null,"type":"String/Object/Ext.app.ViewController","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-controller","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"A string alias, a configuration object or an instance of a ViewController for\nthis container. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},{"tagname":"cfg","name":"data","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":319}],"doc":"<p>The initial set of data to apply to the <code><a href=\"#!/api/Ext.Component-cfg-tpl\" rel=\"Ext.Component-cfg-tpl\" class=\"docClass\">tpl</a></code> to update the content\narea of the Component.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-data","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"defaultAlign","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":719}],"doc":"<p>The default <a href=\"#!/api/Ext.util.Positionable-method-getAlignToXY\" rel=\"Ext.util.Positionable-method-getAlignToXY\" class=\"docClass\">Ext.dom.Element#getAlignToXY</a> anchor\nposition value for this component relative to its <a href=\"#!/api/Ext.Component-cfg-alignTarget\" rel=\"Ext.Component-cfg-alignTarget\" class=\"docClass\">alignTarget</a>\n(which defaults to its owning Container).</p>\n\n<p><em>Only applicable if this component is <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a></em></p>\n\n<p><em>Used upon first show</em>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'c-c'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-defaultAlign","owner":"Ext.Component","overrides":null,"short_doc":"The default Ext.dom.Element#getAlignToXY anchor\nposition value for this component relative to its alignTarget\n(which ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"defaultFocus","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":701}],"doc":"<p>Specifies a child Component to receive focus when this Container's <a href=\"#!/api/Ext.container.Container-method-focus\" rel=\"Ext.container.Container-method-focus\" class=\"docClass\">focus</a>\nmethod is called. Should be a valid <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">query</a> selector.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-defaultFocus","owner":"Ext.container.Container","overrides":null,"short_doc":"Specifies a child Component to receive focus when this Container's focus\nmethod is called. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"defaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"doc":"<p>If <code>true</code>, this component will be the default scope (this pointer) for events\nspecified with string names so that the scope can be dynamically resolved. The\ncomponent will automatically become the defaultListenerScope if a\n<a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a> is specified.</p>\n\n<p>See the introductory docs for <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> for some sample\nusages.</p>\n\n<p><strong>NOTE</strong>: This value can only be reliably set at construction time. Setting it\nafter that time may not correctly rewire all of the potentially effected\nlisteners.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-defaultListenerScope","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"If true, this component will be the default scope (this pointer) for events\nspecified with string names so that the s...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"defaultType","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":125}],"doc":"<p>The default <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">xtype</a> of child Components to create in this Container when\na child item is specified as a raw configuration object, rather than as an instantiated\nComponent.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'checkboxfield'","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":125,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-defaultType","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"defaultType","owner":"Ext.container.Container","link":"<a href=\"#!/api/Ext.container.Container-cfg-defaultType\" rel=\"Ext.container.Container-cfg-defaultType\" class=\"docClass\">Ext.container.Container.defaultType</a>"}],"short_doc":"The default xtype of child Components to create in this Container when\na child item is specified as a raw configurati...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"defaults","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":515}],"doc":"<p>This option is a means of applying default settings to all added items whether added\nthrough the <a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a> config or via the <a href=\"#!/api/Ext.container.Container-method-add\" rel=\"Ext.container.Container-method-add\" class=\"docClass\">add</a> or <a href=\"#!/api/Ext.container.Container-method-insert\" rel=\"Ext.container.Container-method-insert\" class=\"docClass\">insert</a>\nmethods.</p>\n\n<p>Defaults are applied to both config objects and instantiated components conditionally\nso as not to override existing properties in the item (see <a href=\"#!/api/Ext-method-applyIf\" rel=\"Ext-method-applyIf\" class=\"docClass\">Ext.applyIf</a>).</p>\n\n<p>If the defaults option is specified as a function, then the function will be called\nusing this Container as the scope (<code>this</code> reference) and passing the added item as\nthe first parameter. Any resulting object from that call is then applied to the item\nas default properties.</p>\n\n<p>For example, to automatically apply padding to the body of each of a set of\ncontained <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a> items, you could pass:\n<code>defaults: {bodyStyle:'padding:15px'}</code>.</p>\n\n<p>Usage:</p>\n\n<pre><code>defaults: { // defaults are applied to items, not the container\n    scrollable: true\n},\nitems: [\n    // default will not be applied here, panel1 will be scrollable: false\n    {\n        xtype: 'panel',\n        id: 'panel1',\n        scrollable: false\n    },\n    // this component will have scrollable: true\n    new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n        id: 'panel2'\n    })\n]\n</code></pre>\n","params":null,"return":null,"type":"Object/Function","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-defaults","owner":"Ext.container.Container","overrides":null,"short_doc":"This option is a means of applying default settings to all added items whether added\nthrough the items config or via ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},{"tagname":"cfg","name":"detachOnRemove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":563}],"doc":"<p>True to move any component to the <a href=\"#!/api/Ext-method-getDetachedBody\" rel=\"Ext-method-getDetachedBody\" class=\"docClass\">detachedBody</a> when the component\nis removed from this container. This option is only applicable when the component\nis not destroyed while being removed, see <a href=\"#!/api/Ext.container.Container-cfg-autoDestroy\" rel=\"Ext.container.Container-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a> and <a href=\"#!/api/Ext.container.Container-method-remove\" rel=\"Ext.container.Container-method-remove\" class=\"docClass\">remove</a>.\nIf this option is set to false, the DOM of the component will remain in the current place\nuntil it is explicitly moved.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-detachOnRemove","owner":"Ext.container.Container","overrides":null,"short_doc":"True to move any component to the detachedBody when the component\nis removed from this container. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"disabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":63}],"doc":"<p>True to disable the field. Disabled Fields will not be\n<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitted</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-disabled","owner":"Ext.form.field.Field","overrides":[{"name":"disabled","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-disabled\" rel=\"Ext.Component-cfg-disabled\" class=\"docClass\">Ext.Component.disabled</a>"}],"short_doc":"True to disable the field. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"disabledCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":754}],"doc":"<p>CSS class to add when the Component is disabled.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'item-disabled'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-disabledCls","owner":"Ext.Component","overrides":null,"short_doc":"CSS class to add when the Component is disabled. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"dock","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":760}],"doc":"<p>The side of the <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">panel</a> where this component is to be\ndocked when specified in the panel's\n<a href=\"#!/api/Ext.panel.Panel-cfg-dockedItems\" rel=\"Ext.panel.Panel-cfg-dockedItems\" class=\"docClass\">dockedItems</a> config.</p>\n\n<p>Possible values are:</p>\n\n<ul>\n<li>top</li>\n<li>bottom</li>\n<li>left</li>\n<li>right</li>\n</ul>\n\n","params":null,"return":null,"type":"'top'/'bottom'/'left'/'right'","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-dock","owner":"Ext.Component","overrides":null,"short_doc":"The side of the panel where this component is to be\ndocked when specified in the panel's\ndockedItems config. ...","html_type":"'top'/'bottom'/'left'/'right'"},{"tagname":"cfg","name":"draggable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":774}],"doc":"<p>Specify as true to make a <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Component draggable using the Component's\nencapsulating element as the drag handle.</p>\n\n<p>This may also be specified as a config object for the\n<a href=\"#!/api/Ext.util.ComponentDragger\" rel=\"Ext.util.ComponentDragger\" class=\"docClass\">ComponentDragger</a> which is instantiated to perform dragging.</p>\n\n<p>For example to create a Component which may only be dragged around using a certain internal\nelement as the drag handle, use the delegate option:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>({\n    constrain: true,\n    floating: true,\n    style: {\n        backgroundColor: '#fff',\n        border: '1px solid black'\n    },\n    html: '&lt;h1 style=\"cursor:move\"&gt;The title&lt;/h1&gt;&lt;p&gt;The content&lt;/p&gt;',\n    draggable: {\n        delegate: 'h1'\n    }\n}).show();\n</code></pre>\n","params":null,"return":null,"type":"Boolean/Object","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-draggable","owner":"Ext.Component","overrides":null,"short_doc":"Specify as true to make a floating Component draggable using the Component's\nencapsulating element as the drag handle. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"errorMsgCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":215}],"doc":"<p>The CSS class to be applied to the error message element.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-error-msg'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-errorMsgCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The CSS class to be applied to the error message element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"fieldBodyCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":238}],"doc":"<p>An extra CSS class to be applied to the body content element in addition to\n<a href=\"#!/api/Ext.form.Labelable-cfg-baseBodyCls\" rel=\"Ext.form.Labelable-cfg-baseBodyCls\" class=\"docClass\">baseBodyCls</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"''","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-fieldBodyCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An extra CSS class to be applied to the body content element in addition to\nbaseBodyCls. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"fieldDefaults","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":34}],"doc":"<p>If specified, the properties in this object are used as default config values for each\n<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a> instance (e.g. <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> or\n<a href=\"#!/api/Ext.form.FieldContainer\" rel=\"Ext.form.FieldContainer\" class=\"docClass\">Ext.form.FieldContainer</a>) that is added as a descendant of this container.\nCorresponding values specified in an individual field's own configuration, or from the\n<a href=\"#!/api/Ext.container.Container-cfg-defaults\" rel=\"Ext.container.Container-cfg-defaults\" class=\"docClass\">defaults config</a> of its parent container,\nwill take precedence. See the documentation for <a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a> to see\nwhat config options may be specified in the fieldDefaults.</p>\n\n<p>Example:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>({\n    fieldDefaults: {\n        labelAlign: 'left',\n        labelWidth: 100\n    },\n    items: [{\n        xtype: 'fieldset',\n        defaults: {\n            labelAlign: 'top'\n        },\n        items: [{\n            name: 'field1'\n        }, {\n            name: 'field2'\n        }]\n    }, {\n        xtype: 'fieldset',\n        items: [{\n            name: 'field3',\n            labelWidth: 150\n        }, {\n            name: 'field4'\n        }]\n    }]\n});\n</code></pre>\n\n<p>In this example, field1 and field2 will get labelAlign: 'top' (from the fieldset's defaults)\nand labelWidth: 100 (from fieldDefaults), field3 and field4 will both get labelAlign: 'left'\n(from fieldDefaults and field3 will use the labelWidth: 150 from its own config.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-fieldDefaults","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"If specified, the properties in this object are used as default config values for each\nExt.form.Labelable instance (e.g. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"fieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":253}],"doc":"<p>The label for the field. It gets appended with the <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>, and its position\nand sizing is determined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a> and <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> configs.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-fieldLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The label for the field. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"fixed","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":57}],"doc":"<p>Configure as <code>true</code> to have this Component fixed at its <code>X, Y</code> coordinates in the browser\nviewport, immune to scrolling the document.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-fixed","owner":"Ext.util.Floating","overrides":null,"short_doc":"Configure as true to have this Component fixed at its X, Y coordinates in the browser\nviewport, immune to scrolling t...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"flex","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":800}],"doc":"<p>Flex may be applied to <strong>child items</strong> of a box layout\n(<a href=\"#!/api/Ext.layout.container.VBox\" rel=\"Ext.layout.container.VBox\" class=\"docClass\">vbox</a> or <a href=\"#!/api/Ext.layout.container.HBox\" rel=\"Ext.layout.container.HBox\" class=\"docClass\">hbox</a>).\nEach child item with a flex property will fill space (horizontally in <code>hbox</code>, vertically\nin <code>vbox</code>) according to that item's <strong>relative</strong> flex value compared to the sum of all items\nwith a flex value specified.</p>\n\n<p>Any child items that have either a <code>flex</code> of <code>0</code> or <code>undefined</code>\nwill not be 'flexed' (the initial size will not be changed).</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-flex","owner":"Ext.Component","overrides":null,"short_doc":"Flex may be applied to child items of a box layout\n(vbox or hbox). ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"floating","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":812}],"doc":"<p>Specify as true to float the Component outside of the document flow using CSS absolute\npositioning.</p>\n\n<p>Components such as <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s and <a href=\"#!/api/Ext.menu.Menu\" rel=\"Ext.menu.Menu\" class=\"docClass\">Menu</a>s are\nfloating by default.</p>\n\n<p>Floating Components that are programmatically <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">rendered</a>\nwill register themselves with the global <a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a></p>\n\n<h3>Floating Components as child items of a Container</h3>\n\n<p>A floating Component may be used as a child item of a Container. This just allows\nthe floating Component to seek a ZIndexManager by examining the ownerCt chain.</p>\n\n<p>When configured as floating, Components acquire, at render time, a\n<a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a> which manages a stack of related floating Components.\nThe ZIndexManager sorts its stack according to an incrementing access counter and the\n<a href=\"#!/api/Ext.util.Floating-cfg-alwaysOnTop\" rel=\"Ext.util.Floating-cfg-alwaysOnTop\" class=\"docClass\">alwaysOnTop</a> config when the Component's\n<a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">toFront</a> method is called.</p>\n\n<p>The ZIndexManager is found by traversing up the <a href=\"#!/api/Ext.Component-property-ownerCt\" rel=\"Ext.Component-property-ownerCt\" class=\"docClass\">ownerCt</a> chain to find an ancestor\nwhich itself is floating. This is so that descendant floating Components of floating\n<em>Containers</em> (Such as a ComboBox dropdown within a Window) can have its zIndex managed\nrelative to any siblings, but always <strong>above</strong> that floating ancestor Container.</p>\n\n<p>If no floating ancestor is found, a floating Component registers itself with the default\n<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a>.</p>\n\n<p>Floating components <em>do not participate in the Container's layout</em>. Because of this,\nthey are not rendered until you explicitly <a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a> them.</p>\n\n<p>After rendering, the ownerCt reference is deleted, and the <a href=\"#!/api/Ext.Component-property-floatParent\" rel=\"Ext.Component-property-floatParent\" class=\"docClass\">floatParent</a> property\nis set to the found floating ancestor Container. If no floating ancestor Container was found\nthe <a href=\"#!/api/Ext.Component-property-floatParent\" rel=\"Ext.Component-property-floatParent\" class=\"docClass\">floatParent</a> property will not be set.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-floating","owner":"Ext.Component","overrides":null,"short_doc":"Specify as true to float the Component outside of the document flow using CSS absolute\npositioning. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"focusCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1136}],"doc":"<p>CSS class suffix that will be used to\ncompose the CSS class name that will be added to Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusClsEl\" rel=\"Ext.mixin.Focusable-property-focusClsEl\" class=\"docClass\">focusClsEl</a>,\nand removed when Component blurs.</p>\n\n<p><strong>Note</strong> that this is not a full CSS class name; this suffix will be combined\nwith component's UI class via addClsWithUI and removeClsWithUI methods.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'focus'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-focusCls","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"CSS class suffix that will be used to\ncompose the CSS class name that will be added to Component's focusClsEl,\nand re...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"focusOnToFront","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":9}],"doc":"<p>Specifies whether the floated component should be automatically\n<a href=\"#!/api/Ext.Component-method-focus\" rel=\"Ext.Component-method-focus\" class=\"docClass\">focused</a> when it is <a href=\"#!/api/Ext.util.Floating-method-toFront\" rel=\"Ext.util.Floating-method-toFront\" class=\"docClass\">brought to the front</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-focusOnToFront","owner":"Ext.util.Floating","overrides":null,"short_doc":"Specifies whether the floated component should be automatically\nfocused when it is brought to the front. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"focusableContainer","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":21}],"doc":"<p>Enable or disable navigation\nwith arrow keys for this FocusableContainer. This option may be useful\nwith nested FocusableContainers, when only the root container should\nhandle keyboard events.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-focusableContainer","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"Enable or disable navigation\nwith arrow keys for this FocusableContainer. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"formBind","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":851}],"doc":"<p>When inside FormPanel, any component configured with <code>formBind: true</code> will\nbe enabled/disabled depending on the validity state of the form.\nSee <a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a> for more information and example.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-formBind","owner":"Ext.Component","overrides":null,"short_doc":"When inside FormPanel, any component configured with formBind: true will\nbe enabled/disabled depending on the validit...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"formItemCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":184}],"doc":"<p>A CSS class to be applied to the outermost element to denote that it is participating\nin the form field layout.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-formItemCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"A CSS class to be applied to the outermost element to denote that it is participating\nin the form field layout. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"frame","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":858}],"doc":"<p>Specify as <code>true</code> to have the Component inject framing elements within the Component\nat render time to provide a graphical rounded frame around the Component content.</p>\n\n<p>This is only necessary when running on outdated, or non standard-compliant browsers\nsuch as Microsoft's Internet Explorer prior to version 9 which do not support rounded corners\nnatively.</p>\n\n<p>The extra space taken up by this framing is available from the read only property\n<a href=\"#!/api/Ext.Component-property-frameSize\" rel=\"Ext.Component-property-frameSize\" class=\"docClass\">frameSize</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-frame","owner":"Ext.Component","overrides":null,"short_doc":"Specify as true to have the Component inject framing elements within the Component\nat render time to provide a graphi...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"height","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":871}],"doc":"<p>The height of this component. A numeric value will be interpreted as the number of\npixels; a string value will be treated as a CSS value with units.</p>\n","params":null,"return":null,"type":"Number|String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-height","owner":"Ext.Component","overrides":null,"short_doc":"The height of this component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"hidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":877}],"doc":"<p><code>true</code> to hide the component.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-hidden","owner":"Ext.Component","overrides":null,"short_doc":"true to hide the component. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"hideEmptyLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":313}],"doc":"<p>When set to true, the label element (<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>)\nwill be automatically hidden if the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> is empty. Setting this to false\nwill cause the empty label element to be rendered and space to be reserved for it;\nthis is useful if you want a field without a label to line up with other labeled fields\nin the same form.</p>\n\n<p>If you wish to unconditionall hide the label even if a non-empty fieldLabel is configured,\nthen set the <a href=\"#!/api/Ext.form.Labelable-cfg-hideLabel\" rel=\"Ext.form.Labelable-cfg-hideLabel\" class=\"docClass\">hideLabel</a> config to true.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-hideEmptyLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":"When set to true, the label element (fieldLabel and labelSeparator)\nwill be automatically hidden if the fieldLabel is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"hideLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":305}],"doc":"<p>Set to true to completely hide the label element (<a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and\n<a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a>). Also see <a href=\"#!/api/Ext.form.Labelable-cfg-hideEmptyLabel\" rel=\"Ext.form.Labelable-cfg-hideEmptyLabel\" class=\"docClass\">hideEmptyLabel</a>, which controls whether space\nwill be reserved for an empty fieldLabel.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-hideLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Set to true to completely hide the label element (fieldLabel and\nlabelSeparator). ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"hideMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":884}],"doc":"<p>A String which specifies how this Component's encapsulating DOM element will be hidden.\nValues may be:</p>\n\n<ul>\n<li><code>'display'</code> : The Component will be hidden using the <code>display: none</code> style.</li>\n<li><code>'visibility'</code> : The Component will be hidden using the <code>visibility: hidden</code> style.</li>\n<li><code>'offsets'</code> : The Component will be hidden by absolutely positioning it out of the\nvisible area of the document.\nThis is useful when a hidden Component must maintain measurable dimensions. Hiding using\n<code>display</code> results in a Component having zero dimensions.</li>\n</ul>\n\n","params":null,"return":null,"type":"String","throws":null,"default":"'display'","properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-hideMode","owner":"Ext.Component","overrides":null,"short_doc":"A String which specifies how this Component's encapsulating DOM element will be hidden. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"html","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":900}],"doc":"<p>An HTML fragment, or a <a href=\"#!/api/Ext.dom.Helper\" rel=\"Ext.dom.Helper\" class=\"docClass\">DomHelper</a> specification to use as the layout\nelement content. The HTML content is added after the component is rendered, so the document\nwill not contain this HTML at the time the <a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a> event is fired. This content\nis inserted into the body <em>before</em> any configured <a href=\"#!/api/Ext.Component-cfg-contentEl\" rel=\"Ext.Component-cfg-contentEl\" class=\"docClass\">contentEl</a> is appended.</p>\n","params":null,"return":null,"type":"String/Object","throws":null,"default":"''","properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-html","owner":"Ext.Component","overrides":null,"short_doc":"An HTML fragment, or a DomHelper specification to use as the layout\nelement content. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"id","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":910}],"doc":"<p>The <strong>unique</strong> id of this component instance.</p>\n\n<p>Use of this config should be considered carefully as this value must be unique across\nall existing components. Components created with an <code>id</code> may be accessed globally\nusing <a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">Ext.getCmp</a>.</p>\n\n<p>Instead of using assigned ids, consider a <a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a> config and\na <a href=\"#!/api/Ext.Component-cfg-controller\" rel=\"Ext.Component-cfg-controller\" class=\"docClass\">ViewController</a> to respond to events and perform processing\nupon this Component.</p>\n\n<p>Alternatively, <a href=\"#!/api/Ext.Component-cfg-itemId\" rel=\"Ext.Component-cfg-itemId\" class=\"docClass\">itemId</a> and <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> can be\nused to perform selector-based searching for Components analogous to DOM querying.\nThe <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a> class contains several helpful\n<a href=\"#!/api/Ext.container.Container-method-down\" rel=\"Ext.container.Container-method-down\" class=\"docClass\">shortcut methods</a> to query its descendant\nComponents by selector.</p>\n\n<p>Note that this <code>id</code> will also be used as the element id for the containing HTML\nelement that is rendered to the page for this component. This allows you to write\nid-based CSS rules to style the specific instance of this component uniquely, and\nalso to select sub-elements using this component's <code>id</code> as the parent.</p>\n\n<p>Defaults to an <a href=\"#!/api/Ext.Component-method-getId\" rel=\"Ext.Component-method-getId\" class=\"docClass\">auto-assigned id</a>.</p>\n\n<p><strong>Note</strong>: Valid identifiers start with a letter or underscore and are followed by\n(optional) additional letters, underscores, digits or hyphens.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-id","owner":"Ext.Component","overrides":null,"short_doc":"The unique id of this component instance. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"inactiveChildTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":47}],"doc":"<p>DOM tabIndex attribute to set on\ninactive Focusable children of this container when using the \"Roaming tabindex\"\ntechnique. This value rarely needs to be changed from its default.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"-1","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-inactiveChildTabIndex","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"DOM tabIndex attribute to set on\ninactive Focusable children of this container when using the \"Roaming tabindex\"\ntech...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"invalidCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":147}],"doc":"<p>If we allow this to mark with the invalidCls it will cascade to all\nchild fields, let them handle themselves</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"''","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-invalidCls","owner":"Ext.form.FieldContainer","overrides":[{"name":"invalidCls","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-cfg-invalidCls\" rel=\"Ext.form.Labelable-cfg-invalidCls\" class=\"docClass\">Ext.form.Labelable.invalidCls</a>"}],"short_doc":"If we allow this to mark with the invalidCls it will cascade to all\nchild fields, let them handle themselves ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"itemId","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":941}],"doc":"<p>The <strong>unique</strong> id of this component instance within its container. See also the\n<a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a> config.</p>\n\n<p>An <code>itemId</code> can be used as an alternative way to get a reference to a component\nwhen no object reference is available. Instead of using an <code><a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a></code> with\n<a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">getCmp</a>, use <code>itemId</code> with\n<a href=\"#!/api/Ext.container.Container-method-getComponent\" rel=\"Ext.container.Container-method-getComponent\" class=\"docClass\">getComponent</a> which will retrieve <code>itemId</code>'s\nor <a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a>'s. Since <code>itemId</code>'s are an index to the container's internal collection,\nthe <code>itemId</code> is scoped locally to the container -- avoiding potential conflicts with\n<a href=\"#!/api/Ext.ComponentManager\" rel=\"Ext.ComponentManager\" class=\"docClass\">Ext.ComponentManager</a>, which requires a <strong>unique</strong> <a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a> value.</p>\n\n<pre><code>var c = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({ //\n    height: 300,\n    renderTo: document.body,\n    layout: 'auto',\n    items: [{\n        itemId: 'p1',\n        title: 'Panel 1',\n        height: 150\n    },{\n        itemId: 'p2',\n        title: 'Panel 2',\n        height: 150\n    }]\n});\n\np1 = c.getComponent('p1'); // not the same as <a href=\"#!/api/Ext-method-getCmp\" rel=\"Ext-method-getCmp\" class=\"docClass\">Ext.getCmp</a>()\nconsole.log(p1);\np2 = p1.ownerCt.getComponent('p2'); // reference via a sibling\nconsole.log(p2);\n</code></pre>\n\n<p>Also see <a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a>, <code><a href=\"#!/api/Ext.container.Container-method-query\" rel=\"Ext.container.Container-method-query\" class=\"docClass\">Ext.container.Container.query</a></code>,\n<code><a href=\"#!/api/Ext.container.Container-method-down\" rel=\"Ext.container.Container-method-down\" class=\"docClass\">Ext.container.Container.down</a></code> and <code><a href=\"#!/api/Ext.container.Container-method-child\" rel=\"Ext.container.Container-method-child\" class=\"docClass\">Ext.container.Container.child</a></code>.</p>\n\n<p><strong>Note</strong>: Valid identifiers start with a letter or underscore and are followed by\n(optional) additional letters, underscores, digits or hyphens.</p>\n\n<p><strong>Note</strong>: to access the container of an item see <a href=\"#!/api/Ext.Component-property-ownerCt\" rel=\"Ext.Component-property-ownerCt\" class=\"docClass\">ownerCt</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-itemId","owner":"Ext.Component","overrides":null,"short_doc":"The unique id of this component instance within its container. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"items","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":76}],"doc":"<p>An Array of <a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">Checkbox</a>es or Checkbox config objects to arrange\nin the group.</p>\n","params":null,"return":null,"type":"Ext.form.field.Checkbox[]/Object[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-items","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"items","owner":"Ext.container.Container","link":"<a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">Ext.container.Container.items</a>"}],"short_doc":null,"html_type":"<a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">Ext.form.field.Checkbox</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]"},{"tagname":"cfg","name":"keyMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":88}],"doc":"<p>An object containing handlers for keyboard events. The property names of this\nobject are the key name and any modifiers. The values of the properties are the\ndescriptors of how to handle each event.</p>\n\n<p>The handler descriptor can be simply the handler function(either the\nliteral function or the method name), or it can be an object with these\nproperties:</p>\n\n<ul>\n<li><code>handler</code>: The function or its name to call to handle the event.</li>\n<li><code>scope</code>: The this pointer context (can be \"this\" or \"controller\").</li>\n<li><code>event</code>: An optional override of the key event to which to listen.</li>\n</ul>\n\n\n<p><strong>Important:</strong> Calls to <code>setKeyMap</code> do not replace the entire <code>keyMap</code> but\ninstead update the provided mappings. That is, unless <code>null</code> is passed as the\nvalue of the <code>keyMap</code> which will clear the <code>keyMap</code> of all entries.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":[{"tagname":"cfg","type":"String","name":"scope","optional":true,"doc":"<p>The default scope to apply to key handlers\nwhich do not specify a scope. This is processed the same way as the scope of\n<a href=\"#!/api/Ext.button.Button-cfg-listeners\" rel=\"Ext.button.Button-cfg-listeners\" class=\"docClass\">listeners</a>. It defaults to the <code>\"controller\"</code>, but using <code>'this'</code>\nmeans that an instance method will be used.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-keyMap","owner":"Ext.mixin.Keyboard","overrides":null,"short_doc":"An object containing handlers for keyboard events. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"keyMapEnabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":164}],"doc":"<p>Enables or disables processing keys in the <code>keyMap</code>. This value starts as\n<code>null</code> and if it is <code>null</code> when <code>initKeyMap</code> is called, it will automatically\nbe set to <code>true</code>. Since <code>initKeyMap</code> is called by <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> at the\nproper time, this is not something application code normally handles.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-keyMapEnabled","owner":"Ext.mixin.Keyboard","overrides":null,"short_doc":"Enables or disables processing keys in the keyMap. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"keyMapTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":174}],"doc":"<p>The name of the member that should be used to listen for keydown/keypress events.\nThis is intended to be controlled at the class level not per instance.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'el'","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-keyMapTarget","owner":"Ext.mixin.Keyboard","overrides":null,"short_doc":"The name of the member that should be used to listen for keydown/keypress events. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelAlign","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":260}],"doc":"<p>Controls the position and alignment of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>. Valid values are:</p>\n\n<ul>\n<li>\"left\" (the default) - The label is positioned to the left of the field, with its text\naligned to the left. Its width is determined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> config.</li>\n<li>\"top\" - The label is positioned above the field.</li>\n<li>\"right\" - The label is positioned to the left of the field, with its text aligned\nto the right. Its width is determined by the <a href=\"#!/api/Ext.form.Labelable-cfg-labelWidth\" rel=\"Ext.form.Labelable-cfg-labelWidth\" class=\"docClass\">labelWidth</a> config.</li>\n</ul>\n\n","params":null,"return":null,"type":"String","throws":null,"default":"'left'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelAlign","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Controls the position and alignment of the fieldLabel. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelAttrTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":469}],"doc":"<p>An optional string or <code>XTemplate</code> configuration to insert in the field markup\ninside the label element (as attributes). If an <code>XTemplate</code> is used, the component's\n<a href=\"#!/api/Ext.Component-cfg-renderData\" rel=\"Ext.Component-cfg-renderData\" class=\"docClass\">render data</a> serves as the context.</p>\n","params":null,"return":null,"type":"String/Array/Ext.XTemplate","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelAttrTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string or XTemplate configuration to insert in the field markup\ninside the label element (as attributes). ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"labelCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":191}],"doc":"<p>The CSS class to be applied to the label element. This (single) CSS class is used\nto formulate the renderSelector and drives the field layout where it is concatenated\nwith a hyphen ('-') and <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>. To add additional classes, use\n<a href=\"#!/api/Ext.form.Labelable-cfg-labelClsExtra\" rel=\"Ext.form.Labelable-cfg-labelClsExtra\" class=\"docClass\">labelClsExtra</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The CSS class to be applied to the label element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelClsExtra","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":209}],"doc":"<p>An optional string of one or more additional CSS classes to add to the label element.\nDefaults to empty.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelClsExtra","owner":"Ext.form.Labelable","overrides":null,"short_doc":"An optional string of one or more additional CSS classes to add to the label element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelConnector","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":129}],"doc":"<p>The string to use when joining the labels of individual sub-fields, when\n<a href=\"#!/api/Ext.form.FieldContainer-cfg-combineLabels\" rel=\"Ext.form.FieldContainer-cfg-combineLabels\" class=\"docClass\">combineLabels</a> is set to true. Defaults to ', '.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"', '","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelConnector","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"The string to use when joining the labels of individual sub-fields, when\ncombineLabels is set to true. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelPad","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":279}],"doc":"<p>The amount of space in pixels between the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> and the field body.\nThis defaults to <code>5</code> for compatibility with Ext JS 4, however, as of Ext JS 5\nthe space between the label and the body can optionally be determined by the theme\nusing the $form-label-horizontal-spacing (for side-aligned labels) and\n$form-label-vertical-spacing (for top-aligned labels) SASS variables.\nIn order for the stylesheet values as to take effect, you must use a labelPad value\nof <code>null</code>.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"5","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelPad","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The amount of space in pixels between the fieldLabel and the field body. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"labelSeparator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":291}],"doc":"<p>Character(s) to be inserted at the end of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">label text</a>.</p>\n\n<p>Set to empty string to hide the separator completely.\n@locale</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"':'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelSeparator","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Character(s) to be inserted at the end of the label text. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelStyle","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":300}],"doc":"<p>A CSS style specification string to apply directly to this field's label.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelStyle","owner":"Ext.form.Labelable","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"labelWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":272}],"doc":"<p>The width of the <a href=\"#!/api/Ext.form.Labelable-cfg-fieldLabel\" rel=\"Ext.form.Labelable-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a> in pixels. Only applicable if <a href=\"#!/api/Ext.form.Labelable-cfg-labelAlign\" rel=\"Ext.form.Labelable-cfg-labelAlign\" class=\"docClass\">labelAlign</a>\nis set to \"left\" or \"right\".</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"100","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelWidth","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The width of the fieldLabel in pixels. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"labelableRenderTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":74}],"doc":"<p>The rendering template for the field decorations. Component classes using this mixin\nshould include logic to use this as their <a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">renderTpl</a>,\nand implement the <a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">getSubTplMarkup</a> method to generate the field body content.</p>\n","params":null,"return":null,"type":"String/String[]/Ext.XTemplate","throws":null,"default":"['{beforeLabelTpl}', '<label id=\"{id}-labelEl\" data-ref=\"labelEl\" class=\"{labelCls} {labelCls}-{ui} {labelClsExtra} ', '{childElCls} {unselectableCls}\" style=\"{labelStyle}\"', '<tpl if=\"inputId && !skipLabelForAttribute\"> for=\"{inputId}\"</tpl>', ' {labelAttrTpl}>', '<span class=\"{labelInnerCls} {labelInnerCls}-{ui}\" style=\"{labelInnerStyle}\">', '{beforeLabelTextTpl}', '<span id=\"{id}-labelTextEl\" data-ref=\"labelTextEl\" class=\"{labelTextCls}\">', '<tpl if=\"fieldLabel\">{fieldLabel}', '<tpl if=\"labelSeparator\">{labelSeparator}</tpl>', '</tpl>', '</span>', '{afterLabelTextTpl}', '</span>', '</label>', '{afterLabelTpl}', '<div id=\"{id}-bodyEl\" data-ref=\"bodyEl\" role=\"presentation\"', ' class=\"{baseBodyCls} {baseBodyCls}-{ui}<tpl if=\"fieldBodyCls\">', ' {fieldBodyCls} {fieldBodyCls}-{ui}</tpl> {growCls} {extraFieldBodyCls}\"', '<tpl if=\"bodyStyle\"> style=\"{bodyStyle}\"</tpl>>', '{beforeBodyEl}', '{beforeSubTpl}', '{[values.$comp.getSubTplMarkup(values)]}', '{afterSubTpl}', '{afterBodyEl}', '<tpl if=\"renderAriaElements\">', '<tpl if=\"ariaHelp\">', '<span id=\"{id}-ariaHelpEl\" data-ref=\"ariaHelpEl\"', ' class=\"' + Ext.baseCSSPrefix + 'hidden-offsets\">', '{ariaHelp}', '</span>', '</tpl>', '<span id=\"{id}-ariaStatusEl\" data-ref=\"ariaStatusEl\" aria-hidden=\"true\"', ' class=\"' + Ext.baseCSSPrefix + 'hidden-offsets\">', '{ariaStatus}', '</span>', '<span id=\"{id}-ariaErrorEl\" data-ref=\"ariaErrorEl\" aria-hidden=\"true\" aria-live=\"assertive\"', ' class=\"' + Ext.baseCSSPrefix + 'hidden-clip\">', '</span>', '</tpl>', '</div>', '<tpl if=\"renderError\">', '<div id=\"{id}-errorWrapEl\" data-ref=\"errorWrapEl\" class=\"{errorWrapCls} {errorWrapCls}-{ui}', ' {errorWrapExtraCls}\" style=\"{errorWrapStyle}\">', '<div role=\"presentation\" id=\"{id}-errorEl\" data-ref=\"errorEl\" ', 'class=\"{errorMsgCls} {invalidMsgCls} {invalidMsgCls}-{ui}\" ', 'data-anchorTarget=\"{tipAnchorTarget}\">', '</div>', '</div>', '</tpl>', {disableFormats: true}]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-labelableRenderTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The rendering template for the field decorations. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"cfg","name":"layout","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":139}],"doc":"<p><strong>Important</strong>: In order for child items to be correctly sized and\npositioned, typically a layout manager <strong>must</strong> be specified through\nthe <code>layout</code> configuration option.</p>\n\n<p>The sizing and positioning of child <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-items\" rel=\"Ext.form.CheckboxGroup-cfg-items\" class=\"docClass\">items</a> is the responsibility of\nthe Container's layout manager which creates and manages the type of layout\nyou have in mind.  For example:</p>\n\n<p>If the layout configuration is not explicitly specified for\na general purpose container (e.g. Container or Panel) the\n<a href=\"#!/api/Ext.layout.container.Auto\" rel=\"Ext.layout.container.Auto\" class=\"docClass\">default layout manager</a> will be used\nwhich does nothing but render child components sequentially into the\nContainer (no sizing or positioning will be performed in this situation).</p>\n\n<p><strong>layout</strong> may be specified as either as an Object or as a String:</p>\n\n<h2>Specify as an Object</h2>\n\n<p>Example usage:</p>\n\n<pre><code>layout: {\n    type: 'vbox',\n    align: 'left'\n}\n</code></pre>\n\n<ul>\n<li><p><strong>type</strong></p>\n\n<p>The layout type to be used for this container.  If not specified,\na default <a href=\"#!/api/Ext.layout.container.Auto\" rel=\"Ext.layout.container.Auto\" class=\"docClass\">Ext.layout.container.Auto</a> will be created and used.</p>\n\n<p>Valid layout <code>type</code> values are listed in <a href=\"#!/api/Ext.enums.Layout\" rel=\"Ext.enums.Layout\" class=\"docClass\">Ext.enums.Layout</a>.</p></li>\n<li><p>Layout specific configuration properties</p>\n\n<p>Additional layout specific configuration properties may also be\nspecified. For complete details regarding the valid config options for\neach layout type, see the layout class corresponding to the <code>type</code>\nspecified.</p></li>\n</ul>\n\n\n<h2>Specify as a String</h2>\n\n<p>Example usage:</p>\n\n<pre><code>layout: 'vbox'\n</code></pre>\n\n<ul>\n<li><p><strong>layout</strong></p>\n\n<p>The layout <code>type</code> to be used for this container (see <a href=\"#!/api/Ext.enums.Layout\" rel=\"Ext.enums.Layout\" class=\"docClass\">Ext.enums.Layout</a>\nfor list of valid values).</p>\n\n<p>Additional layout specific configuration properties. For complete\ndetails regarding the valid config options for each layout type, see the\nlayout class corresponding to the <code>layout</code> specified.</p></li>\n</ul>\n\n\n<h2>Configuring the default layout type</h2>\n\n<p>If a certain Container class has a default layout (For example a\n<a href=\"#!/api/Ext.toolbar.Toolbar\" rel=\"Ext.toolbar.Toolbar\" class=\"docClass\">Toolbar</a> with a default <code>Box</code> layout), then to simply configure\nthe default layout, use an object, but without the <code>type</code> property:</p>\n\n<pre><code>xtype: 'toolbar',\nlayout: {\n    pack: 'center'\n}\n</code></pre>\n","params":null,"return":null,"type":"Ext.enums.Layout/Object","throws":null,"default":"'checkboxgroup'","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":139,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-layout","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"layout","owner":"Ext.container.Container","link":"<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">Ext.container.Container.layout</a>"}],"short_doc":"Important: In order for child items to be correctly sized and\npositioned, typically a layout manager must be specifie...","html_type":"<a href=\"#!/api/Ext.enums.Layout\" rel=\"Ext.enums.Layout\" class=\"docClass\">Ext.enums.Layout</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"liquidLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1693}],"doc":"<p>Components that achieve their internal layout results using solely CSS with no JS\nintervention must set this to true.  This allows the component to opt out of the\nlayout run when used inside certain container layouts such as <a href=\"#!/api/Ext.layout.container.Form\" rel=\"Ext.layout.container.Form\" class=\"docClass\">Form</a> and <a href=\"#!/api/Ext.layout.container.Auto\" rel=\"Ext.layout.container.Auto\" class=\"docClass\">Auto</a>\nresulting in a performance gain. The following components currently use liquid\nlayout (<code>liquidLayout: true</code>):</p>\n\n<ul>\n<li>All Form Fields (subclasses of <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>)</li>\n<li><a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a></li>\n</ul>\n\n\n<p>It is important to keep in mind that components using liquidLayout do not fire\nthe following events:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext.Component-event-resize\" rel=\"Ext.Component-event-resize\" class=\"docClass\">resize</a></li>\n<li><a href=\"#!/api/Ext.Component-event-boxready\" rel=\"Ext.Component-event-boxready\" class=\"docClass\">boxready</a></li>\n</ul>\n\n\n<p>In addition, liquidLayout components do not call the following template methods:</p>\n\n<ul>\n<li>method!afterComponentLayout</li>\n<li>method!onBoxReady</li>\n<li>method!onResize</li>\n</ul>\n\n\n<p>Any component that needs to fire these events or to have these methods called during\nits life cycle needs to set <code>liquidLayout</code> to <code>false</code>.  The following example\ndemonstrates how to enable the resize event for a\n<a href=\"#!/api/Ext.form.field.TextArea\" rel=\"Ext.form.field.TextArea\" class=\"docClass\">TextArea Field</a>:</p>\n\n<pre class='inline-example '><code>var win = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n        xtype: 'window',\n        title: 'Resize This Window!',\n        height: 100,\n        width: 200,\n        layout: 'anchor',\n        items: [{\n            xtype: 'textarea',\n            anchor: '0 0',\n            liquidLayout: false // allows the textarea to fire \"resize\"\n        }]\n    }),\n    textfield = win.items.getAt(0);\n\nwin.show();\n\ntextfield.on('resize', function(textfield, width, height) {\n    <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Text Field Resized', 'width: ' + width + ', height: ' + height);\n});\n</code></pre>\n\n<p>Use caution when setting <code>liquidLayout</code> to <code>false</code> as it carries a performance penalty\nsince it means the layout system must perform expensive DOM reads to determine the\nComponent's size.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-liquidLayout","owner":"Ext.Component","overrides":null,"short_doc":"Components that achieve their internal layout results using solely CSS with no JS\nintervention must set this to true. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":289}],"doc":"<p>A config object containing one or more event handlers to be added to this object during\ninitialization. This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\",\n\"mouseover\" etc), this is usually only done when extra value can be added. For example\nthe <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>\nevent passing the node clicked on. To access DOM events directly from a child element\nof a Component, we need to specify the <code>element</code> option to identify the Component\nproperty to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"A config object containing one or more event handlers to be added to this object during\ninitialization. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"liveDrag","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/ComponentDragger.js","linenr":39}],"doc":"<p>True to drag the component itself.  Else a lightweight version of the component\nwill be shown (<em>using the component's ghost() method</em>).</p>\n\n<p><strong>Note:</strong> This config is only relevant when used with dragging implemented via\n<a href=\"#!/api/Ext.util.ComponentDragger\" rel=\"Ext.util.ComponentDragger\" class=\"docClass\">Ext.util.ComponentDragger</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-liveDrag","owner":"Ext.Component","overrides":null,"short_doc":"True to drag the component itself. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"loader","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":985}],"doc":"<p>A configuration object or an instance of a <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a> to load remote content\nfor this Component.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    loader: {\n        url: 'content.html',\n        autoLoad: true\n    },\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n</code></pre>\n","params":null,"return":null,"type":"Ext.ComponentLoader/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-loader","owner":"Ext.Component","overrides":null,"short_doc":"A configuration object or an instance of a Ext.ComponentLoader to load remote content\nfor this Component. ...","html_type":"<a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"margin","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":999}],"doc":"<p>Specifies the margin for this component. The margin can be a single numeric value to apply\nto all sides or it can be a CSS style specification for each style,\nfor example: '10 5 3 10' (top, right, bottom, left).</p>\n","params":null,"return":null,"type":"Number/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-margin","owner":"Ext.Component","overrides":null,"short_doc":"Specifies the margin for this component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"maskDefaults","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1022}],"doc":"<p>Default LoadMask configuration for <a href=\"#!/api/Ext.Component-method-setLoading\" rel=\"Ext.Component-method-setLoading\" class=\"docClass\">setLoading</a>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-maskDefaults","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"maskElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1006}],"doc":"<p>Related to the <a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">childEls</a> configuration which specifies named properties\nwhich correspond to component sub-elements.</p>\n\n<p>The name of the element property in this component to mask when masked by a LoadMask.</p>\n\n<p>Defaults to <code>null</code> to indicate that Components cannot by default contain a LoadMask,\nand that any LoadMask should be rendered into the document body.</p>\n\n<p>For example, Panels use <code>\"el\"</code> to indicate that the whole panel should be masked.\nThis could be configured to be <code>\"body\"</code> so that only the body is masked and toolbars\nand the header are still mouse-accessible.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-maskElement","owner":"Ext.Component","overrides":null,"short_doc":"Related to the childEls configuration which specifies named properties\nwhich correspond to component sub-elements. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"maxHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":368}],"doc":"<p>The maximum value in pixels which this Component will set its height to.</p>\n\n<p><strong>Warning:</strong> This will override any size management applied by layout managers.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-maxHeight","owner":"Ext.Component","overrides":null,"short_doc":"The maximum value in pixels which this Component will set its height to. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"maxWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":376}],"doc":"<p>The maximum value in pixels which this Component will set its width to.</p>\n\n<p><strong>Warning:</strong> This will override any size management applied by layout managers.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-maxWidth","owner":"Ext.Component","overrides":null,"short_doc":"The maximum value in pixels which this Component will set its width to. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"minHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":384}],"doc":"<p>The minimum value in pixels which this Component will set its height to.</p>\n\n<p><strong>Warning:</strong> This will override any size management applied by layout managers.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-minHeight","owner":"Ext.Component","overrides":null,"short_doc":"The minimum value in pixels which this Component will set its height to. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"minWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":392}],"doc":"<p>The minimum value in pixels which this Component will set its width to.</p>\n\n<p><strong>Warning:</strong> This will override any size management applied by layout managers.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-minWidth","owner":"Ext.Component","overrides":null,"short_doc":"The minimum value in pixels which this Component will set its width to. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"modal","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":16}],"doc":"<p>True to make the floated component modal and mask everything behind it when displayed,\nfalse to display it without restricting access to other UI elements.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-modal","owner":"Ext.util.Floating","overrides":null,"short_doc":"True to make the floated component modal and mask everything behind it when displayed,\nfalse to display it without re...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"modelValidation","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":329}],"doc":"<p>This config enables binding to your <code><a href=\"#!/api/Ext.data.Model-cfg-validators\" rel=\"Ext.data.Model-cfg-validators\" class=\"docClass\">Ext.data.Model.validators</a></code>. This\nis only processed by form fields (e.g., <code><a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a></code>) at present, but\nthis setting is inherited and so can be set on a parent container.</p>\n\n<p>When set to <code>true</code> by a component or not set by a component but inherited from\nan ancestor container, <code><a href=\"#!/api/Ext.data.Validation\" rel=\"Ext.data.Validation\" class=\"docClass\">Ext.data.Validation</a></code> records are used to automatically\nbind validation results for any form field to which a <code>value</code> is bound.</p>\n\n<p>While this config can be set arbitrarily high in the component hierarchy, doing\nso can create a lot overhead if most of your form fields do not actually rely on\n<code>validators</code> in your data model.</p>\n\n<p>Using this setting for a form that is bound to an <code><a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a></code> might look\nlike this:</p>\n\n<pre><code> {\n     xtype: 'panel',\n     modelValidation: true,\n     items: [{\n         xtype: 'textfield',\n         bind: '{theUser.firstName}'\n     },{\n         xtype: 'textfield',\n         bind: '{theUser.lastName}'\n     },{\n         xtype: 'textfield',\n         bind: '{theUser.phoneNumber}'\n     },{\n         xtype: 'textfield',\n         bind: '{theUser.email}'\n     }]\n }\n</code></pre>\n\n<p>Notice that \"validation\" is a pseudo-association defined for all entities. See\n<code><a href=\"#!/api/Ext.data.Model-method-getValidation\" rel=\"Ext.data.Model-method-getValidation\" class=\"docClass\">Ext.data.Model.getValidation</a></code> for further details.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-modelValidation","owner":"Ext.Component","overrides":null,"short_doc":"This config enables binding to your Ext.data.Model.validators. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"msgTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":339}],"doc":"<p>The location where the error message text should display. Must be one of the following\nvalues:</p>\n\n<ul>\n<li><p><code>qtip</code> Display a quick tip containing the message when the user hovers over the field.\nThis is the default.</p>\n\n<p><strong><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a> must have been called for this setting to work.</strong></p></li>\n<li><p><code>title</code> Display the message in a default browser title attribute popup.</p></li>\n<li><code>under</code> Add a block div beneath the field containing the error message.</li>\n<li><code>side</code> Add an error icon to the right of the field, displaying the message in a popup\non hover.</li>\n<li><code>none</code> Don't display any error message. This might be useful if you are implementing\ncustom error display.</li>\n<li><code>[element id]</code> Add the error message directly to the innerHTML of the specified element.</li>\n</ul>\n\n","params":null,"return":null,"type":"String","throws":null,"default":"'qtip'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-msgTarget","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The location where the error message text should display. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"name","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":71}],"doc":"<p>The value of the <code>name</code> attribute of the input elements\nbelonging to this Group. If not set, Group's <code>id</code> will be used.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-name","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"name","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-cfg-name\" rel=\"Ext.form.field.Field-cfg-name\" class=\"docClass\">Ext.form.field.Field.name</a>"}],"short_doc":"The value of the name attribute of the input elements\nbelonging to this Group. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"nameHolder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":18}],"doc":"<p>When <code>true</code> child components are tracked by their <code>name</code> property and can be\nretrieved using the <code>lookupName</code> method.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-nameHolder","owner":"Ext.mixin.Container","overrides":null,"short_doc":"When true child components are tracked by their name property and can be\nretrieved using the lookupName method. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"nameable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":290}],"doc":"<p>Set to <code>true</code> for this component's <code>name</code> property to be tracked by its containing\n<code>nameHolder</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-nameable","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Set to true for this component's name property to be tracked by its containing\nnameHolder. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"overCls","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1026}],"doc":"<p>An optional extra CSS class that will be added to this component's Element when the mouse\nmoves over the Element, and removed when the mouse moves out. This can be useful for adding\ncustomized 'active' or 'hover' styles to the component or any of its children using standard\nCSS rules.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"''","properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-overCls","owner":"Ext.Component","overrides":null,"short_doc":"An optional extra CSS class that will be added to this component's Element when the mouse\nmoves over the Element, and...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"overflowX","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1036}],"doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>'auto'</code> to enable automatic horizontal scrollbar (Style overflow-x: 'auto').</li>\n<li><code>'scroll'</code> to always enable horizontal scrollbar (Style overflow-x: 'scroll').</li>\n</ul>\n\n\n<p>The default is overflow-x: 'hidden'. This should not be combined with <a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> instead</p>\n","version":"5.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-overflowX","owner":"Ext.Component","overrides":null,"short_doc":"Possible values are:\n\n\n'auto' to enable automatic horizontal scrollbar (Style overflow-x: 'auto'). ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"overflowY","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1047}],"doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>'auto'</code> to enable automatic vertical scrollbar (Style overflow-y: 'auto').</li>\n<li><code>'scroll'</code> to always enable vertical scrollbar (Style overflow-y: 'scroll').</li>\n</ul>\n\n\n<p>The default is overflow-y: 'hidden'. This should not be combined with <a href=\"#!/api/Ext.Component-cfg-autoScroll\" rel=\"Ext.Component-cfg-autoScroll\" class=\"docClass\">autoScroll</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> instead</p>\n","version":"5.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-overflowY","owner":"Ext.Component","overrides":null,"short_doc":"Possible values are:\n\n\n'auto' to enable automatic vertical scrollbar (Style overflow-y: 'auto'). ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"padding","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1058}],"doc":"<p>Specifies the padding for this component. The padding can be a single numeric value to apply\nto all sides or it can be a CSS style specification for each style,\nfor example: '10 5 3 10' (top, right, bottom, left).</p>\n","params":null,"return":null,"type":"Number/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-padding","owner":"Ext.Component","overrides":null,"short_doc":"Specifies the padding for this component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"plugins","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1065}],"doc":"<p>This config describes one or more plugin config objects used to create plugin\ninstances for this component.</p>\n\n<p>Plugins are a way to bundle and reuse custom functionality. Plugins should extend\n<code><a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a></code> but technically the only requirement for a valid plugin\nis that it contain an <code>init</code> method that accepts a reference to its owner. Once\na plugin is created, the owner will call the <code>init</code> method, passing a reference\nto itself. Each plugin can then call methods or respond to events on its owner\nas needed to provide its functionality.</p>\n\n<p>This config's value can take several different forms.</p>\n\n<p>The value can be a single string with the plugin's <a href=\"#!/api/Ext.enums.Plugin\" rel=\"Ext.enums.Plugin\" class=\"docClass\">alias</a>:</p>\n\n<pre><code>plugins: 'cellediting',\n</code></pre>\n\n<p>The preferred form for multiple plugins or to configure plugins is the keyed-object\nform (new in version 6.5):</p>\n\n<pre><code> plugins: {\n     gridviewdragdrop: true,\n     cellediting: {\n         clicksToEdit: 1\n     }\n },\n</code></pre>\n\n<p>The keys are <code>id</code>'s as well as the default type alias.</p>\n\n<p>The <code>plugins</code> config can also be an array of plugin aliases:</p>\n\n<pre><code>plugins: [ 'cellediting', 'gridviewdragdrop' ],\n</code></pre>\n\n<p>An array can also contain elements that are config objects with a <code>ptype</code> property\nholding the type alias:</p>\n\n<pre><code> plugins: ['gridviewdragdrop', {\n     ptype: 'cellediting',\n     clicksToEdit: 1\n }],\n</code></pre>\n","params":null,"return":null,"type":"Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-plugins","owner":"Ext.Component","overrides":null,"short_doc":"This config describes one or more plugin config objects used to create plugin\ninstances for this component. ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Ext.enums.Plugin\" rel=\"Ext.enums.Plugin\" class=\"docClass\">Ext.enums.Plugin</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},{"tagname":"cfg","name":"preventMark","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":326}],"doc":"<p>true to disable displaying any <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">error message</a> set on this object.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-preventMark","owner":"Ext.form.Labelable","overrides":null,"short_doc":"true to disable displaying any error message set on this object. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"publishes","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":427}],"doc":"<p>One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.</p>\n\n<p><strong>Note:</strong> We'll discuss publishing properties <strong>not</strong> found in the config block below.</p>\n\n<p>Values determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.</p>\n\n<p>This config uses the <code>reference</code> to determine the name of the data\nobject to place in the <code>ViewModel</code>. If <code>reference</code> is not set then this config\nis ignored.</p>\n\n<p>By using this config and <code>reference</code> you can bind configs between\ncomponents. For example:</p>\n\n<pre><code> ...\n     items: [{\n         xtype: 'textfield',\n         reference: 'somefield',  // component's name in the ViewModel\n         publishes: 'value' // value is not published by default\n     },{\n         ...\n     },{\n         xtype: 'displayfield',\n         bind: 'You have entered \"{somefield.value}\"'\n     }]\n ...\n</code></pre>\n\n<p>Classes must provide this config as an Object:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.foo.Bar', {\n     publishes: {\n         foo: true,\n         bar: true\n     }\n });\n</code></pre>\n\n<p>This is required for the config system to properly merge values from derived\nclasses.</p>\n\n<p>For instances this value can be specified as a value as show above or an array\nor object as follows:</p>\n\n<pre><code> {\n     xtype: 'textfield',\n     reference: 'somefield',\n     publishes: [\n         'value',\n         'rawValue',\n         'dirty'\n     ]\n }\n\n // This achieves the same result as the above array form.\n {\n     xtype: 'textfield',\n     reference: 'somefield',\n     publishes: {\n         value: true,\n         rawValue: true,\n         dirty: true\n     }\n }\n</code></pre>\n\n<p>In some cases, users may want to publish a property to the viewModel that is not found\nin a class  config block. In these situations, you may utilize publishState\nif the property has a  setter method. Let's use\n<a href=\"#!/api/Ext.form.Labelable-method-setFieldLabel\" rel=\"Ext.form.Labelable-method-setFieldLabel\" class=\"docClass\">setFieldLabel</a> as an example:</p>\n\n<pre><code>  setFieldLabel: function(fieldLabel) {\n      this.callParent(arguments);\n      this.publishState('fieldLabel', fieldLabel);\n  }        \n</code></pre>\n\n<p>With the above chunk of code, fieldLabel may now be published to the viewModel.</p>\n","params":null,"return":null,"type":"String/String[]/Object","throws":null,"default":"'value'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-publishes","owner":"Ext.form.field.Field","overrides":[{"name":"publishes","owner":"Ext.mixin.Bindable","link":"<a href=\"#!/api/Ext.mixin.Bindable-cfg-publishes\" rel=\"Ext.mixin.Bindable-cfg-publishes\" class=\"docClass\">Ext.mixin.Bindable.publishes</a>"}],"short_doc":"One or more names of config properties that this component should publish\nto its ViewModel. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"reference","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":304}],"doc":"<p>Specifies a name for this component inside its component hierarchy. This name\nmust be unique within its <a href=\"#!/api/Ext.container.Container-cfg-referenceHolder\" rel=\"Ext.container.Container-cfg-referenceHolder\" class=\"docClass\">view</a>\nor its <a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">ViewController</a>. See the documentation in\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> for more information about references.</p>\n\n<p><strong>Note</strong>: Valid identifiers start with a letter or underscore and are followed\nby zero or more additional letters, underscores or digits. References are case\nsensitive.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-reference","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Specifies a name for this component inside its component hierarchy. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"referenceHolder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":25}],"doc":"<p>If <code>true</code>, this container will be marked as being a point in the hierarchy where\nreferences to items with a specified <code>reference</code> config will be held. The container\nwill automatically become a referenceHolder if a controller is specified.</p>\n\n<p>See the introductory docs for <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> for more information\nabout references &amp; reference holders.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-referenceHolder","owner":"Ext.mixin.Container","overrides":null,"short_doc":"If true, this container will be marked as being a point in the hierarchy where\nreferences to items with a specified r...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"region","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1110}],"doc":"<p>Defines the region inside <a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">border layout</a>.</p>\n\n<p>Possible values:</p>\n\n<ul>\n<li>north - Positions component at top.</li>\n<li>south - Positions component at bottom.</li>\n<li>east - Positions component at right.</li>\n<li>west - Positions component at left.</li>\n<li>center - Positions component at the remaining space.\nThere <strong>must</strong> be a component with <code>region: \"center\"</code> in every border layout.</li>\n</ul>\n\n","params":null,"return":null,"type":"\"north\"/\"south\"/\"east\"/\"west\"/\"center\"","throws":null,"default":"undefined","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-region","owner":"Ext.Component","overrides":null,"short_doc":"Defines the region inside border layout. ...","html_type":"\"north\"/\"south\"/\"east\"/\"west\"/\"center\""},{"tagname":"cfg","name":"renderConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":421}],"doc":"<p>renderConfig wraps configs that do not get applied until after the component is\nrendered. Unlike normal config system properties, renderConfigs use a special\nsetter method to store values on the instance instead of running the apply and\nupdate methods if it is called before the component is rendered. Then, after the\ncomponent has been rendered, these values are processed by the normal apply and\nupdate method for the config.</p>\n\n<p>This means that calling the get method for the config prior to render will return\nwhatever raw value has been set, while calling the getter after render will return\nthe value after processing by the config's apply method. If this distinction needs\nto be made, it is the caller's responsibility to check for the rendered state and\nhandle such intermediate config values.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{touchAction: null}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderConfig","owner":"Ext.Component","overrides":null,"short_doc":"renderConfig wraps configs that do not get applied until after the component is\nrendered. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"renderData","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1124}],"doc":"<p>The data used by <a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">renderTpl</a> in addition to the following property values\nof the component:</p>\n\n<ul>\n<li>id</li>\n<li>ui</li>\n<li>uiCls</li>\n<li>baseCls</li>\n<li>componentCls</li>\n<li>frame</li>\n</ul>\n\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-renderSelectors\" rel=\"Ext.Component-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> and <a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">childEls</a> for usage examples.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderData","owner":"Ext.Component","overrides":null,"short_doc":"The data used by renderTpl in addition to the following property values\nof the component:\n\n\nid\nui\nuiCls\nbaseCls\ncompo...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"renderSelectors","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1140}],"doc":"<p>An object containing properties specifying CSS selectors which identify child elements\ncreated by the render process.</p>\n\n<p>After the Component's internal structure is rendered according to the <a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">renderTpl</a>,\nthis object is iterated through, and the found Elements are added as properties\nto the Component using the <code>renderSelector</code> property name.</p>\n\n<p>For example, a Component which renders a title and description into its element:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n     renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n     renderTpl: [\n         '&lt;h1 class=\"title\"&gt;{title}&lt;/h1&gt;',\n         '&lt;p&gt;{desc}&lt;/p&gt;'\n     ],\n     renderData: {\n         title: \"Error\",\n         desc: \"Something went wrong\"\n     },\n     renderSelectors: {\n         titleEl: 'h1.title',\n         descEl: 'p'\n     },\n     listeners: {\n         afterrender: function(cmp){\n             // After rendering the component will have a titleEl and descEl properties\n             cmp.titleEl.setStyle({color: \"red\"});\n         }\n     }\n });\n</code></pre>\n\n<p>The use of <code>renderSelectors</code> is deprecated (for performance reasons). The above\ncode should be refactored into something like this:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n     renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n     renderTpl: [\n         '&lt;h1 class=\"title\" id=\"{id}-titleEl\" data-ref=\"titleEl\"&gt;{title}&lt;/h1&gt;',\n         '&lt;p id=\"{id}-descEl\" data-ref=\"descEl\"&gt;{desc}&lt;/p&gt;'\n     ],\n     renderData: {\n         title: \"Error\",\n         desc: \"Something went wrong\"\n     },\n     childEls: [\n         'titleEl',\n         'descEl'\n     ]\n });\n</code></pre>\n\n<p>To use <code>childEls</code> yet retain the use of selectors (which remains as expensive as\n<code>renderSelectors</code>):</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n     renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n     renderTpl: [\n         '&lt;h1 class=\"title\"&gt;{title}&lt;/h1&gt;',\n         '&lt;p&gt;{desc}&lt;/p&gt;'\n     ],\n     renderData: {\n         title: \"Error\",\n         desc: \"Something went wrong\"\n     },\n     childEls: {\n         titleEl: { selectNode: 'h1.title' },\n         descEl: { selectNode: 'p' }\n     }\n });\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">childEls</a> instead.</p>\n","version":"5.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderSelectors","owner":"Ext.Component","overrides":null,"short_doc":"An object containing properties specifying CSS selectors which identify child elements\ncreated by the render process. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"renderTo","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1214}],"doc":"<p>Specify the <code>id</code> of the element, a DOM element or an existing Element that this component\nwill be rendered into.</p>\n\n<p><strong>Notes:</strong></p>\n\n<p>Do <em>not</em> use this option if the Component is to be a child item of a\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a>. It is the responsibility of the\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a>'s\n<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout manager</a> to render and manage its child items.</p>\n\n<p>When using this config, a call to <code>render()</code> is not required.</p>\n\n<p>See also: <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">render</a>.</p>\n","params":null,"return":null,"type":"String/HTMLElement/Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderTo","owner":"Ext.Component","overrides":null,"short_doc":"Specify the id of the element, a DOM element or an existing Element that this component\nwill be rendered into. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"cfg","name":"renderTpl","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":445}],"doc":"<p>An <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">XTemplate</a> used to create the internal structure inside\nthis Component's encapsulating <a href=\"#!/api/Ext.container.Container-method-getEl\" rel=\"Ext.container.Container-method-getEl\" class=\"docClass\">Element</a>.</p>\n\n<p>You do not normally need to specify this. For the base classes <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> and\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>, this defaults to <strong><code>null</code></strong> which means that they will be\ninitially rendered with no internal structure; they render their <a href=\"#!/api/Ext.container.Container-method-getEl\" rel=\"Ext.container.Container-method-getEl\" class=\"docClass\">Element</a>\nempty. The more specialized classes with complex DOM structures provide their own template\ndefinitions.</p>\n\n<p>This is intended to allow the developer to create application-specific utility Components\nwith customized internal structure.</p>\n\n<p>Upon rendering, any created child elements may be automatically imported into object\nproperties using the <a href=\"#!/api/Ext.container.Container-cfg-renderSelectors\" rel=\"Ext.container.Container-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> and <a href=\"#!/api/Ext.container.Container-cfg-childEls\" rel=\"Ext.container.Container-cfg-childEls\" class=\"docClass\">childEls</a> options.</p>\n","params":null,"return":null,"type":"Ext.XTemplate/String/String[]","throws":null,"default":"'<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'before\\'); %}</tpl>' + '{% this.renderContainer(out,values) %}' + '<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'after\\'); %}</tpl>'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-renderTpl","owner":"Ext.container.Container","overrides":[{"name":"renderTpl","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">Ext.Component.renderTpl</a>"}],"short_doc":"An XTemplate used to create the internal structure inside\nthis Component's encapsulating Element. ...","html_type":"<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"resetFocusPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":29}],"doc":"<p>When <code>true</code>, FocusableContainer\nwill reset last focused position whenever focus leaves the container.\nSubsequent tabbing into the container will always focus the first eligible\nchild item.</p>\n\n<p>When <code>false</code>, subsequent tabbing into the container will focus the child\nitem that was last focused before.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-resetFocusPosition","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"When true, FocusableContainer\nwill reset last focused position whenever focus leaves the container. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"resizable","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1253}],"doc":"<p>Specify as <code>true</code> to apply a <a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Resizer</a> to this Component\nafter rendering.</p>\n\n<p>May also be specified as a config object to be passed to the constructor of\n<a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Resizer</a> to override any defaults. By default the Component\npasses its minimum and maximum size, and uses <code><a href=\"#!/api/Ext.resizer.Resizer-cfg-dynamic\" rel=\"Ext.resizer.Resizer-cfg-dynamic\" class=\"docClass\">Ext.resizer.Resizer.dynamic</a>: false</code></p>\n","params":null,"return":null,"type":"Boolean/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-resizable","owner":"Ext.Component","overrides":null,"short_doc":"Specify as true to apply a Resizer to this Component\nafter rendering. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"resizeHandles","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1263}],"doc":"<p>A valid <a href=\"#!/api/Ext.resizer.Resizer\" rel=\"Ext.resizer.Resizer\" class=\"docClass\">Ext.resizer.Resizer</a> handles config string. Only applies when\nresizable = true.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'all'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-resizeHandles","owner":"Ext.Component","overrides":null,"short_doc":"A valid Ext.resizer.Resizer handles config string. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"rtl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":7}],"doc":"<p>True to layout this component and its descendants in \"rtl\" (right-to-left) mode.\nCan be explicitly set to false to override a true value inherited from an ancestor.</p>\n\n<p><strong>Defined in override Ext.rtl.Component.</strong></p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-rtl","owner":"Ext.Component","overrides":null,"short_doc":"True to layout this component and its descendants in \"rtl\" (right-to-left) mode. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"saveDelay","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":111}],"doc":"<p>A buffer to be applied if many state events are fired within a short period.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"100","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-saveDelay","owner":"Ext.state.Stateful","overrides":null,"short_doc":"A buffer to be applied if many state events are fired within a short period. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"scrollable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":400}],"doc":"<p>Configuration options to make this Component scrollable. Acceptable values are:</p>\n\n<ul>\n<li><code>true</code> to enable auto scrolling.</li>\n<li><code>false</code> (or <code>null</code>) to disable scrolling - this is the default.</li>\n<li><code>x</code> or <code>horizontal</code> to enable horizontal scrolling only</li>\n<li><code>y</code> or <code>vertical</code> to enable vertical scrolling only</li>\n</ul>\n\n\n<p>Also accepts a configuration object for a <code><a href=\"#!/api/Ext.scroll.Scroller\" rel=\"Ext.scroll.Scroller\" class=\"docClass\">Ext.scroll.Scroller</a></code> if\nif advanced configuration is needed.</p>\n\n<p>The getter for this config returns the <a href=\"#!/api/Ext.scroll.Scroller\" rel=\"Ext.scroll.Scroller\" class=\"docClass\">Scroller</a>\ninstance.  You can use the Scroller API to read or manipulate the scroll position:</p>\n\n<pre><code>// scrolls the component to 5 on the x axis and 10 on the y axis\ncomponent.getScrollable().scrollTo(5, 10);\n</code></pre>\n","params":null,"return":null,"type":"Boolean/String/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-scrollable","owner":"Ext.Component","overrides":null,"short_doc":"Configuration options to make this Component scrollable. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"session","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"doc":"<p>If provided this creates a new <code>Session</code> instance for this component. If this\nis a <code>Container</code>, this will then be inherited by all child components.</p>\n\n<p>To create a new session you can specify <code>true</code>:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'viewport',\n     session: true,\n\n     items: [{\n         ...\n     }]\n });\n</code></pre>\n\n<p>Alternatively, a config object can be provided:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n     xtype: 'viewport',\n     session: {\n         ...\n     },\n\n     items: [{\n         ...\n     }]\n });\n</code></pre>\n","params":null,"return":null,"type":"Boolean/Object/Ext.data.Session","throws":null,"default":"null","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-session","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"If provided this creates a new Session instance for this component. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},{"tagname":"cfg","name":"shadow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":22}],"doc":"<p>Specifies whether the floating component should be given a shadow. Set to true\nto automatically create an <a href=\"#!/api/Ext.dom.Shadow\" rel=\"Ext.dom.Shadow\" class=\"docClass\">Ext.Shadow</a>, or a string indicating the shadow's display\n<a href=\"#!/api/Ext.dom.Shadow-cfg-mode\" rel=\"Ext.dom.Shadow-cfg-mode\" class=\"docClass\">Ext.Shadow.mode</a>. Set to false to disable the shadow.</p>\n","params":null,"return":null,"type":"String/Boolean","throws":null,"default":"'sides'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-shadow","owner":"Ext.util.Floating","overrides":null,"short_doc":"Specifies whether the floating component should be given a shadow. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"shadowOffset","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":63}],"doc":"<p>Number of pixels to offset the shadow.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-shadowOffset","owner":"Ext.util.Floating","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"shareableName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":297}],"doc":"<p>Set to <code>true</code> to allow this component's <code>name</code> to be shared by other items in the\nsame <code>nameHolder</code>. Such items will be returned in an array from <code>lookupName</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-shareableName","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Set to true to allow this component's name to be shared by other items in the\nsame nameHolder. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"shim","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":68}],"doc":"<p><code>true</code> to enable an iframe shim for this Component to keep\nwindowed objects from showing through.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-shim","owner":"Ext.util.Floating","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"shrinkWrap","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":110}],"doc":"<p>The possible values for shrinkWrap are:</p>\n\n<ul>\n<li>0 (or <code>false</code>): Neither width nor height depend on content.</li>\n<li>1: Width depends on content (shrink wraps), but height does not.</li>\n<li>2: Height depends on content (shrink wraps), but width does not.</li>\n<li>3 (or <code>true</code>): Both width and height depend on content (shrink wrap).</li>\n</ul>\n\n\n<p>In CSS terms, shrink-wrap width is analogous to an inline-block element as opposed\nto a block-level element.</p>\n","params":null,"return":null,"type":"Boolean/Number","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":110,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-shrinkWrap","owner":"Ext.form.FieldContainer","overrides":[{"name":"shrinkWrap","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-cfg-shrinkWrap\" rel=\"Ext.Component-cfg-shrinkWrap\" class=\"docClass\">Ext.Component.shrinkWrap</a>"}],"short_doc":"The possible values for shrinkWrap are:\n\n\n0 (or false): Neither width nor height depend on content. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"stateEvents","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1302}],"doc":"<p>An array of events that, when fired, should trigger this object to\nsave its state. <code>stateEvents</code> defaults to the <code>stateEvents</code> associated with the\ncomponent you are using.  Any events you statically set will be appended to that list.\n<code>stateEvents</code> may be any type of event supported by this object, including\nbrowser or custom events (e.g., <code>['click', 'customerchange']</code>).</p>\n\n<p>See <code><a href=\"#!/api/Ext.Component-cfg-stateful\" rel=\"Ext.Component-cfg-stateful\" class=\"docClass\">stateful</a></code> for an explanation of saving and\nrestoring object state.</p>\n","params":null,"return":null,"type":"String[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-stateEvents","owner":"Ext.Component","overrides":[{"name":"stateEvents","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">Ext.state.Stateful.stateEvents</a>"}],"short_doc":"An array of events that, when fired, should trigger this object to\nsave its state. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"stateId","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":92}],"doc":"<p>The unique id for this object to use for state management purposes.</p>\n\n<p>See <a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a> for an explanation of saving and restoring state.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-stateId","owner":"Ext.state.Stateful","overrides":null,"short_doc":"The unique id for this object to use for state management purposes. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"stateful","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":15}],"doc":"<p>A flag which causes the object to attempt to restore the state of\ninternal properties from a saved state on startup. The object must have\na <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a> for state to be managed.</p>\n\n<p>Auto-generated ids are not guaranteed to be stable across page loads and\ncannot be relied upon to save and restore the same state for a object.</p>\n\n<p>For state saving to work, the state manager's provider must have been\nset to an implementation of <a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a> which overrides the\n<a href=\"#!/api/Ext.state.Provider-method-set\" rel=\"Ext.state.Provider-method-set\" class=\"docClass\">set</a> and <a href=\"#!/api/Ext.state.Provider-method-get\" rel=\"Ext.state.Provider-method-get\" class=\"docClass\">get</a>\nmethods to save and recall name/value pairs. A built-in implementation,\n<a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a> is available.</p>\n\n<p>To set the state provider for the current page:</p>\n\n<pre><code><a href=\"#!/api/Ext.state.Manager-method-setProvider\" rel=\"Ext.state.Manager-method-setProvider\" class=\"docClass\">Ext.state.Manager.setProvider</a>(new <a href=\"#!/api/Ext.state.CookieProvider\" rel=\"Ext.state.CookieProvider\" class=\"docClass\">Ext.state.CookieProvider</a>({\n    expires: new Date(new Date().getTime()+(1000*60*60*24*7)), // 7 days from now\n}));\n</code></pre>\n\n<p>A stateful object attempts to save state when one of the events\nlisted in the <a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a> configuration fires.</p>\n\n<p>To save state, a stateful object first serializes its state by\ncalling <em><a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">getState</a></em>.</p>\n\n<p>The Component base class implements <a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">getState</a> to save its width and\nheight within the state only if they were initially configured, and have\nchanged from the configured value.</p>\n\n<p>The Panel class saves its collapsed state in addition to that.</p>\n\n<p>The Grid class saves its column state and store state (sorters and filters and grouper)\nin addition to its superclass state.</p>\n\n<p>If there is more application state to be save, the developer must provide\nan implementation which first calls the superclass method to inherit the above behaviour,\nand then injects new properties into the returned object.</p>\n\n<p>The value yielded by <code>getState</code> is passed to <a href=\"#!/api/Ext.state.Manager-method-set\" rel=\"Ext.state.Manager-method-set\" class=\"docClass\">Ext.state.Manager.set</a>\nwhich uses the configured <a href=\"#!/api/Ext.state.Provider\" rel=\"Ext.state.Provider\" class=\"docClass\">Ext.state.Provider</a> to save the object\nkeyed by the <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a>.</p>\n\n<p>During construction, a stateful object attempts to <em>restore</em> its state by calling\n<a href=\"#!/api/Ext.state.Manager-method-get\" rel=\"Ext.state.Manager-method-get\" class=\"docClass\">Ext.state.Manager.get</a> passing the <a href=\"#!/api/Ext.state.Stateful-cfg-stateId\" rel=\"Ext.state.Stateful-cfg-stateId\" class=\"docClass\">stateId</a></p>\n\n<p>The resulting object is passed to <a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a>*. The default implementation of\n<a href=\"#!/api/Ext.state.Stateful-method-applyState\" rel=\"Ext.state.Stateful-method-applyState\" class=\"docClass\">applyState</a> simply copies properties into the object, but a developer may\noverride this to support restoration of more complex application state.</p>\n\n<p>You can perform extra processing on state save and restore by attaching\nhandlers to the <a href=\"#!/api/Ext.state.Stateful-event-beforestaterestore\" rel=\"Ext.state.Stateful-event-beforestaterestore\" class=\"docClass\">beforestaterestore</a>, <a href=\"#!/api/Ext.state.Stateful-event-staterestore\" rel=\"Ext.state.Stateful-event-staterestore\" class=\"docClass\">staterestore</a>,\n<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a> and <a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a> events. In some simple cases,\npassing an object for the <code>stateful</code> config may suffice. If an object is\nprovided, the properties of that object are used to include or exclude stateful\nproperties returned by <code>getState</code>. For example:</p>\n\n<pre><code> stateful: {\n     height: false, // never persist the height\n     width: true    // always persist the width\n }\n</code></pre>\n\n<p>The above is roughly equivalent to the following:</p>\n\n<pre><code> getState: function () {\n     var state = this.callParent();\n\n     delete state.height;\n     state.width = this.width;\n\n     return state;\n }\n</code></pre>\n","params":null,"return":null,"type":"Boolean/Object","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-stateful","owner":"Ext.state.Stateful","overrides":null,"short_doc":"A flag which causes the object to attempt to restore the state of\ninternal properties from a saved state on startup. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"style","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1310}],"doc":"<p>A custom style specification to be applied to this component's Element.\nShould be a valid argument to <a href=\"#!/api/Ext.dom.Element-method-applyStyles\" rel=\"Ext.dom.Element-method-applyStyles\" class=\"docClass\">Ext.dom.Element.applyStyles</a>.</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    title: 'Some Title',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    width: 400, height: 300,\n    layout: 'form',\n    items: [{\n        xtype: 'textarea',\n        style: {\n            width: '95%',\n            marginBottom: '10px'\n        }\n    },\n    new <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>({\n        text: 'Send',\n        minWidth: '100',\n        style: {\n            marginBottom: '10px'\n        }\n    })\n    ]\n});\n</code></pre>\n","params":null,"return":null,"type":"String/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-style","owner":"Ext.Component","overrides":null,"short_doc":"A custom style specification to be applied to this component's Element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"submitValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":70}],"doc":"<p>Setting this to false will prevent the field from being\n<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitted</a> even when it is not disabled.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-submitValue","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Setting this to false will prevent the field from being\nsubmitted even when it is not disabled. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"suspendLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":694}],"doc":"<p>If true, suspend calls to updateLayout. Useful when batching multiple adds to a container\nand not passing them as multiple arguments or an array.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-suspendLayout","owner":"Ext.container.Container","overrides":null,"short_doc":"If true, suspend calls to updateLayout. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"tabGuard","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":708}],"doc":"<p>When set to <code>true</code>, two elements are added to the container's element. These are the\n<code><a href=\"#!/api/Ext.container.Container-property-tabGuardBeforeEl\" rel=\"Ext.container.Container-property-tabGuardBeforeEl\" class=\"docClass\">tabGuardBeforeEl</a></code> and <code><a href=\"#!/api/Ext.container.Container-property-tabGuardAfterEl\" rel=\"Ext.container.Container-property-tabGuardAfterEl\" class=\"docClass\">tabGuardAfterEl</a></code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-tabGuard","owner":"Ext.container.Container","overrides":null,"short_doc":"When set to true, two elements are added to the container's element. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"tabIndex","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1578}],"doc":"<p>DOM tabIndex attribute for this component's <a href=\"#!/api/Ext.Component-property-focusEl\" rel=\"Ext.Component-property-focusEl\" class=\"docClass\">focusEl</a>.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-tabIndex","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"toFrontOnShow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1340}],"doc":"<p>True to automatically call <a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">toFront</a> when the <a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a> method is called\non an already visible, floating component.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-toFrontOnShow","owner":"Ext.Component","overrides":null,"short_doc":"True to automatically call toFront when the show method is called\non an already visible, floating component. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"touchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":437}],"doc":"<p>Emulates the behavior of the CSS\n<a href=\"https://www.w3.org/TR/pointerevents/#the-touch-action-css-property\">touch-action</a>\nproperty in a cross-browser compatible manner.</p>\n\n<p>Keys in this object are touch action names, and values are <code>false</code> to disable\na touch action or <code>true</code> to enable it.  Accepted keys are:</p>\n\n<ul>\n<li><code>panX</code></li>\n<li><code>panY</code></li>\n<li><code>pinchZoom</code></li>\n<li><code>doubleTapZoom</code></li>\n</ul>\n\n\n<p>All touch actions are enabled (<code>true</code>) by default, so it is usually only necessary\nto specify which touch actions to disable.  For example, the following disables\nonly horizontal scrolling and pinch-to-zoom on the component's main element:</p>\n\n<pre><code>touchAction: {\n    panX: false,\n    pinchZoom: false\n}\n</code></pre>\n\n<p>Touch actions can be specified on child elements using the child element name,\nfor example:</p>\n\n<pre><code>// disables horizontal scrolling on the main element, and double-tap-zoom\n// on the child element named \"body\"\ntouchAction: {\n    panY: false\n    body: {\n        doubleTapZoom: false\n    }\n}\n</code></pre>\n\n<p>The primary motivation for setting the touch-action of an element is to prevent\nthe browser's default handling of a gesture such as pinch-to-zoom, or\ndrag-to-scroll, so that the application can implement its own handling of that\ngesture on the element.  Suppose, for example, a component has a custom drag\nhandler on its element and wishes to prevent horizontal scrolling of its container\nwhile it is being dragged:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    touchAction: {\n        panX: false\n    },\n    listeners: {\n        drag: function(e) {\n            // implement drag logic\n        }\n    }\n});\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-touchAction","owner":"Ext.Component","overrides":null,"short_doc":"Emulates the behavior of the CSS\ntouch-action\nproperty in a cross-browser compatible manner. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"tpl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1347}],"doc":"<p>An <a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>, <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a> or an array of strings to form\nan <a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>. Used in conjunction with the <code><a href=\"#!/api/Ext.Component-cfg-data\" rel=\"Ext.Component-cfg-data\" class=\"docClass\">data</a></code> and <code><a href=\"#!/api/Ext.Component-cfg-tplWriteMode\" rel=\"Ext.Component-cfg-tplWriteMode\" class=\"docClass\">tplWriteMode</a></code>\nconfigurations.</p>\n","params":null,"return":null,"type":"Ext.XTemplate/Ext.Template/String/String[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-tpl","owner":"Ext.Component","overrides":null,"short_doc":"An Ext.Template, Ext.XTemplate or an array of strings to form\nan Ext.XTemplate. ...","html_type":"<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>/<a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"tplWriteMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1365}],"doc":"<p>The Ext.(X)Template method to use when updating the content area of the Component.\nSee <code><a href=\"#!/api/Ext.XTemplate-method-overwrite\" rel=\"Ext.XTemplate-method-overwrite\" class=\"docClass\">Ext.XTemplate.overwrite</a></code> for information on default mode.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'overwrite'","properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-tplWriteMode","owner":"Ext.Component","overrides":null,"short_doc":"The Ext.(X)Template method to use when updating the content area of the Component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"twoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"doc":"<p>This object holds a map of <code>config</code> properties that will update their binding\nas they are modified. For example, <code>value</code> is a key added by form fields. The\nform of this config is the same as <code>cfg!publishes</code>.</p>\n\n<p>This config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.</p>\n","params":null,"return":null,"type":"String/String[]/Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-twoWayBindable","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"This object holds a map of config properties that will update their binding\nas they are modified. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"ui","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1374}],"doc":"<p>A UI style for a component.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'default'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ui","owner":"Ext.Component","overrides":null,"short_doc":"A UI style for a component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"uiCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1380}],"doc":"<p>An array of of <code>classNames</code> which are currently applied to this component.</p>\n","params":null,"return":null,"type":"String[]","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-uiCls","owner":"Ext.Component","overrides":null,"short_doc":"An array of of classNames which are currently applied to this component. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"userCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1387}],"doc":"<p>One or more CSS classes to add to the component's primary element. This config\nis intended solely for use by the component instantiator (the \"user\"), not by\nderived classes.</p>\n\n<p>For example:</p>\n\n<pre><code> items: [{\n     xtype: 'button',\n     userCls: 'my-button'\n ...\n }]\n</code></pre>\n","params":null,"return":null,"type":"String/String[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-userCls","owner":"Ext.Component","overrides":null,"short_doc":"One or more CSS classes to add to the component's primary element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},{"tagname":"cfg","name":"validateOnChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":77}],"doc":"<p>Specifies whether this field should be validated immediately whenever a change in its value\nis detected. If the validation results in a change in the field's validity, a\n<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a> event will be fired. This allows the field to show feedback\nabout the validity of its contents immediately as the user is typing.</p>\n\n<p>When set to false, feedback will not be immediate. However the form will still be validated\nbefore submitting if the clientValidation option to <a href=\"#!/api/Ext.form.Basic-method-doAction\" rel=\"Ext.form.Basic-method-doAction\" class=\"docClass\">Ext.form.Basic.doAction</a>\nis enabled, or if the field or form are validated manually.</p>\n\n<p>See also <a href=\"#!/api/Ext.form.field.Base-cfg-checkChangeEvents\" rel=\"Ext.form.field.Base-cfg-checkChangeEvents\" class=\"docClass\">Ext.form.field.Base.checkChangeEvents</a> for controlling how changes\nto the field's value are detected.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-validateOnChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Specifies whether this field should be validated immediately whenever a change in its value\nis detected. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"validation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":32}],"doc":"<p>This property, when a <code>String</code>, contributes its value to the error state of this\ninstance as reported by <code>getErrors</code>.</p>\n","params":null,"return":null,"type":"Boolean/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-validation","owner":"Ext.form.field.Field","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"validationField","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":39}],"doc":"<p>When binding is used with a model, this maps to the underlying\n<a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.field.Field</a> if it is available. This can be used to validate the value\nagainst the model field without needing to push the value back into the model.</p>\n","params":null,"return":null,"type":"Ext.data.Field","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-validationField","owner":"Ext.form.field.Field","overrides":null,"short_doc":"When binding is used with a model, this maps to the underlying\nExt.data.field.Field if it is available. ...","html_type":"<a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.Field</a>"},{"tagname":"cfg","name":"value","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":50}],"doc":"<p>A value to initialize this field with.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-value","owner":"Ext.form.field.Field","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"valuePublishEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":93}],"doc":"<p>The event name(s) to use to publish the <a href=\"#!/api/Ext.form.field.Field-cfg-value\" rel=\"Ext.form.field.Field-cfg-value\" class=\"docClass\">value</a>\n<a href=\"#!/api/Ext.form.field.Base-cfg-bind\" rel=\"Ext.form.field.Base-cfg-bind\" class=\"docClass\">Ext.form.field.Base.bind</a> for this field.</p>\n","params":null,"return":null,"type":"String[]/String","throws":null,"default":"'change'","properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-valuePublishEvent","owner":"Ext.form.field.Field","overrides":null,"short_doc":"The event name(s) to use to publish the value\nExt.form.field.Base.bind for this field. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"vertical","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":101}],"doc":"<p>True to distribute contained controls across columns, completely filling each column top\nto bottom before starting on the next column. The number of controls in each column will be\nautomatically calculated to keep columns as even as possible. The default value is false,\nso that controls will be added to columns one at a time, completely filling each row\nleft to right before starting on the next row.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-vertical","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"True to distribute contained controls across columns, completely filling each column top\nto bottom before starting on...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"viewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"doc":"<p>The <code>ViewModel</code> is a data provider for this component and its children. The\ndata contained in the <code>ViewModel</code> is typically used by adding <code>bind</code> configs\nto the components that want present or edit this data.</p>\n\n<p>When set, the <code>ViewModel</code> is created and links to any inherited <code>viewModel</code>\ninstance from an ancestor container as the \"parent\". The <code>ViewModel</code> hierarchy,\nonce established, only supports creation or destruction of children. The\nparent of a <code>ViewModel</code> cannot be changed on the fly.</p>\n\n<p>If this is a root-level <code>ViewModel</code>, the data model connection is made to this\ncomponent's associated <code><a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Data Session</a></code>. This is\ndetermined by calling <code>getInheritedSession</code>.</p>\n","params":null,"return":null,"type":"String/Object/Ext.app.ViewModel","throws":null,"default":"{$value: null, lazy: true}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-viewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"The ViewModel is a data provider for this component and its children. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},{"tagname":"cfg","name":"weight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1404}],"doc":"<p>A value to control how Components are laid out in a\n<a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Border</a> layout or as docked items.</p>\n\n<p>In a Border layout, this can control how the regions (not the center) region lay out\nif the west or east take full height or if the north or south region take full width.\nAlso look at the <a href=\"#!/api/Ext.layout.container.Border-cfg-regionWeights\" rel=\"Ext.layout.container.Border-cfg-regionWeights\" class=\"docClass\">Ext.layout.container.Border.regionWeights</a> on the Border layout.\nAn example to show how you can take control of this is:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Ext.container.Viewport</a>', {\n    layout      : 'border',\n    defaultType : 'panel',\n    items       : [\n        {\n            region : 'north',\n            title  : 'North',\n            height : 100\n        },\n        {\n            region : 'south',\n            title  : 'South',\n            height : 100,\n            weight : -25\n        },\n        {\n            region : 'west',\n            title  : 'West',\n            width  : 200,\n            weight : 15\n        },\n        {\n            region : 'east',\n            title  : 'East',\n            width  : 200\n        },\n        {\n            region : 'center',\n            title  : 'center'\n        }\n    ]\n});\n</code></pre>\n\n<p>If docked items, the weight will order how the items are laid out. Here is an example\nto put a <a href=\"#!/api/Ext.toolbar.Toolbar\" rel=\"Ext.toolbar.Toolbar\" class=\"docClass\">Ext.toolbar.Toolbar</a> above a <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>'s header:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    renderTo    : document.body,\n    width       : 300,\n    height      : 300,\n    title       : 'Panel',\n    html        : 'Panel Body',\n    dockedItems : [\n        {\n            xtype : 'toolbar',\n            items : [\n                {\n                    text : 'Save'\n                }\n            ]\n        },\n        {\n            xtype  : 'toolbar',\n            weight : -10,\n            items  : [\n                {\n                    text : 'Remove'\n                }\n            ]\n        }\n    ]\n});\n</code></pre>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-weight","owner":"Ext.Component","overrides":null,"short_doc":"A value to control how Components are laid out in a\nBorder layout or as docked items. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"width","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1479}],"doc":"<p>The width of this component. A numeric value will be interpreted as the number of\npixels; a string value will be treated as a CSS value with units.</p>\n","params":null,"return":null,"type":"Number|String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-width","owner":"Ext.Component","overrides":null,"short_doc":"The width of this component. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>|<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"xtype","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1485}],"doc":"<p><strong>Note:</strong> Only applies to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> derived classes when used as\na config in <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>.</p>\n\n<p>This property provides a shorter alternative to creating objects than using a full\nclass name. Using <code>xtype</code> is the most common way to define component instances,\nespecially in a container. For example, the items in a form containing text fields\ncould be created explicitly like so:</p>\n\n<pre><code> items: [\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n         fieldLabel: 'Foo'\n     }),\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n         fieldLabel: 'Bar'\n     }),\n     <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Number\" rel=\"Ext.form.field.Number\" class=\"docClass\">Ext.form.field.Number</a>', {\n         fieldLabel: 'Num'\n     })\n ]\n</code></pre>\n\n<p>But by using <code>xtype</code>, the above becomes:</p>\n\n<pre><code> items: [\n     {\n         xtype: 'textfield',\n         fieldLabel: 'Foo'\n     },\n     {\n         xtype: 'textfield',\n         fieldLabel: 'Bar'\n     },\n     {\n         xtype: 'numberfield',\n         fieldLabel: 'Num'\n     }\n ]\n</code></pre>\n\n<p>When the <code>xtype</code> is common to many items, <a href=\"#!/api/Ext.container.Container-cfg-defaultType\" rel=\"Ext.container.Container-cfg-defaultType\" class=\"docClass\">Ext.container.Container.defaultType</a>\nis another way to specify the <code>xtype</code> for all items that don't have an explicit <code>xtype</code>:</p>\n\n<pre><code> defaultType: 'textfield',\n items: [\n     { fieldLabel: 'Foo' },\n     { fieldLabel: 'Bar' },\n     { fieldLabel: 'Num', xtype: 'numberfield' }\n ]\n</code></pre>\n\n<p>Each member of the <code>items</code> array is now just a \"configuration object\". These objects\nare used to create and configure component instances. A configuration object can be\nmanually used to instantiate a component using <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>:</p>\n\n<pre><code> var text1 = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>', {\n     fieldLabel: 'Foo'\n });\n\n // or alternatively:\n\n var text1 = <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>({\n     xtype: 'textfield',\n     fieldLabel: 'Foo'\n });\n</code></pre>\n\n<p>This conversion of configuration objects into instantiated components is done when\na container is created as part of its {Ext.container.AbstractContainer#initComponent}\nprocess. As part of the same process, the <code>items</code> array is converted from its raw\narray form into a <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> instance.</p>\n\n<p>You can define your own <code>xtype</code> on a custom <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">component</a> by specifying\nthe <code>xtype</code> property in <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.PressMeButton', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'pressmebutton',\n    text: 'Press Me'\n});\n</code></pre>\n\n<p>Care should be taken when naming an <code>xtype</code> in a custom component because there is\na single, shared scope for all xtypes. Third part components should consider using\na prefix to avoid collisions.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo.form.CoolButton', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'ux-coolbutton',\n    text: 'Cool!'\n});\n</code></pre>\n\n<p>See <a href=\"#!/api/Ext.enums.Widget\" rel=\"Ext.enums.Widget\" class=\"docClass\">Ext.enums.Widget</a> for list of all available xtypes.</p>\n","params":null,"return":null,"type":"Ext.enums.Widget","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-xtype","owner":"Ext.Component","overrides":null,"short_doc":"Note: Only applies to Ext.Component derived classes when used as\na config in Ext.define. ...","html_type":"<a href=\"#!/api/Ext.enums.Widget\" rel=\"Ext.enums.Widget\" class=\"docClass\">Ext.enums.Widget</a>"},{"tagname":"property","name":"$applyConfigs","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Observable.js","linenr":8}],"doc":"<p>The constructor of <a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a> instances processes the config object by\ncalling <a href=\"#!/api/Ext-method-apply\" rel=\"Ext-method-apply\" class=\"docClass\">Ext.apply</a>(this, config); instead of this.initConfig(config);</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-applyConfigs","owner":"Ext.util.Observable","overrides":null,"short_doc":"The constructor of Ext.util.Observable instances processes the config object by\ncalling Ext.apply(this, config); inst...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1230}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$isFocusableEntity","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":7}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":7,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-isFocusableEntity","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"_applyDefaultsOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":788}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{defaults: true, strict: false}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_applyDefaultsOptions","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"_asLayoutRoot","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6203}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{isRoot: true}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6203,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_asLayoutRoot","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"_fixedLayerCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":143}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'fixed-layer'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":143,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_fixedLayerCls","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"_isLayoutRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1680}],"doc":"<p>Setting this property to <code>true</code> causes the <a href=\"#!/api/Ext.Component-method-isLayoutRoot\" rel=\"Ext.Component-method-isLayoutRoot\" class=\"docClass\">isLayoutRoot</a> method to return\n<code>true</code> and stop the search for the top-most component for a layout.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_isLayoutRoot","owner":"Ext.Component","overrides":null,"short_doc":"Setting this property to true causes the isLayoutRoot method to return\ntrue and stop the search for the top-most comp...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"_layerCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":142}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'layer'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":142,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_layerCls","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"_notAsLayoutRoot","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6204}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{isRoot: false}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6204,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_notAsLayoutRoot","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"_positionTopLeft","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":9}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['position', 'top', 'left']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":9,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_positionTopLeft","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"_renderState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":123}],"doc":"<p>This property holds one of the following values during the render process:</p>\n\n<ul>\n<li><strong>0</strong> - The component is not rendered.</li>\n<li><strong>1</strong> - The component has fired beforerender and is about to call beforeRender.\nThe component has just started rendering.</li>\n<li><strong>2</strong> - The component has finished the <code>beforeRender</code> process and is about to\ncall <code>onRender</code>. This is when <code>rendering</code> is set to <code>true</code>.</li>\n<li><strong>3</strong> - The component has started <code>onRender</code>. This is when <code>rendered</code> is set\nto <code>true</code>.</li>\n<li><strong>4</strong> - The component has finished its afterrender process.</li>\n</ul>\n\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-_renderState","owner":"Ext.util.Renderable","overrides":null,"short_doc":"This property holds one of the following values during the render process:\n\n\n0 - The component is not rendered. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"_scrollableCfg","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1907}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{x: {x: true, y: false}, y: {x: false, y: true}, horizontal: {x: true, y: false}, vertical: {x: false, y: true}, both: {x: true, y: true}, 'true': {x: true, y: true}}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1907,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_scrollableCfg","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"_showContext","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4970}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{show: true}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":4970,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_showContext","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"_visModeMap","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":152}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{visibility: 1, display: 2, offsets: 3}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":152,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_visModeMap","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"allowDomMove","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1593}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-allowDomMove","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"ariaActiveErrorsTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":171}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<tpl if=\"errors && errors.length\">', '<tpl for=\"errors\" between=\". \">{.}</tpl>', '</tpl>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":171,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-ariaActiveErrorsTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"ariaEl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":144}],"doc":"<p>The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element.\nThis property will be replaced with the actual Element reference after rendering.</p>\n\n<p>Most of the simple Components will have their main element as ariaEl.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'containerEl'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":144,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-ariaEl","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"ariaEl","owner":"Ext.mixin.Accessible","link":"<a href=\"#!/api/Ext.mixin.Accessible-property-ariaEl\" rel=\"Ext.mixin.Accessible-property-ariaEl\" class=\"docClass\">Ext.mixin.Accessible.ariaEl</a>"}],"short_doc":"The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"ariaRenderAttributes","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":150}],"doc":"<p>Checkbox and radio groups start as valid</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{'aria-invalid': false}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-ariaRenderAttributes","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"ariaRenderAttributes","owner":"Ext.mixin.Accessible","link":"<a href=\"#!/api/Ext.mixin.Accessible-property-ariaRenderAttributes\" rel=\"Ext.mixin.Accessible-property-ariaRenderAttributes\" class=\"docClass\">Ext.mixin.Accessible.ariaRenderAttributes</a>"}],"short_doc":"Checkbox and radio groups start as valid ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"ariaRole","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":143}],"doc":"<p>ARIA role for this Component, defaults to no role.\nWith no role, no other ARIA attributes are set.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'group'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":143,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-ariaRole","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"ariaRole","owner":"Ext.container.Container","link":"<a href=\"#!/api/Ext.container.Container-property-ariaRole\" rel=\"Ext.container.Container-property-ariaRole\" class=\"docClass\">Ext.container.Container.ariaRole</a>"}],"short_doc":"ARIA role for this Component, defaults to no role. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"ariaStaticRoles","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":145}],"doc":"<p>Some components will have such roles that do not actively participate\nin user interaction, and thus do not need their ARIA attributes updated</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{presentation: true, article: true, definition: true, directory: true, document: true, img: true, heading: true, math: true, note: true, banner: true, complementary: true, contentinfo: true, navigation: true, search: true, 'undefined': true, 'null': true}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-ariaStaticRoles","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Some components will have such roles that do not actively participate\nin user interaction, and thus do not need their...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"autoGenId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1598}],"doc":"<p><code>true</code> indicates an <code>id</code> was auto-generated rather than provided by configuration.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-autoGenId","owner":"Ext.Component","overrides":null,"short_doc":"true indicates an id was auto-generated rather than provided by configuration. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"bodyEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":49}],"doc":"<p>The div Element wrapping the component's contents. Only available after\nthe component has been rendered.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-bodyEl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The div Element wrapping the component's contents. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"borderBoxCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1605}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'border-box'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-borderBoxCls","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Observable.js","linenr":28}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-captureArgs","owner":"Ext.util.Observable","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"clippedCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":14}],"doc":"<p>Hardware acceleration due to the transform:translateZ(0) flickering\nwhen painting clipped elements. This class allows that to be turned off\nwhile elements are in a clipped state.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'clipped'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clippedCls","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Hardware acceleration due to the transform:translateZ(0) flickering\nwhen painting clipped elements. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"componentLayoutCounter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1610}],"doc":"<p>The number of component layout calls made on this object.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-componentLayoutCounter","owner":"Ext.Component","overrides":null,"short_doc":"The number of component layout calls made on this object. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"containsFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":34}],"doc":"<p><code>true</code> if this currently focused element\nis within this Component's or Container's hierarchy. This property is set separately\nfrom <a href=\"#!/api/Ext.mixin.Focusable-property-hasFocus\" rel=\"Ext.mixin.Focusable-property-hasFocus\" class=\"docClass\">hasFocus</a>, and can be <code>true</code> when <code>hasFocus</code> is <code>false</code>.</p>\n\n<p>Examples:</p>\n\n<ul>\n<li><p>Text field with input element focused would be:\n   focusable: true,\n   hasFocus: true,\n   containsFocus: true</p></li>\n<li><p>Date field with drop-down picker currently focused would be:\n   focusable: true,\n   hasFocus: false,\n   containsFocus: true</p></li>\n<li><p>Form Panel with a child input field currently focused would be:\n   focusable: false,\n   hasFocus: false,\n   containsFocus: true</p></li>\n</ul>\n\n\n<p>See also <a href=\"#!/api/Ext.mixin.Focusable-property-hasFocus\" rel=\"Ext.mixin.Focusable-property-hasFocus\" class=\"docClass\">hasFocus</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-containsFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"true if this currently focused element\nis within this Component's or Container's hierarchy. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"contentPaddingProperty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1617}],"doc":"<p>The name of the padding property that is used by the layout to manage\npadding.  See <a href=\"#!/api/Ext.layout.container.Auto-property-managePadding\" rel=\"Ext.layout.container.Auto-property-managePadding\" class=\"docClass\">managePadding</a></p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'padding'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-contentPaddingProperty","owner":"Ext.Component","overrides":null,"short_doc":"The name of the padding property that is used by the layout to manage\npadding. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"defaultBindProperty","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":127}],"doc":"<p>This property is used to determine the property of a <code>bind</code> config that is just\nthe value. For example, if <code>defaultBindProperty=\"value\"</code>, then this shorthand\n<code>bind</code> config:</p>\n\n<pre><code> bind: '{name}'\n</code></pre>\n\n<p>Is equivalent to this object form:</p>\n\n<pre><code> bind: {\n     value: '{name}'\n }\n</code></pre>\n\n<p>The <code>defaultBindProperty</code> is set to \"value\" for form fields and to \"store\" for\ngrids and trees.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"'value'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":127,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-defaultBindProperty","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"defaultBindProperty","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-defaultBindProperty\" rel=\"Ext.Component-property-defaultBindProperty\" class=\"docClass\">Ext.Component.defaultBindProperty</a>"}],"short_doc":"This property is used to determine the property of a bind config that is just\nthe value. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"deferLayouts","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1624}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-deferLayouts","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"deprecated","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":662}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{7: {configs: {enableFocusableContainer: 'focusableContainer'}}}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":662,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-deprecated","owner":"Ext.mixin.FocusableContainer","overrides":[{"name":"deprecated","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-deprecated\" rel=\"Ext.Component-property-deprecated\" class=\"docClass\">Ext.Component.deprecated</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"dirty","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":106}],"doc":"<p>The dirty state of the field.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-dirty","owner":"Ext.form.field.Field","overrides":null,"short_doc":"The dirty state of the field. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"disabledRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":738}],"doc":"<p>http://www.w3.org/TR/html5/disabled-elements.html</p>\n","params":null,"return":null,"type":"RegExp","throws":null,"default":"/^(?:button|input|select|textarea|optgroup|option|fieldset)$/i","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-disabledRe","owner":"Ext.Component","overrides":null,"short_doc":"http://www.w3.org/TR/html5/disabled-elements.html ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"errorEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":56}],"doc":"<p>The div Element that will contain the component's error message(s). Note that\ndepending on the configured <a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">msgTarget</a>, this element may be hidden\nin favor of some other form of presentation, but will always be present in the DOM\nfor use by assistive technologies.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-errorEl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The div Element that will contain the component's error message(s). ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"errorWrapCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":221}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-error-wrap'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":221,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-errorWrapCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"errorWrapSideCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":222}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-error-wrap-side'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":222,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-errorWrapSideCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"errorWrapUnderCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":223}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-error-wrap-under'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":223,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-errorWrapUnderCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"errorWrapUnderSideLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":224}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-error-wrap-under-side-label'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":224,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-errorWrapUnderSideLabelCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"extraFieldBodyCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":134}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-checkboxgroup-body'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-extraFieldBodyCls","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"extraFieldBodyCls","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-property-extraFieldBodyCls\" rel=\"Ext.form.Labelable-property-extraFieldBodyCls\" class=\"docClass\">Ext.form.Labelable.extraFieldBodyCls</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"fieldSubTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":151}],"doc":"<p>eslint-disable indent</p>\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<div id=\"{id}-containerEl\" data-ref=\"containerEl\" class=\"{containerElCls}\"', '<tpl if=\"ariaAttributes\">', '<tpl foreach=\"ariaAttributes\"> {$}=\"{.}\"</tpl>', '<tpl else>', ' role=\"presentation\"', '</tpl>', '>', '{%this.renderContainer(out,values)%}', '</div>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-fieldSubTpl","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"eslint-disable indent ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"floatParent","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1629}],"doc":"<p><strong>Only present for <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Components which were inserted as child items\nof Containers.</strong></p>\n\n<p>There are other similar relationships such as the <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">button</a> which\nactivates a <a href=\"#!/api/Ext.button.Button-cfg-menu\" rel=\"Ext.button.Button-cfg-menu\" class=\"docClass\">menu</a>, or the\n<a href=\"#!/api/Ext.menu.Item\" rel=\"Ext.menu.Item\" class=\"docClass\">menu item</a> which activated a <a href=\"#!/api/Ext.menu.Item-cfg-menu\" rel=\"Ext.menu.Item-cfg-menu\" class=\"docClass\">submenu</a>,\nor the <a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">column header</a> which activated the column menu.</p>\n\n<p>These differences are abstracted away by the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a> method.</p>\n\n<p>Floating Components that are programmatically <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">rendered</a>\nwill not have a <code>floatParent</code> property.</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> and <a href=\"#!/api/Ext.Component-property-zIndexManager\" rel=\"Ext.Component-property-zIndexManager\" class=\"docClass\">zIndexManager</a></p>\n","params":null,"return":null,"type":"Ext.Container","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-floatParent","owner":"Ext.Component","overrides":null,"short_doc":"Only present for floating Components which were inserted as child items\nof Containers. ...","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a>"},{"tagname":"property","name":"floating","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":73}],"doc":"<p>The value <code>true</code> indicates that this Component is floating.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-floating","owner":"Ext.util.Floating","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"floatingItems","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1499}],"doc":"<p>The MixedCollection containing all the floating child items of this container.\nWill be <code>undefined</code> if there are no floating child items.</p>\n","params":null,"return":null,"type":"Ext.util.MixedCollection","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"4.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-floatingItems","owner":"Ext.container.Container","overrides":null,"short_doc":"The MixedCollection containing all the floating child items of this container. ...","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},{"tagname":"property","name":"focusClsEl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":76}],"doc":"<p>The element that will have the\n<a href=\"#!/api/Ext.mixin.Focusable-cfg-focusCls\" rel=\"Ext.mixin.Focusable-cfg-focusCls\" class=\"docClass\">focusCls</a> applied when component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is focused.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-focusClsEl","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"focusEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":68}],"doc":"<p>The element that will be focused\nwhen method!focus method is called on this component. Usually this is\nthe same element that receives focus via mouse clicks, taps, and pressing\nTab key.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":"'el'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-focusEl","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"The element that will be focused\nwhen method!focus method is called on this component. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"focusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":11}],"doc":"<p><code>true</code> for keyboard interactive Components or Widgets, <code>false</code> otherwise.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See <a href=\"#!/api/Ext.mixin.Focusable-method-isFocusable\" rel=\"Ext.mixin.Focusable-method-isFocusable\" class=\"docClass\">isFocusable</a>.</p>\n\n<p><strong>Note:</strong> It is not enough to set this property to <code>true</code> to make\na component keyboard interactive. You also need to make sure that\nthe component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is reachable via Tab key (tabbable).\nSee also tabIndex.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-focusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"true for keyboard interactive Components or Widgets, false otherwise. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"focusableContainerEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":60}],"doc":"<p>The name of the element\nthat FocusableContainer should bind its keyboard handler to. Similar to ariaEl,\nthis name is resolved to the <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instance after rendering.</p>\n","params":null,"return":null,"type":"String/Ext.dom.Element","throws":null,"default":"\"el\"","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-focusableContainerEl","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"The name of the element\nthat FocusableContainer should bind its keyboard handler to. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"frameCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":64}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'frame'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":64,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-frameCls","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"frameElNames","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":65}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['TL', 'TC', 'TR', 'ML', 'MC', 'MR', 'BL', 'BC', 'BR', 'Table']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":65,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-frameElNames","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"frameIdRegex","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":63}],"doc":"\n","params":null,"return":null,"type":"RegExp","throws":null,"default":"/[-]frame\\d+[TMB][LCR]$/","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":63,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-frameIdRegex","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"frameSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1648}],"doc":"<p>Indicates the width of any framing elements which were added within the encapsulating\nelement to provide graphical, rounded borders. See the <a href=\"#!/api/Ext.Component-cfg-frame\" rel=\"Ext.Component-cfg-frame\" class=\"docClass\">frame</a> config. This\nproperty is <code>null</code> if the component is not framed.</p>\n\n<p>This is an object containing the frame width in pixels for all four sides of the\nComponent containing the following properties:</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":[{"tagname":"property","type":"Number","name":"top","default":"0","optional":true,"doc":"<p>The width of the top framing element in pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","type":"Number","name":"right","default":"0","optional":true,"doc":"<p>The width of the right framing element in pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","type":"Number","name":"bottom","default":"0","optional":true,"doc":"<p>The width of the bottom framing element in pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","type":"Number","name":"left","default":"0","optional":true,"doc":"<p>The width of the left framing element in pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","type":"Number","name":"width","default":"0","optional":true,"doc":"<p>The total width of the left and right framing elements\nin pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","type":"Number","name":"height","default":"0","optional":true,"doc":"<p>The total height of the top and right bottom elements\nin pixels.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-frameSize","owner":"Ext.Component","overrides":null,"short_doc":"Indicates the width of any framing elements which were added within the encapsulating\nelement to provide graphical, r...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"frameTableTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":94}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'before\\'); %}</tpl>', '<table id=\"{fgid}Table\" data-ref=\"frameTable\" class=\"{frameCls} ', Ext.baseCSSPrefix + 'table-plain\" cellpadding=\"0\" role=\"presentation\">', '<tpl if=\"top\">', '<tr role=\"presentation\">', '<tpl if=\"left\"><td id=\"{fgid}TL\" data-ref=\"frameTL\" class=\"{frameCls}-tl {baseCls}-tl {baseCls}-{ui}-tl<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tl</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '<td id=\"{fgid}TC\" data-ref=\"frameTC\" class=\"{frameCls}-tc {baseCls}-tc {baseCls}-{ui}-tc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tc</tpl>{frameElCls}\" role=\"presentation\"></td>', '<tpl if=\"right\"><td id=\"{fgid}TR\" data-ref=\"frameTR\" class=\"{frameCls}-tr {baseCls}-tr {baseCls}-{ui}-tr<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tr</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '</tr>', '</tpl>', '<tr role=\"presentation\">', '<tpl if=\"left\"><td id=\"{fgid}ML\" data-ref=\"frameML\" class=\"{frameCls}-ml {baseCls}-ml {baseCls}-{ui}-ml<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-ml</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '<td id=\"{fgid}Body\" data-ref=\"frameBody\" class=\"{frameBodyCls} {frameCls}-mc {baseCls}-mc {baseCls}-{ui}-mc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-mc</tpl>{frameElCls}\" style=\"{mcStyle}\" role=\"presentation\">', '{%this.applyRenderTpl(out, values)%}', '</td>', '<tpl if=\"right\"><td id=\"{fgid}MR\" data-ref=\"frameMR\" class=\"{frameCls}-mr {baseCls}-mr {baseCls}-{ui}-mr<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-mr</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '</tr>', '<tpl if=\"bottom\">', '<tr role=\"presentation\">', '<tpl if=\"left\"><td id=\"{fgid}BL\" data-ref=\"frameBL\" class=\"{frameCls}-bl {baseCls}-bl {baseCls}-{ui}-bl<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-bl</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '<td id=\"{fgid}BC\" data-ref=\"frameBC\" class=\"{frameCls}-bc {baseCls}-bc {baseCls}-{ui}-bc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-bc</tpl>{frameElCls}\" role=\"presentation\"></td>', '<tpl if=\"right\"><td id=\"{fgid}BR\" data-ref=\"frameBR\" class=\"{frameCls}-br {baseCls}-br {baseCls}-{ui}-br<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-br</tpl>{frameElCls}\" role=\"presentation\"></td></tpl>', '</tr>', '</tpl>', '</table>', '<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'after\\'); %}</tpl>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":94,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-frameTableTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"frameTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":67}],"doc":"<p>eslint-disable indent, max-len</p>\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'before\\'); %}</tpl>', '<tpl if=\"top\">', '<tpl if=\"left\"><div id=\"{fgid}TL\" data-ref=\"frameTL\" class=\"{frameCls}-tl {baseCls}-tl {baseCls}-{ui}-tl<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tl</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<tpl if=\"right\"><div id=\"{fgid}TR\" data-ref=\"frameTR\" class=\"{frameCls}-tr {baseCls}-tr {baseCls}-{ui}-tr<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tr</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<div id=\"{fgid}TC\" data-ref=\"frameTC\" class=\"{frameCls}-tc {baseCls}-tc {baseCls}-{ui}-tc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-tc</tpl>{frameElCls}\" role=\"presentation\"></div>', '<tpl if=\"right\"></div></tpl>', '<tpl if=\"left\"></div></tpl>', '</tpl>', '<tpl if=\"left\"><div id=\"{fgid}ML\" data-ref=\"frameML\" class=\"{frameCls}-ml {baseCls}-ml {baseCls}-{ui}-ml<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-ml</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<tpl if=\"right\"><div id=\"{fgid}MR\" data-ref=\"frameMR\" class=\"{frameCls}-mr {baseCls}-mr {baseCls}-{ui}-mr<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-mr</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<div id=\"{fgid}Body\" data-ref=\"frameBody\" class=\"{frameBodyCls} {frameCls}-mc {baseCls}-mc {baseCls}-{ui}-mc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-mc</tpl>{frameElCls}\" role=\"presentation\">', '{%this.applyRenderTpl(out, values)%}', '</div>', '<tpl if=\"right\"></div></tpl>', '<tpl if=\"left\"></div></tpl>', '<tpl if=\"bottom\">', '<tpl if=\"left\"><div id=\"{fgid}BL\" data-ref=\"frameBL\" class=\"{frameCls}-bl {baseCls}-bl {baseCls}-{ui}-bl<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-bl</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<tpl if=\"right\"><div id=\"{fgid}BR\" data-ref=\"frameBR\" class=\"{frameCls}-br {baseCls}-br {baseCls}-{ui}-br<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-br</tpl>{frameElCls}\" role=\"presentation\"></tpl>', '<div id=\"{fgid}BC\" data-ref=\"frameBC\" class=\"{frameCls}-bc {baseCls}-bc {baseCls}-{ui}-bc<tpl for=\"uiCls\"> {parent.baseCls}-{parent.ui}-{.}-bc</tpl>{frameElCls}\" role=\"presentation\"></div>', '<tpl if=\"right\"></div></tpl>', '<tpl if=\"left\"></div></tpl>', '</tpl>', '<tpl if=\"hasTabGuard\">{% this.renderTabGuard(out, values, \\'after\\'); %}</tpl>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-frameTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":"eslint-disable indent, max-len ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"groupCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":129}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-check-group'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-groupCls","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"hasFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":26}],"doc":"<p><code>true</code> if this component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> is focused.\nSee also <a href=\"#!/api/Ext.mixin.Focusable-property-containsFocus\" rel=\"Ext.mixin.Focusable-property-containsFocus\" class=\"docClass\">containsFocus</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-hasFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"true if this component's focusEl is focused. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-hasListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"horizontalPosProp","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1669}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'left'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-horizontalPosProp","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"htmlActiveErrorsTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":157}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<tpl if=\"errors && errors.length\">', '<ul class=\"{listCls}\">', '<tpl for=\"errors\"><li>{.}</li></tpl>', '</ul>', '</tpl>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":157,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-htmlActiveErrorsTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"initialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2179}],"doc":"<p>The config object passed to the constructor during Component creation.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-initialConfig","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"invalidIconCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":232}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-invalid-icon'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":232,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-invalidIconCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"invalidUnderCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":234}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-invalid-under'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":234,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-invalidUnderCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"isAnimate","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":213}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":213,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isAnimate","owner":"Ext.util.Animate","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isCheckboxGroup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":53}],"doc":"<p>The value <code>true</code> to identify an object as an instance of this or derived class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isCheckboxGroup","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"The value true to identify an object as an instance of this or derived class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isComponent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1674}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Component, or subclass thereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isComponent","owner":"Ext.Component","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Component, or subclass thereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isContainer","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":12}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Container, or subclass thereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isContainer","owner":"Ext.mixin.Container","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Container, or subclass thereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFieldLabelable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":178}],"doc":"<p>Flag denoting that this object is labelable as a field. Always true.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isFieldLabelable","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Flag denoting that this object is labelable as a field. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFocusableContainer","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":19}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":19,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isFocusableContainer","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFormField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":25}],"doc":"<p>Flag denoting that this component is a Field. Always true.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isFormField","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Flag denoting that this component is a Field. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isLabelable","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":29}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":29,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isLabelable","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isQueryable","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":9}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":9,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isQueryable","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"items","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1492}],"doc":"<p>The Collection containing all the child items of this container.</p>\n","params":null,"return":null,"type":"Ext.util.ItemCollection","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-items","owner":"Ext.container.Container","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.util.ItemCollection\" rel=\"Ext.util.ItemCollection\" class=\"docClass\">Ext.util.ItemCollection</a>"},{"tagname":"property","name":"labelEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":42}],"doc":"<p>The label Element for this component. Only available after the component\nhas been rendered.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-labelEl","owner":"Ext.form.Labelable","overrides":null,"short_doc":"The label Element for this component. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"labelInnerCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":205}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label-inner'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":205,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-labelInnerCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"labelTextCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":206}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label-text'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":206,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-labelTextCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"labelableInsertions","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":404}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['beforeBodyEl', 'afterBodyEl', 'beforeLabelTpl', 'afterLabelTpl', 'beforeSubTpl', 'afterSubTpl', 'beforeLabelTextTpl', 'afterLabelTextTpl', 'labelAttrTpl']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":404,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-labelableInsertions","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"lastKeyMapEvent","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":80}],"doc":"<p>The last key event processed is cached on the component for use in subsequent\nevent handlers.</p>\n","params":null,"return":null,"type":"Ext.event.Event","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.6.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-lastKeyMapEvent","owner":"Ext.mixin.Keyboard","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>"},{"tagname":"property","name":"layoutCounter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":808}],"doc":"<p>The number of container layout calls made on this object.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-layoutCounter","owner":"Ext.container.Container","overrides":null,"short_doc":"The number of container layout calls made on this object. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"layoutSuspendCount","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1688}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-layoutSuspendCount","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"manageLayoutScroll","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":316}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":316,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-manageLayoutScroll","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"maskOnDisable","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":145}],"doc":"<p>This is an internal flag that you use when creating custom components. By default this is set\nto <code>true</code> which means that every component gets a mask when it's disabled. Components like\nFieldContainer, FieldSet, Field, Button, Tab override this property to <code>false</code>\nsince they want to implement custom disable logic.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":145,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-maskOnDisable","owner":"Ext.form.FieldContainer","overrides":[{"name":"maskOnDisable","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-maskOnDisable\" rel=\"Ext.Component-property-maskOnDisable\" class=\"docClass\">Ext.Component.maskOnDisable</a>"}],"short_doc":"This is an internal flag that you use when creating custom components. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"mixinConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":22}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{id: 'fieldAncestor', after: {initInheritedState: 'initFieldInheritedState'}, before: {doDestroy: 'onBeforeDestroy'}}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":22,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinConfig","owner":"Ext.form.FieldAncestor","overrides":[{"name":"mixinConfig","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-property-mixinConfig\" rel=\"Ext.form.Labelable-property-mixinConfig\" class=\"docClass\">Ext.form.Labelable.mixinConfig</a>"},{"name":"mixinConfig","owner":"Ext.mixin.FocusableContainer","link":"<a href=\"#!/api/Ext.mixin.FocusableContainer-property-mixinConfig\" rel=\"Ext.mixin.FocusableContainer-property-mixinConfig\" class=\"docClass\">Ext.mixin.FocusableContainer.mixinConfig</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":23}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'field'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":23,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinId","owner":"Ext.form.field.Field","overrides":[{"name":"mixinId","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-property-mixinId\" rel=\"Ext.mixin.Focusable-property-mixinId\" class=\"docClass\">Ext.mixin.Focusable.mixinId</a>"},{"name":"mixinId","owner":"Ext.mixin.Queryable","link":"<a href=\"#!/api/Ext.mixin.Queryable-property-mixinId\" rel=\"Ext.mixin.Queryable-property-mixinId\" class=\"docClass\">Ext.mixin.Queryable.mixinId</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"msgTargets","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":359}],"doc":"<p>Map for msg target lookup, if target is not in this map it is assumed\nto be an element id</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{qtip: 1, title: 1, under: 1, side: 1, none: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-msgTargets","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Map for msg target lookup, if target is not in this map it is assumed\nto be an element id ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"noLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":236}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-no-label'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":236,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-noLabelCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"noWrap","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":379}],"doc":"<p>Tells the layout system that the height can be measured immediately because the width\ndoes not need setting.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-noWrap","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Tells the layout system that the height can be measured immediately because the width\ndoes not need setting. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"nonMaskableRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":741}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":741,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-nonMaskableRe","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"originalValue","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":192}],"doc":"<p>The original value of the field as configured in the <a href=\"#!/api/Ext.form.field.Field-cfg-value\" rel=\"Ext.form.field.Field-cfg-value\" class=\"docClass\">value</a> configuration,\nor as loaded by the last form load operation if the form's\n<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a> setting is <code>true</code>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-originalValue","owner":"Ext.form.field.Field","overrides":null,"short_doc":"The original value of the field as configured in the value configuration,\nor as loaded by the last form load operatio...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"ownerCt","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1758}],"doc":"<p>This Component's owner <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a> (is set automatically\nwhen this Component is added to a Container).</p>\n\n<p><em>Important.</em> This is not a universal upwards navigation pointer. It indicates the Container\nwhich owns and manages this Component if any. There are other similar relationships such as\nthe <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">button</a> which activates a\n<a href=\"#!/api/Ext.button.Button-cfg-menu\" rel=\"Ext.button.Button-cfg-menu\" class=\"docClass\">menu</a>, or the <a href=\"#!/api/Ext.menu.Item\" rel=\"Ext.menu.Item\" class=\"docClass\">menu item</a> which\nactivated a <a href=\"#!/api/Ext.menu.Item-cfg-menu\" rel=\"Ext.menu.Item-cfg-menu\" class=\"docClass\">submenu</a>, or the\n<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">column header</a> which activated the column menu.</p>\n\n<p>These differences are abstracted away by the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a> method.</p>\n\n<p><strong>Note</strong>: to access items within the Container see <a href=\"#!/api/Ext.Component-cfg-itemId\" rel=\"Ext.Component-cfg-itemId\" class=\"docClass\">itemId</a>.</p>\n","params":null,"return":null,"type":"Ext.Container","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-ownerCt","owner":"Ext.Component","overrides":null,"short_doc":"This Component's owner Container (is set automatically\nwhen this Component is added to a Container). ...","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a>"},{"tagname":"property","name":"plaintextActiveErrorsTpl","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":165}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['<tpl if=\"errors && errors.length\">', '<tpl for=\"errors\"><tpl if=\"xindex &gt; 1\">\\n</tpl>{.}</tpl>', '</tpl>']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":165,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-plaintextActiveErrorsTpl","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"preventDefaultAlign","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":150}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":150,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-preventDefaultAlign","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":655}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":655,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-privates","owner":"Ext.form.field.Field","overrides":[{"name":"privates","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-privates\" rel=\"Ext.Component-property-privates\" class=\"docClass\">Ext.Component.privates</a>"},{"name":"privates","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-property-privates\" rel=\"Ext.form.FieldContainer-property-privates\" class=\"docClass\">Ext.form.FieldContainer.privates</a>"}],"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"rendered","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1777}],"doc":"<p>Indicates whether or not the component has been rendered.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-rendered","owner":"Ext.Component","overrides":null,"short_doc":"Indicates whether or not the component has been rendered. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"rightLabelCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":204}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label-right'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":204,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-rightLabelCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"rootCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1785}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'body'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-rootCls","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"scrollFlags","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1795}],"doc":"<p>An object property which provides unified information as to which dimensions are\nscrollable based upon the <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> settings (And for <em>views</em> of trees and\ngrids, the owning panel's <a href=\"#!/api/Ext.panel.Table-cfg-scroll\" rel=\"Ext.panel.Table-cfg-scroll\" class=\"docClass\">scroll</a> setting).</p>\n\n<p>Note that if you set overflow styles using the <a href=\"#!/api/Ext.Component-cfg-style\" rel=\"Ext.Component-cfg-style\" class=\"docClass\">style</a> config or\n<a href=\"#!/api/Ext.panel.Panel-cfg-bodyStyle\" rel=\"Ext.panel.Panel-cfg-bodyStyle\" class=\"docClass\">bodyStyle</a> config, this object does not include\nthat information. Use <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> if you need to access these flags.</p>\n\n<p>This object has the following properties:</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":[{"tagname":"property","type":"Boolean","name":"x","doc":"<p><code>true</code> if this Component is scrollable\nhorizontally - style setting may be <code>'auto'</code> or <code>'scroll'</code>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","type":"Boolean","name":"y","doc":"<p><code>true</code> if this Component is scrollable\nvertically - style setting may be <code>'auto'</code> or <code>'scroll'</code>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","type":"Boolean","name":"both","doc":"<p><code>true</code> if this Component is scrollable both\nhorizontally and vertically.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","type":"String","name":"overflowX","doc":"<p>The <code>overflow-x</code> style setting, <code>'auto'</code>\nor <code>'scroll'</code> or <code>''</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","type":"String","name":"overflowY","doc":"<p>The <code>overflow-y</code> style setting, <code>'auto'</code>\nor <code>'scroll'</code> or <code>''</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"}],"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-scrollFlags","owner":"Ext.Component","overrides":null,"short_doc":"An object property which provides unified information as to which dimensions are\nscrollable based upon the scrollable...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"scrollerCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1790}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'scroll-scroller'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-scrollerCls","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"skipLabelForAttribute","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":146}],"doc":"<p>containerEl is a div, it cannot be referenced by a <label for=\"...\">\nWe set aria-labelledby on the containerEl instead</label></p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-skipLabelForAttribute","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"containerEl is a div, it cannot be referenced by a \nWe set aria-labelledby on the containerEl instead ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"suspendCheckChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":101}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-suspendCheckChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"synthetic","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1356}],"doc":"<p>This property is <code>true</code> if the component was created internally by the framework\nand is not explicitly user-defined. This is set for such things as <code>Splitter</code>\ninstances managed by <code>border</code> and <code>box</code> layouts.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-synthetic","owner":"Ext.Component","overrides":null,"short_doc":"This property is true if the component was created internally by the framework\nand is not explicitly user-defined. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"tabGuardAfterEl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":780}],"doc":"<p>This element reference is generated when <code><a href=\"#!/api/Ext.container.Container-cfg-tabGuard\" rel=\"Ext.container.Container-cfg-tabGuard\" class=\"docClass\">tabGuard</a></code> is <code>true</code>. This element\nis generated after all <code>dockedItems</code> in the DOM.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardAfterEl","owner":"Ext.container.Container","overrides":null,"short_doc":"This element reference is generated when tabGuard is true. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"tabGuardAfterIndex","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":764}],"doc":"<p>The tabIndex attribute value to assign\nto the \"after\" tab guard element. Default is <code>undefined</code> for automatic detection\nfrom the DOM.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardAfterIndex","owner":"Ext.container.Container","overrides":null,"short_doc":"The tabIndex attribute value to assign\nto the \"after\" tab guard element. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"tabGuardBeforeEl","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":772}],"doc":"<p>This element reference is generated when <code><a href=\"#!/api/Ext.container.Container-cfg-tabGuard\" rel=\"Ext.container.Container-cfg-tabGuard\" class=\"docClass\">tabGuard</a></code> is <code>true</code>. This element\nis generated before all <code>dockedItems</code> in the DOM.</p>\n","params":null,"return":null,"type":"Ext.dom.Element","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardBeforeEl","owner":"Ext.container.Container","overrides":null,"short_doc":"This element reference is generated when tabGuard is true. ...","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"tagname":"property","name":"tabGuardBeforeIndex","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":756}],"doc":"<p>The tabIndex attribute value to assign\nto the \"before\" tab guard element. Default is <code>undefined</code> for automatic detection\nfrom the DOM.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardBeforeIndex","owner":"Ext.container.Container","overrides":null,"short_doc":"The tabIndex attribute value to assign\nto the \"before\" tab guard element. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"tabGuardElements","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":745}],"doc":"<p>Read only object containing property names for tab guard elements, keyed by position.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{before: 'tabGuardBeforeEl', after: 'tabGuardAfterEl'}","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardElements","owner":"Ext.container.Container","overrides":null,"short_doc":"Read only object containing property names for tab guard elements, keyed by position. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"tabGuardTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":727}],"doc":"<p>This template is used to generate the <code>tabGuard</code> elements. It is used once per\nelement (see <code><a href=\"#!/api/Ext.container.Container-property-tabGuardBeforeEl\" rel=\"Ext.container.Container-property-tabGuardBeforeEl\" class=\"docClass\">tabGuardBeforeEl</a></code> and <code><a href=\"#!/api/Ext.container.Container-property-tabGuardAfterEl\" rel=\"Ext.container.Container-property-tabGuardAfterEl\" class=\"docClass\">tabGuardAfterEl</a></code>).</p>\n","params":null,"return":null,"type":"String/String[]/Ext.XTemplate","throws":null,"default":"'<span id=\"{id}-{tabGuardEl}\" data-ref=\"{tabGuardEl}\" aria-hidden=\"true\"' + ' class=\"' + Ext.baseCSSPrefix + 'tab-guard ' + Ext.baseCSSPrefix + 'tab-guard-{tabGuardPosition}\"' + ' style=\"width:0px;height:0px;\">' + '</span>'","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-tabGuardTpl","owner":"Ext.container.Container","overrides":null,"short_doc":"This template is used to generate the tabGuard elements. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},{"tagname":"property","name":"topLabelCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":200}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label-top'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-topLabelCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"topLabelSideErrorCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":207}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'form-item-label-top-side-error'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":207,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-topLabelSideErrorCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"validIdRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1934}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1934,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-validIdRe","owner":"Ext.Component","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"validRefRe","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":317}],"doc":"<p>Regular expression used for validating <code>reference</code> values.</p>\n","params":null,"return":null,"type":"RegExp","throws":null,"default":"/^[a-z_][a-z0-9_]*$/i","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-validRefRe","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Regular expression used for validating reference values. ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"zIndexManager","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":80}],"doc":"<p>Only present for <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Components after\nthey have been rendered.</p>\n\n<p>A reference to the ZIndexManager which is managing this Component's z-index.</p>\n\n<p>The <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a> maintains a stack of floating Component\nz-indices, and also provides a single modal mask which is insert just beneath the topmost\nvisible modal floating Component.</p>\n\n<p>Floating Components may be <a href=\"#!/api/Ext.Component-method-toFront\" rel=\"Ext.Component-method-toFront\" class=\"docClass\">brought to the front</a> or\n<a href=\"#!/api/Ext.Component-method-toBack\" rel=\"Ext.Component-method-toBack\" class=\"docClass\">sent to the back</a> of the z-index stack.</p>\n\n<p>This defaults to the global <a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a> for floating Components\nthat are programatically <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">rendered</a>.</p>\n\n<p>For <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Components that are added to a\nContainer, the ZIndexManager is acquired from the first ancestor Container found\nthat is floating. If no floating ancestor is found, the global\n<a href=\"#!/api/Ext.WindowManager\" rel=\"Ext.WindowManager\" class=\"docClass\">ZIndexManager</a> is used.</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">Ext.Component.floating</a> and <a href=\"#!/api/Ext.util.Floating-property-zIndexParent\" rel=\"Ext.util.Floating-property-zIndexParent\" class=\"docClass\">zIndexParent</a></p>\n","params":null,"return":null,"type":"Ext.ZIndexManager","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-zIndexManager","owner":"Ext.util.Floating","overrides":null,"short_doc":"Only present for floating Components after\nthey have been rendered. ...","html_type":"<a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">Ext.ZIndexManager</a>"},{"tagname":"property","name":"zIndexParent","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":106}],"doc":"<p>Only present for <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">Ext.Component.floating</a> Components which were\ninserted as child items of Containers, and which have a floating Container in\ntheir containment ancestry.</p>\n\n<p>For <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">Ext.Component.floating</a> Components which are child items of a\nContainer, the zIndexParent will be a floating ancestor Container which is\nresponsible for the base z-index value of all its floating descendants. It\nprovides a <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a> which provides z-indexing\nservices for all its descendant floating Components.</p>\n\n<p>Floating Components that are programmatically <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">rendered</a>\nwill not have a <code>zIndexParent</code> property.</p>\n\n<p>For example, the dropdown <a href=\"#!/api/Ext.view.BoundList\" rel=\"Ext.view.BoundList\" class=\"docClass\">BoundList</a> of a ComboBox which is\nin a Window will have the Window as its <code>zIndexParent</code>, and will always show above\nthat Window, wherever the Window is placed in the z-index stack.</p>\n\n<p>See <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">Ext.Component.floating</a> and <a href=\"#!/api/Ext.util.Floating-property-zIndexManager\" rel=\"Ext.util.Floating-property-zIndexManager\" class=\"docClass\">zIndexManager</a></p>\n","params":null,"return":null,"type":"Ext.Container","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-zIndexParent","owner":"Ext.util.Floating","overrides":null,"short_doc":"Only present for Ext.Component.floating Components which were\ninserted as child items of Containers, and which have a...","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2144}],"doc":"<p>Creates new Component.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element/String/Object","name":"config","doc":"<p>The configuration options may be specified\nas either:</p>\n\n<ul>\n<li><strong>an element</strong> : it is set as the internal element and its id used as the component id</li>\n<li><strong>a string</strong> : it is assumed to be the id of an existing element and is used as the\ncomponent id</li>\n<li><strong>anything else</strong> : it is assumed to be a standard config object and is applied to the\ncomponent</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-afterrender\" rel=\"Ext.Component-event-afterrender\" class=\"docClass\">afterrender</a>","<a href=\"#!/api/Ext.Component-event-beforerender\" rel=\"Ext.Component-event-beforerender\" class=\"docClass\">beforerender</a>","<a href=\"#!/api/Ext.Component-event-beforeshow\" rel=\"Ext.Component-event-beforeshow\" class=\"docClass\">beforeshow</a>","<a href=\"#!/api/Ext.Component-event-disable\" rel=\"Ext.Component-event-disable\" class=\"docClass\">disable</a>","<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>","<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a>","tofront"],"method_calls":["addStateEvents","disable","getController","getId","getLoader","initComponent","initConfig","initPlugin","render","setScrollable","setupProtoEl","show"],"readonly":null,"required":null,"template":null,"id":"method-constructor","owner":"Ext.Component","overrides":[{"name":"constructor","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-method-constructor\" rel=\"Ext.util.Floating-method-constructor\" class=\"docClass\">Ext.util.Floating.constructor</a>"}],"short_doc":"Creates new Component. ...","html_type":null},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Adds declarative listeners as nested arrays of listener objects. ...","html_type":null},{"tagname":"method","name":"_fixReference","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":414}],"doc":"<p>Sets up a reference on our current reference holder.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupNameHolder","lookupReferenceHolder"],"readonly":null,"required":null,"template":null,"id":"method-_fixReference","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Sets up a reference on our current reference holder. ...","html_type":null},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":891}],"doc":"<p>Adds <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a>(s) to this Container.</p>\n\n<h2>Description:</h2>\n\n<ul>\n<li>Fires the <a href=\"#!/api/Ext.container.Container-event-beforeadd\" rel=\"Ext.container.Container-event-beforeadd\" class=\"docClass\">beforeadd</a> event before adding.</li>\n<li>The Container's <a href=\"#!/api/Ext.container.Container-cfg-defaults\" rel=\"Ext.container.Container-cfg-defaults\" class=\"docClass\">default config values</a> will be applied\naccordingly (see <code><a href=\"#!/api/Ext.container.Container-cfg-defaults\" rel=\"Ext.container.Container-cfg-defaults\" class=\"docClass\">defaults</a></code> for details).</li>\n<li>Fires the <code><a href=\"#!/api/Ext.container.Container-event-add\" rel=\"Ext.container.Container-event-add\" class=\"docClass\">add</a></code> event after the component has been added.</li>\n</ul>\n\n\n<h2>Notes:</h2>\n\n<p>If the Container is <strong>already rendered</strong> when <code>add</code>\nis called, it will render the newly added Component into its content area.</p>\n\n<p><strong>If</strong> the Container was configured with a size-managing cfg!layout manager,\nthe Container will recalculate its internal layout at this time too.</p>\n\n<p>Note that the default layout manager simply renders child Components sequentially\ninto the content area and thereafter performs no sizing.</p>\n\n<p>If adding multiple new child Components, pass them as an array to the <code>add</code> method,\nso that only one layout recalculation is performed.</p>\n\n<pre><code>tb = new <a href=\"#!/api/Ext.toolbar.Toolbar\" rel=\"Ext.toolbar.Toolbar\" class=\"docClass\">Ext.toolbar.Toolbar</a>({\n    renderTo: document.body\n});  // toolbar is rendered\n// add multiple items.\n// default type for Toolbar is 'button')\ntb.add([{text:'Button 1'}, {text:'Button 2'}]);\n</code></pre>\n\n<p>To inject components between existing ones, use the <a href=\"#!/api/Ext.container.Container-method-insert\" rel=\"Ext.container.Container-method-insert\" class=\"docClass\">insert</a> method.</p>\n\n<h2>Warning:</h2>\n\n<p>Components directly managed by the BorderLayout layout manager may not be removed\nor added.  See the Notes for <a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">BorderLayout</a> for\nmore details.</p>\n","params":[{"tagname":"params","type":"Ext.Component[]|Object[]/Ext.Component.../Object...","name":"component","doc":"<p>Either one or more Components to add or an Array of Components to add.\nSee <code><a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a></code> for additional information.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]|<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.../<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component[]/Ext.Component","name":"return","doc":"<p>The Components that were added.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-add\" rel=\"Ext.container.Container-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.container.Container-event-beforeadd\" rel=\"Ext.container.Container-event-beforeadd\" class=\"docClass\">beforeadd</a>"],"method_calls":["fireEvent","getId","getItemId","getLayout","onAdd","onBeforeAdd","onFocusableChildAdd","prepareItems","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-add","owner":"Ext.container.Container","overrides":null,"short_doc":"Adds Component(s) to this Container. ...","html_type":null},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onAfter. ...","html_type":null},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onBefore. ...","html_type":null},{"tagname":"method","name":"addChildEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/ElementContainer.js","linenr":240}],"doc":"<p>Add a childEl specific to this instance. This must be called before render.</p>\n","params":[{"tagname":"params","type":"Object","name":"childEl","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-addChildEl","owner":"Ext.util.ElementContainer","overrides":null,"short_doc":"Add a childEl specific to this instance. ...","html_type":null},{"tagname":"method","name":"addClass","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7105}],"doc":"<p>Adds a CSS class to the top level element representing this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The CSS class name to add.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>Returns the Component to allow method chaining.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-addCls\" rel=\"Ext.Component-method-addCls\" class=\"docClass\">addCls</a> instead.</p>\n","version":"4.1"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addClass","owner":"Ext.Component","overrides":null,"short_doc":"Adds a CSS class to the top level element representing this component. ...","html_type":null},{"tagname":"method","name":"addCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2347}],"doc":"<p>Adds a CSS class to the top level element representing this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The CSS class name to add.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>Returns the Component to allow method chaining.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addCls","owner":"Ext.Component","overrides":null,"short_doc":"Adds a CSS class to the top level element representing this component. ...","html_type":null},{"tagname":"method","name":"addClsWithUI","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2361}],"doc":"<p>Adds a <code>cls</code> to the <code>uiCls</code> array, which will also call <a href=\"#!/api/Ext.Component-method-addUIClsToElement\" rel=\"Ext.Component-method-addUIClsToElement\" class=\"docClass\">addUIClsToElement</a>\nand adds to all elements of this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"classes","doc":"<p>A string or an array of strings to add to the <code>uiCls</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"skip","doc":"<p><code>true</code> to skip adding it to the class and do it later\n(via the return).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","addUIClsToElement","hasUICls"],"readonly":null,"required":null,"template":null,"id":"method-addClsWithUI","owner":"Ext.Component","overrides":null,"short_doc":"Adds a cls to the uiCls array, which will also call addUIClsToElement\nand adds to all elements of this component. ...","html_type":null},{"tagname":"method","name":"addDelegatedListener","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":13}],"doc":"<p>Adds a listeners with the \"delegate\" event option.  Users should not invoke this\nmethod directly.  Use the \"delegate\" event option of\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> instead.</p>\n","params":[{"tagname":null,"type":"Object","name":"eventName","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"options","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"order","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"caller","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"manager","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addDelegatedListener","owner":"Ext.mixin.ComponentDelegation","overrides":null,"short_doc":"Adds a listeners with the \"delegate\" event option. ...","html_type":null},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener"],"readonly":null,"required":null,"template":null,"id":"method-addListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addManagedListener"],"readonly":null,"required":null,"template":null,"id":"method-addManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o...","html_type":null},{"tagname":"method","name":"addPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2440}],"doc":"<p>Adds a plugin. May be called at any time in the component's life cycle.</p>\n","params":[{"tagname":null,"type":"Object","name":"plugin","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["constructPlugin","initPlugin"],"readonly":null,"required":null,"template":null,"id":"method-addPlugin","owner":"Ext.Component","overrides":null,"short_doc":"Adds a plugin. ...","html_type":null},{"tagname":"method","name":"addPropertyToState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2463}],"doc":"<p>Save a property to the given state object if it is not its default or configured\nvalue.</p>\n","params":[{"tagname":"params","type":"Object","name":"state","doc":"<p>The state object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"propName","doc":"<p>The name of the property on this object to save.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"value","doc":"<p>The value of the state property (defaults to <code>this[propName]</code>).</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The state object or a new object if state was <code>null</code> and the property\nwas saved.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-addPropertyToState","owner":"Ext.Component","overrides":null,"short_doc":"Save a property to the given state object if it is not its default or configured\nvalue. ...","html_type":null},{"tagname":"method","name":"addStateEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":173}],"doc":"<p>Add events that will trigger the state to be saved. If the first argument is an\narray, each element of that array is the name of a state event. Otherwise, each\nargument passed to this method is the name of a state event.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"events","doc":"<p>The event name or an array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStateId","on"],"readonly":null,"required":null,"template":null,"id":"method-addStateEvents","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Add events that will trigger the state to be saved. ...","html_type":null},{"tagname":"method","name":"addUIClsToElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2495}],"doc":"<p>Method which adds a specified UI + <code>uiCls</code> to the components element. Can be overridden\nto add the UI to more than just the component's element.</p>\n","params":[{"tagname":"params","type":"String","name":"uiCls","doc":"<p>The UI class to add to the element.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls"],"readonly":null,"required":null,"template":null,"id":"method-addUIClsToElement","owner":"Ext.Component","overrides":null,"short_doc":"Method which adds a specified UI + uiCls to the components element. ...","html_type":null},{"tagname":"method","name":"addUIToElement","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6366}],"doc":"<p>Method which adds a specified UI to the components element.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","getChildEls"],"readonly":null,"required":null,"template":null,"id":"method-addUIToElement","owner":"Ext.Component","overrides":null,"short_doc":"Method which adds a specified UI to the components element. ...","html_type":null},{"tagname":"method","name":"adjustForConstraints","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":176}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"xy","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"parent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConstrainVector"],"readonly":null,"required":null,"template":null,"id":"method-adjustForConstraints","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"adjustPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2561}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"x","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"y","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isContainedFloater"],"readonly":null,"required":null,"template":null,"id":"method-adjustPosition","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"afterClassMixedIn","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/ElementContainer.js","linenr":261}],"doc":"<p>Called after the mixin is applied. We need to see if <code>childEls</code> were used by\nthe <code>targetClass</code> and apply them to the config.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"targetClass","doc":"\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-afterClassMixedIn","owner":"Ext.util.ElementContainer","overrides":null,"short_doc":"Called after the mixin is applied. ...","html_type":null},{"tagname":"method","name":"afterComponentLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1052}],"doc":"<p>Called by the layout system after the Component has been laid out.</p>\n\n<p>This method is not called on components that use <a href=\"#!/api/Ext.container.Container-cfg-liquidLayout\" rel=\"Ext.container.Container-cfg-liquidLayout\" class=\"docClass\">liquidLayout</a>, such as\n<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Buttons</a> and <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Form Fields</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1052,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":true,"id":"method-afterComponentLayout","owner":"Ext.container.Container","overrides":[{"name":"afterComponentLayout","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-afterComponentLayout\" rel=\"Ext.Component-method-afterComponentLayout\" class=\"docClass\">Ext.Component.afterComponentLayout</a>"}],"short_doc":"Called by the layout system after the Component has been laid out. ...","html_type":null},{"tagname":"method","name":"afterFirstLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":345}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"width","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"height","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":345,"fires":["boxready","move"],"method_calls":["onBoxReady","setPosition"],"readonly":null,"required":null,"template":null,"id":"method-afterFirstLayout","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"afterHide","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2581}],"doc":"<p>Invoked after the Component has been hidden.</p>\n\n<p>Gets passed the same <code>callback</code> and <code>scope</code> parameters that <a href=\"#!/api/Ext.Component-method-onHide\" rel=\"Ext.Component-method-onHide\" class=\"docClass\">onHide</a> received.</p>\n","params":[{"tagname":"params","type":"Function","name":"callback","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-hide\" rel=\"Ext.Component-event-hide\" class=\"docClass\">hide</a>"],"method_calls":["fireEvent","fireHierarchyEvent","getInherited","updateLayout"],"readonly":null,"required":null,"template":true,"id":"method-afterHide","owner":"Ext.Component","overrides":null,"short_doc":"Invoked after the Component has been hidden. ...","html_type":null},{"tagname":"method","name":"afterLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1074}],"doc":"<p>Invoked after the Container has laid out (and rendered if necessary)\nits child Components.</p>\n","params":[{"tagname":"params","type":"Ext.layout.container.Container","name":"layout","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-afterlayout\" rel=\"Ext.container.Container-event-afterlayout\" class=\"docClass\">afterlayout</a>"],"method_calls":["fireEvent","initFocusableContainer"],"readonly":null,"required":null,"template":true,"id":"method-afterLayout","owner":"Ext.container.Container","overrides":null,"short_doc":"Invoked after the Container has laid out (and rendered if necessary)\nits child Components. ...","html_type":null},{"tagname":"method","name":"afterRender","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":258}],"doc":"<p>Allows additional behavior after rendering is complete. At this stage, the\n<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component's</a> <a href=\"#!/api/Ext.Component-method-getEl\" rel=\"Ext.Component-method-getEl\" class=\"docClass\">Element</a> will have\nbeen styled according to the configuration, will have had any configured CSS\nclass names added, and will be in the configured visibility and configured enable\nstate.</p>\n\n<p><strong>Note:</strong> If the Component has a <a href=\"#!/api/Ext.Component-cfg-controller\" rel=\"Ext.Component-cfg-controller\" class=\"docClass\">ViewController</a>\nand the controller has an <a href=\"#!/api/Ext.app.ViewController-method-afterRender\" rel=\"Ext.app.ViewController-method-afterRender\" class=\"docClass\">afterRender</a>\nmethod it will be called passing the Component as the single param.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["finishRenderChildren","getContentTarget","initFocusableContainer","onDisable","setPagePosition","updateLayout"],"readonly":null,"required":null,"template":true,"id":"method-afterRender","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Allows additional behavior after rendering is complete. ...","html_type":null},{"tagname":"method","name":"afterSetPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2619}],"doc":"<p>Template method called after a Component has been positioned.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>"],"method_calls":["fireEvent","onPosition"],"readonly":null,"required":null,"template":true,"id":"method-afterSetPosition","owner":"Ext.Component","overrides":[{"name":"afterSetPosition","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-afterSetPosition\" rel=\"Ext.util.Positionable-method-afterSetPosition\" class=\"docClass\">Ext.util.Positionable.afterSetPosition</a>"}],"short_doc":"Template method called after a Component has been positioned. ...","html_type":null},{"tagname":"method","name":"afterShow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2638}],"doc":"<p>Invoked after the Component is shown (after <a href=\"#!/api/Ext.Component-method-onShow\" rel=\"Ext.Component-method-onShow\" class=\"docClass\">onShow</a> is called).</p>\n\n<p>Gets passed the same parameters as <a href=\"#!/api/Ext.Component-event-show\" rel=\"Ext.Component-event-show\" class=\"docClass\">show</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.dom.Element","name":"animateTarget","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>","<a href=\"#!/api/Ext.Component-event-show\" rel=\"Ext.Component-event-show\" class=\"docClass\">show</a>"],"method_calls":["fireHierarchyEvent","getAnimateTarget","ghost","onShowComplete","unghost"],"readonly":null,"required":null,"template":true,"id":"method-afterShow","owner":"Ext.Component","overrides":null,"short_doc":"Invoked after the Component is shown (after onShow is called). ...","html_type":null},{"tagname":"method","name":"alignTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":190}],"doc":"<p>Aligns the element with another element relative to the specified anchor points. If\nthe other element is the document it aligns it to the viewport. The position\nparameter is optional, and can be specified in any one of the following formats:</p>\n\n<ul>\n<li><strong>Blank</strong>: Defaults to aligning the element's top-left corner to the target's\nbottom-left corner (\"tl-bl\").</li>\n<li><strong>Two anchors</strong>: If two values from the table below are passed separated by a dash,\nthe first value is used as the element's anchor point, and the second value is\nused as the target's anchor point.</li>\n<li><strong>Two edge/offset descriptors:</strong> An edge/offset descriptor is an edge initial\n(<code>t</code>/<code>r</code>/<code>b</code>/<code>l</code>) followed by a percentage along that side. This describes a\npoint to align with a similar point in the target. So <code>'t0-b0'</code> would be\nthe same as <code>'tl-bl'</code>, <code>'l0-r50'</code> would place the top left corner of this item\nhalfway down the right edge of the target item. This allows more flexibility\nand also describes which two edges are considered adjacent when positioning a tip pointer.</li>\n</ul>\n\n\n<p>Following are all of the supported predefined anchor positions:</p>\n\n<pre><code> Value  Description\n -----  -----------------------------\n tl     The top left corner\n t      The center of the top edge\n tr     The top right corner\n l      The center of the left edge\n c      The center\n r      The center of the right edge\n bl     The bottom left corner\n b      The center of the bottom edge\n br     The bottom right corner\n</code></pre>\n\n<p>You can put a '?' at the end of the alignment string to constrain the positioned element\nto the <a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Viewport</a>. The element will attempt to align as specified, but\nthe position will be adjusted to constrain to the viewport if necessary. Note that\nthe element being aligned might be swapped to align to a different position than that\nspecified in order to enforce the viewport constraints.</p>\n\n<p>Example Usage:</p>\n\n<pre><code>// align el to other-el using the default positioning\n// (\"tl-bl\", non-constrained)\nel.alignTo(\"other-el\");\n\n// align the top left corner of el with the top right corner of other-el\n// (constrained to viewport)\nel.alignTo(\"other-el\", \"tl-tr?\");\n\n// align the bottom right corner of el with the center left edge of other-el\nel.alignTo(\"other-el\", \"br-l?\");\n\n// align the center of el with the bottom left corner of other-el and\n// adjust the x position by -6 pixels (and the y position by 0)\nel.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n\n// align the 25% point on the bottom edge of this el\n// with the 75% point on the top edge of other-el.\nel.alignTo(\"other-el\", 'b25-t75');\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"element","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"position","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]\nElement animation config object</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"animate","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAlignToXY","setXY"],"readonly":null,"required":null,"template":null,"id":"method-alignTo","owner":"Ext.util.Positionable","overrides":[{"name":"alignTo","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-method-alignTo\" rel=\"Ext.util.Floating-method-alignTo\" class=\"docClass\">Ext.util.Floating.alignTo</a>"}],"short_doc":"Aligns the element with another element relative to the specified anchor points. ...","html_type":null},{"tagname":"method","name":"anchorTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":18}],"doc":"<p>Anchors an element to another element and realigns it when the window is resized.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"anchorToEl","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"alignment","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Number","name":"monitorScroll","doc":"<p>True to monitor body scroll and\nreposition. If this parameter is a number, it is used as the buffer delay in\nmilliseconds.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":"50","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to call after the animation finishes</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAnchor","removeAnchor"],"readonly":null,"required":null,"template":null,"id":"method-anchorTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Anchors an element to another element and realigns it when the window is resized. ...","html_type":null},{"tagname":"method","name":"anim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":297}],"doc":"<p>Process the passed fx configuration.</p>\n","params":[{"tagname":null,"type":"Object","name":"config","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["stopAnimation"],"readonly":null,"required":null,"template":null,"id":"method-anim","owner":"Ext.util.Animate","overrides":null,"short_doc":"Process the passed fx configuration. ...","html_type":null},{"tagname":"method","name":"animate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2729}],"doc":"<p>Performs custom animation on this object.</p>\n\n<p>This method is applicable to both the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a> class and the\nSprite class. It performs animated transitions of certain\nproperties of this object over a specified timeline.</p>\n\n<h3>Animating a <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a></h3>\n\n<p>When animating a Component, the following properties may be specified in <code>from</code>, <code>to</code>,\nand <code>keyframe</code> objects:</p>\n\n<ul>\n<li><p><code>x</code> - The Component's page X position in pixels.</p></li>\n<li><p><code>y</code> - The Component's page Y position in pixels</p></li>\n<li><p><code>left</code> - The Component's <code>left</code> value in pixels.</p></li>\n<li><p><code>top</code> - The Component's <code>top</code> value in pixels.</p></li>\n<li><p><code>width</code> - The Component's <code>width</code> value in pixels.</p></li>\n<li><p><code>height</code> - The Component's <code>height</code> value in pixels.</p></li>\n</ul>\n\n\n<p>The following property may be set on the animation config root:</p>\n\n<ul>\n<li><code>dynamic</code> - Specify as true to update the Component's layout (if it is a Container)\nat every frame of the animation. <em>Use sparingly as laying out on every intermediate\nsize change is an expensive operation.</em></li>\n</ul>\n\n\n<p>For example, to animate a Window to a new size, ensuring that its internal layout\nand any shadow is correct:</p>\n\n<pre><code>myWindow = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {\n    title: 'Test Component animation',\n    width: 500,\n    height: 300,\n    layout: {\n        type: 'hbox',\n        align: 'stretch'\n    },\n    items: [{\n        title: 'Left: 33%',\n        margin: '5 0 5 5',\n        flex: 1\n    }, {\n        title: 'Left: 66%',\n        margin: '5 5 5 5',\n        flex: 2\n    }]\n});\nmyWindow.show();\nmyWindow.header.el.on('click', function() {\n    myWindow.animate({\n        to: {\n            width: (myWindow.getWidth() == 500) ? 700 : 500,\n            height: (myWindow.getHeight() == 300) ? 400 : 300\n        }\n    });\n});\n</code></pre>\n\n<p>For performance reasons, by default, the internal layout is only updated when the Window\nreaches its final <code>\"to\"</code> size. If dynamic updating of the Window's child Components\nis required, then configure the animation with <code>dynamic: true</code> and the two child items\nwill maintain their proportions during the animation.</p>\n","params":[{"tagname":null,"type":"Object","name":"animObj","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2729,"fires":[],"method_calls":["getHeight","getWidth","setSize"],"readonly":null,"required":null,"template":null,"id":"method-animate","owner":"Ext.Component","overrides":[{"name":"animate","owner":"Ext.util.Animate","link":"<a href=\"#!/api/Ext.util.Animate-method-animate\" rel=\"Ext.util.Animate-method-animate\" class=\"docClass\">Ext.util.Animate.animate</a>"}],"short_doc":"Performs custom animation on this object. ...","html_type":null},{"tagname":"method","name":"applyBind","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":547}],"doc":"\n","params":[{"tagname":"params","type":"String/Object","name":"binds","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"currentBindings","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTwoWayBindable","lookupViewModel","watchConfig"],"readonly":null,"required":null,"template":null,"id":"method-applyBind","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applyData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6186}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"data","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6186,"fires":[],"method_calls":["update"],"readonly":null,"required":null,"template":null,"id":"method-applyData","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applyDefaults","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2169}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"config","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applyDefaults","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applyRenderSelectors","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":897}],"doc":"<p>Sets references to elements inside the component. This applies\n<a href=\"#!/api/Ext.Component-cfg-renderSelectors\" rel=\"Ext.Component-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a> as well as\n<a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["attachChildEls"],"readonly":null,"required":null,"template":null,"id":"method-applyRenderSelectors","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Sets references to elements inside the component. ...","html_type":null},{"tagname":"method","name":"applyScrollable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2843}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"scrollable","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldScrollable","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2843,"fires":[],"method_calls":["getOverflowEl","getOverflowStyle","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-applyScrollable","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applySession","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":657}],"doc":"<p>Transforms a Session config to a proper instance.</p>\n","params":[{"tagname":"params","type":"Object","name":"session","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.Session","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupSession"],"readonly":null,"required":null,"template":null,"id":"method-applySession","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Transforms a Session config to a proper instance. ...","html_type":null},{"tagname":"method","name":"applyState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":303}],"doc":"<p>Applies the state to the object. This should be overridden in subclasses to do\nmore complex state operations. By default it applies the state properties onto\nthe current object.</p>\n","params":[{"tagname":"params","type":"Object","name":"state","doc":"<p>The state</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applyState","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Applies the state to the object. ...","html_type":null},{"tagname":"method","name":"applyTouchAction","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2913}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"touchAction","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldTouchAction","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2913,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applyTouchAction","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applyViewModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":688}],"doc":"<p>Transforms a ViewModel config to a proper instance.</p>\n","params":[{"tagname":"params","type":"String/Object/Ext.app.ViewModel","name":"viewModel","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.app.ViewModel","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSession","lookupSession","lookupViewModel"],"readonly":null,"required":null,"template":null,"id":"method-applyViewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Transforms a ViewModel config to a proper instance. ...","html_type":null},{"tagname":"method","name":"attachChildEls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/ElementContainer.js","linenr":281}],"doc":"<p>Sets references to elements inside the component.</p>\n","params":[{"tagname":null,"type":"Object","name":"el","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"owner","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls"],"readonly":null,"required":null,"template":null,"id":"method-attachChildEls","owner":"Ext.util.ElementContainer","overrides":null,"short_doc":"Sets references to elements inside the component. ...","html_type":null},{"tagname":"method","name":"attachNameRef","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":146}],"doc":"<p>Sets up a component name reference.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component to reference.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-attachNameRef","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Sets up a component name reference. ...","html_type":null},{"tagname":"method","name":"attachReference","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":181}],"doc":"<p>Sets up a component reference.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component to reference.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-attachReference","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Sets up a component reference. ...","html_type":null},{"tagname":"method","name":"batchChanges","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":555}],"doc":"<p>A utility for grouping a set of modifications which may trigger value changes into a single\ntransaction, to prevent excessive firing of <a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change</a> events. This is useful\nfor instance if the field has sub-fields which are being updated as a group;\nyou don't want the container field to check its own changed state for each subfield change.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call with change checks suspended.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>","errorchange","<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["checkChange"],"readonly":null,"required":null,"template":null,"id":"method-batchChanges","owner":"Ext.form.field.Field","overrides":null,"short_doc":"A utility for grouping a set of modifications which may trigger value changes into a single\ntransaction, to prevent e...","html_type":null},{"tagname":"method","name":"beforeBlur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1218}],"doc":"<p>Template method to do any pre-blur processing.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-beforeBlur","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any pre-blur processing. ...","html_type":null},{"tagname":"method","name":"beforeDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2921}],"doc":"<p>Invoked before the Component is destroyed.\nThis method is deprecated, override <a href=\"#!/api/Ext.Component-method-onDestroy\" rel=\"Ext.Component-method-onDestroy\" class=\"docClass\">onDestroy</a> instead.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please override <a href=\"#!/api/Ext.Component-method-onDestroy\" rel=\"Ext.Component-method-onDestroy\" class=\"docClass\">onDestroy</a> instead</p>\n","version":"6.2.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-beforeDestroy","owner":"Ext.Component","overrides":null,"short_doc":"Invoked before the Component is destroyed. ...","html_type":null},{"tagname":"method","name":"beforeFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1234}],"doc":"<p>Template method to do any pre-focus processing.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-beforeFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any pre-focus processing. ...","html_type":null},{"tagname":"method","name":"beforeInitConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2331}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2331,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-beforeInitConfig","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"beforeLabelRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":808}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":808,"fires":[],"method_calls":["addCls","getInherited","hasVisibleLabel","setFieldDefaults"],"readonly":null,"required":null,"template":null,"id":"method-beforeLabelRender","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"beforeLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2932}],"doc":"<p>Occurs before componentLayout is run. In previous releases, this method could\nreturn <code>false</code> to prevent its layout but that is not supported in Ext JS 4.1 or\nhigher. This method is simply a notification of the impending layout to give the\ncomponent a chance to adjust the DOM. Ideally, DOM reads should be avoided at this\ntime to reduce expensive document reflows.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onBeforeFloatLayout"],"readonly":null,"required":null,"template":true,"id":"method-beforeLayout","owner":"Ext.Component","overrides":null,"short_doc":"Occurs before componentLayout is run. ...","html_type":null},{"tagname":"method","name":"beforeRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1136}],"doc":"<p>Allows additional behavior before rendering.</p>\n\n<p><strong>Note:</strong> If the Component has a <a href=\"#!/api/Ext.Component-cfg-controller\" rel=\"Ext.Component-cfg-controller\" class=\"docClass\">ViewController</a>\nand the controller has a <a href=\"#!/api/Ext.app.ViewController-method-beforeRender\" rel=\"Ext.app.ViewController-method-beforeRender\" class=\"docClass\">beforeRender</a>\nmethod it will be called passing the Component as the single param.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1136,"fires":[],"method_calls":["applyTargetCls","callParent","getLayout"],"readonly":null,"required":null,"template":true,"id":"method-beforeRender","owner":"Ext.container.Container","overrides":[{"name":"beforeRender","owner":"Ext.util.Renderable","link":"<a href=\"#!/api/Ext.util.Renderable-method-beforeRender\" rel=\"Ext.util.Renderable-method-beforeRender\" class=\"docClass\">Ext.util.Renderable.beforeRender</a>"}],"short_doc":"Allows additional behavior before rendering. ...","html_type":null},{"tagname":"method","name":"beforeReset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":346}],"doc":"<p>Template method before a field is reset.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-beforeReset","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Template method before a field is reset. ...","html_type":null},{"tagname":"method","name":"beforeSetPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2948}],"doc":"<p>Template method called before a Component is positioned.</p>\n\n<p>Ensures that the position is adjusted so that the Component is constrained if so configured.</p>\n","params":[{"tagname":null,"type":"Object","name":"x","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"y","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["adjustPosition","calculateConstrainedPosition"],"readonly":null,"required":null,"template":null,"id":"method-beforeSetPosition","owner":"Ext.Component","overrides":null,"short_doc":"Template method called before a Component is positioned. ...","html_type":null},{"tagname":"method","name":"beforeShow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3009}],"doc":"<p>Invoked before the Component is shown.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-beforeShow","owner":"Ext.Component","overrides":null,"short_doc":"Invoked before the Component is shown. ...","html_type":null},{"tagname":"method","name":"blur","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":921}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["canFocus","getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-blur","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"bubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3018}],"doc":"<p>Bubbles up the component/container hierarchy, calling the specified function with each\ncomponent. The scope (<em>this</em>) of function call will be the scope provided or the current\ncomponent. The arguments to the function will be the args provided or the current component.\nIf the function returns false at any point, the bubble is stopped.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope of the function. Defaults to current node.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>The args to call the function with. Defaults to passing the current\ncomponent.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleTarget"],"readonly":null,"required":null,"template":null,"id":"method-bubble","owner":"Ext.Component","overrides":[{"name":"bubble","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-bubble\" rel=\"Ext.mixin.Inheritable-method-bubble\" class=\"docClass\">Ext.mixin.Inheritable.bubble</a>"}],"short_doc":"Bubbles up the component/container hierarchy, calling the specified function with each\ncomponent. ...","html_type":null},{"tagname":"method","name":"cacheRefEls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":933}],"doc":"<p>Ensures that all elements with \"data-ref\" attributes get loaded into the cache.\nThis really helps on IE8 where <code>getElementById</code> is a search not a lookup. By\npopulating our cache with one search of the DOM we then have random access to\nthe elements as we do our <code>childEls</code> wire up.</p>\n","params":[{"tagname":null,"type":"Object","name":"el","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-cacheRefEls","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Ensures that all elements with \"data-ref\" attributes get loaded into the cache. ...","html_type":null},{"tagname":"method","name":"calculateAnchorXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":264}],"doc":"<p>Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Number","name":"extraX","doc":"<p>value to be added to the x coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"extraY","doc":"<p>value to be added to the y coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-calculateAnchorXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values. ...","html_type":null},{"tagname":"method","name":"calculateConstrainedPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":472}],"doc":"<p>Calculates the new [x,y] position to move this Positionable into a constrain region.</p>\n\n<p>By default, this Positionable is constrained to be within the container it was added to,\nor the element it was rendered to.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>An alternative constraint may be passed.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Ext.util.Region","name":"constrainTo","doc":"<p>The Element\nor <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this Component is to be constrained.\nDefaults to the element into which this Positionable was rendered, or this Component's\n<a href=\"#!/api/Ext.Component-cfg-constrainTo\" rel=\"Ext.Component-cfg-constrainTo\" class=\"docClass\">Ext.Component.constrainTo</a>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedPosition","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to coerce into constraints instead of using this Positionable's current position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>The proposedPosition is local <em>(relative to floatParent\nif a floating Component)</em></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedSize","doc":"<p>A proposed <code>[width, height]</code> size to use when calculating\nconstraints instead of using this Positionable's current size.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, the new <code>[X, Y]</code> position\nwithin constraints if possible, giving priority to keeping the top and left edge\nin the constrain region. Otherwise, <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getPosition","reverseTranslateXY"],"readonly":null,"required":null,"template":null,"id":"method-calculateConstrainedPosition","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Calculates the new [x,y] position to move this Positionable into a constrain region. ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"canFocus","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":233}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"skipVisibility","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"includeFocusTarget","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":233,"fires":[],"method_calls":["findFocusTarget","isDestructing","isDisabled","isVisible"],"readonly":null,"required":null,"template":null,"id":"method-canFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"cancelFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1205}],"doc":"<p>Cancel any deferred focus on this component</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusTask"],"readonly":null,"required":null,"template":null,"id":"method-cancelFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Cancel any deferred focus on this component ...","html_type":null},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"o","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"cascade","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1157}],"doc":"<p>Cascades down the component/container heirarchy from this component (passed in\nthe first call), calling the specified function with each component. The scope\n(this reference) of the function call will be the scope provided or the current\ncomponent. The arguments to the function will be the args provided or the current\ncomponent. If the function returns false at any point, the cascade is stopped on\nthat branch.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope of the function(defaults to current component)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"origArgs","doc":"<p>The args to call the function with. The current component\nalways passed as the last argument.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Container","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-cascade","owner":"Ext.container.Container","overrides":null,"short_doc":"Cascades down the component/container heirarchy from this component (passed in\nthe first call), calling the specified...","html_type":null},{"tagname":"method","name":"center","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":612}],"doc":"<p>Center this Component in its container.</p>\n","params":[],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["getAlignToXY","isVisible","setPagePosition"],"readonly":null,"required":null,"template":null,"id":"method-center","owner":"Ext.util.Floating","overrides":null,"short_doc":"Center this Component in its container. ...","html_type":null},{"tagname":"method","name":"changeConstraint","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6396}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"newValue","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldValue","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"constrainMethod","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"styleName","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"sizeName","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setStyle","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-changeConstraint","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"checkChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":364}],"doc":"<p>Checks whether the value of the field has changed since the last time it was checked.\nIf the value has changed, it:</p>\n\n<ol>\n<li>Fires the <a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change event</a>,</li>\n<li>Performs validation if the <a href=\"#!/api/Ext.form.field.Field-cfg-validateOnChange\" rel=\"Ext.form.field.Field-cfg-validateOnChange\" class=\"docClass\">validateOnChange</a> config is enabled, firing the\n<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange event</a> if the validity has changed, and</li>\n<li>Checks the <a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">dirty state</a> of the field and fires the\n<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange event</a> if it has changed.</li>\n</ol>\n\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>","errorchange","<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["didValueChange","fireEvent","getValue","onChange"],"readonly":null,"required":null,"template":null,"id":"method-checkChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Checks whether the value of the field has changed since the last time it was checked. ...","html_type":null},{"tagname":"method","name":"checkDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":449}],"doc":"<p>Checks the <a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">isDirty</a> state of the field and if it has changed since the last time\nit was checked, fires the <a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a> event.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["fireEvent","isDirty","onDirtyChange"],"readonly":null,"required":null,"template":null,"id":"method-checkDirty","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Checks the isDirty state of the field and if it has changed since the last time\nit was checked, fires the dirtychange...","html_type":null},{"tagname":"method","name":"checkValidityChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":536}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"isValid","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":536,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["fireEvent"],"readonly":null,"required":null,"template":null,"id":"method-checkValidityChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"child","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":62}],"doc":"<p>Retrieves the first direct child of this container which matches the passed selector\nor component. The passed in selector must comply with an <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector,\nor it can be an actual <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Component","name":"selector","doc":"<p>An <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector. If no selector is\nspecified, the first child will be returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The matching child <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> (or <code>null</code> if no match was found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getQueryRoot","matchById"],"readonly":null,"required":null,"template":null,"id":"method-child","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Retrieves the first direct child of this container which matches the passed selector\nor component. ...","html_type":null},{"tagname":"method","name":"cleanupField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":201}],"doc":"<p>Cleans up values initialized by this Field mixin on the current instance.\nComponents using this mixin should call this method before being destroyed.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-cleanupField","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Cleans up values initialized by this Field mixin on the current instance. ...","html_type":null},{"tagname":"method","name":"clearClip","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":1093}],"doc":"<p>Clears any clipping applied to this component by <a href=\"#!/api/Ext.util.Positionable-method-clipTo\" rel=\"Ext.util.Positionable-method-clipTo\" class=\"docClass\">clipTo</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clearClip","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Clears any clipping applied to this component by clipTo. ...","html_type":null},{"tagname":"method","name":"clearDelegatedListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":61}],"doc":"<p>Clears all listeners that were attached using the \"delegate\" event option.\nUsers should not invoke this method directly.  It is called automatically as\npart of normal <a href=\"#!/api/Ext.util.Observable-method-clearListeners\" rel=\"Ext.util.Observable-method-clearListeners\" class=\"docClass\">clearListeners</a>\nprocessing.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clearDelegatedListeners","owner":"Ext.mixin.ComponentDelegation","overrides":null,"short_doc":"Clears all listeners that were attached using the \"delegate\" event option. ...","html_type":null},{"tagname":"method","name":"clearInvalid","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":635}],"doc":"<p>Clear any invalid styles/messages for this field. Components using this mixin should\nimplement this method to update the components rendering to clear any existing messages.</p>\n\n<p><strong>Note</strong>: this method does not cause the Field's <a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validate</a> or <a href=\"#!/api/Ext.form.field.Field-method-isValid\" rel=\"Ext.form.field.Field-method-isValid\" class=\"docClass\">isValid</a>\nmethods to return <code>true</code> if the value does not <em>pass</em> validation. So simply clearing\na field's errors will not necessarily allow submission of forms submitted with the\n<a href=\"#!/api/Ext.form.action.Submit-cfg-clientValidation\" rel=\"Ext.form.action.Submit-cfg-clientValidation\" class=\"docClass\">Ext.form.action.Submit.clientValidation</a> option set.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clearInvalid","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Clear any invalid styles/messages for this field. ...","html_type":null},{"tagname":"method","name":"clearListeners","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3044}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3044,"fires":[],"method_calls":["clearManagedListeners"],"readonly":null,"required":null,"template":null,"id":"method-clearListeners","owner":"Ext.Component","overrides":[{"name":"clearListeners","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-clearListeners\" rel=\"Ext.mixin.Observable-method-clearListeners\" class=\"docClass\">Ext.mixin.Observable.clearListeners</a>"}],"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all managed listeners for this object. ...","html_type":null},{"tagname":"method","name":"clipTo","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":972}],"doc":"<p>Clips this Component/Element to fit within the passed element's or component's view area</p>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Element/Ext.util.Region","name":"clippingEl","doc":"<p>The Component or element\nor Region which should clip this element even if this element is outside the bounds\nof that region.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"sides","doc":"<p>The sides to clip 1=top, 2=right, 4=bottom, 8=left.</p>\n\n<p>This is to support components being clipped to their logical owner, such as a grid row\neditor when the row being edited scrolls out of sight. The editor should be clipped\nat the edge of the scrolling element.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clipTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Clips this Component/Element to fit within the passed element's or component's view area ...","html_type":null},{"tagname":"method","name":"clipToScroller","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":776}],"doc":"<p>Clips this floating element to the scrolling element in line with how\nits topmost anchoring element is clipped.</p>\n","params":[{"tagname":null,"type":"Object","name":"scroller","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearClip","clipTo"],"readonly":null,"required":null,"template":null,"id":"method-clipToScroller","owner":"Ext.util.Floating","overrides":null,"short_doc":"Clips this floating element to the scrolling element in line with how\nits topmost anchoring element is clipped. ...","html_type":null},{"tagname":"method","name":"cloneConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3051}],"doc":"<p>Clone the current component using the original config values passed into this instance\nby default.</p>\n","params":[{"tagname":"params","type":"Object","name":"overrides","doc":"<p>A new config containing any properties to override in the cloned\nversion. An id property can be passed on this object, otherwise one will be generated\nto avoid duplicates.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>clone The cloned copy of this component</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-cloneConfig","owner":"Ext.Component","overrides":null,"short_doc":"Clone the current component using the original config values passed into this instance\nby default. ...","html_type":null},{"tagname":"method","name":"constrainBox","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":854}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"box","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["calculateConstrainedPosition"],"readonly":null,"required":null,"template":null,"id":"method-constrainBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"constructPlugin","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6422}],"doc":"\n","params":[{"tagname":"params","type":"String/Object","name":"plugin","doc":"<p>string or config object containing a ptype property.</p>\n\n<p>Constructs a plugin according to the passed config object/ptype string.</p>\n\n<p>Ensures that the constructed plugin always has a <code>cmp</code> reference back to this component.\nThe setting up of this is done in PluginManager. The PluginManager ensures that\na reference to this component is passed to the constructor. It also ensures that\nthe plugin's <code>setCmp</code> method (if any) is called.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-constructPlugin","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"constructPlugins","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6449}],"doc":"<p>Returns an array of fully constructed plugin instances. This converts any configs\ninto their appropriate instances.</p>\n\n<p>It does not mutate the plugins array. It creates a new array.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["constructPlugin"],"readonly":null,"required":null,"template":null,"id":"method-constructPlugins","owner":"Ext.Component","overrides":null,"short_doc":"Returns an array of fully constructed plugin instances. ...","html_type":null},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1197}],"doc":"<p>Determines whether the passed Component is either an immediate child of this Container,\nor whether it is a descendant.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"comp","doc":"<p>The Component to test.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>Pass <code>true</code> to test for the Component being a descendant\nat any level.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the passed Component is contained at the specified level.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["cascade"],"readonly":null,"required":null,"template":null,"id":"method-contains","owner":"Ext.container.Container","overrides":null,"short_doc":"Determines whether the passed Component is either an immediate child of this Container,\nor whether it is a descendant. ...","html_type":null},{"tagname":"method","name":"convertPositionSpec","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":23}],"doc":"<p><strong>Defined in override Ext.rtl.Component.</strong></p>\n","params":[{"tagname":null,"type":"Object","name":"posSpec","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":23,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-convertPositionSpec","owner":"Ext.Component","overrides":[{"name":"convertPositionSpec","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-convertPositionSpec\" rel=\"Ext.util.Positionable-method-convertPositionSpec\" class=\"docClass\">Ext.util.Positionable.convertPositionSpec</a>"}],"short_doc":"Defined in override Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"beginEnd","doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2030}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.Base-property-clearPropertiesOnDestroy\" rel=\"Ext.Base-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["$reap","unlink"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>"},{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-method-destroy\" rel=\"Ext.util.AbstractMixedCollection-method-destroy\" class=\"docClass\">Ext.util.AbstractMixedCollection.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-method-destroy\" rel=\"Ext.Widget-method-destroy\" class=\"docClass\">Ext.Widget.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ...","html_type":null},{"tagname":"method","name":"destroyFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1267}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1267,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-destroyFocusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"didValueChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":390}],"doc":"<p>Checks if the value has changed. Allows subclasses to override for\nany more complex logic.</p>\n","params":[{"tagname":null,"type":"Object","name":"newVal","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldVal","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isEqual"],"readonly":null,"required":null,"template":null,"id":"method-didValueChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Checks if the value has changed. ...","html_type":null},{"tagname":"method","name":"disable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1227}],"doc":"<p>Disables all child input fields and buttons.</p>\n","params":[{"tagname":"params","type":"Object","name":"silent","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"fromParent","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["activateFocusableContainer","callParent","getChildItemsToDisable"],"readonly":null,"required":null,"template":null,"id":"method-disable","owner":"Ext.container.Container","overrides":[{"name":"disable","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-disable\" rel=\"Ext.Component-method-disable\" class=\"docClass\">Ext.Component.disable</a>"}],"short_doc":"Disables all child input fields and buttons. ...","html_type":null},{"tagname":"method","name":"disableFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":158}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":158,"fires":[],"method_calls":["removeFocusCls","revertFocus"],"readonly":null,"required":null,"template":null,"id":"method-disableFocusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"doApplyRenderTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":460}],"doc":"<p>Called from the selected frame generation template to insert this Component's inner structure\ninside the framing structure.</p>\n\n<p>When framing is used, a selected frame generation template is used as the primary template\nof the <a href=\"#!/api/Ext.util.Renderable-method-getElConfig\" rel=\"Ext.util.Renderable-method-getElConfig\" class=\"docClass\">getElConfig</a> instead of the configured <a href=\"#!/api/Ext.Component-cfg-renderTpl\" rel=\"Ext.Component-cfg-renderTpl\" class=\"docClass\">renderTpl</a>.\nThe renderTpl is invoked by this method which is injected into the framing template.</p>\n","params":[{"tagname":null,"type":"Object","name":"out","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"values","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-doApplyRenderTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Called from the selected frame generation template to insert this Component's inner structure\ninside the framing stru...","html_type":null},{"tagname":"method","name":"doAutoRender","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":960}],"doc":"<p>Handles autoRender.\nFloating Components may have an ownerCt. If they are asking to be constrained,\nconstrain them within that ownerCt, and have their z-index managed locally.\nFloating Components are always rendered to document.body</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["afterrender","beforerender","move","render"],"method_calls":["render"],"readonly":null,"required":null,"template":null,"id":"method-doAutoRender","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Handles autoRender. ...","html_type":null},{"tagname":"method","name":"doComponentLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7113}],"doc":"<p>This method needs to be called whenever you change something on this\ncomponent that equires the Component's layout to be recalculated.</p>\n","params":[],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-updateLayout\" rel=\"Ext.Component-method-updateLayout\" class=\"docClass\">updateLayout</a> instead.</p>\n","version":"4.1"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-doComponentLayout","owner":"Ext.Component","overrides":null,"short_doc":"This method needs to be called whenever you change something on this\ncomponent that equires the Component's layout to...","html_type":null},{"tagname":"method","name":"doConstrain","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":477}],"doc":"<p>Moves this floating Component into a constrain region.</p>\n\n<p>By default, this Component is constrained to be within the container it was added to,\nor the element it was rendered to.</p>\n\n<p>An alternative constraint may be passed.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Ext.util.Region","name":"constrainTo","doc":"<p>The Element\nor <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this Component is to be constrained.\nDefaults to the element into which this floating Component was rendered.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["calculateConstrainedPosition","setPosition"],"readonly":null,"required":null,"template":null,"id":"method-doConstrain","owner":"Ext.util.Floating","overrides":null,"short_doc":"Moves this floating Component into a constrain region. ...","html_type":null},{"tagname":"method","name":"doDestroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1101}],"doc":"<p>Perform the actual destruction sequence.</p>\n\n<p>As a rule of thumb, subclasses should destroy their child Components and/or other objects\nbefore calling parent method. Any object references will be nulled after this method\nhas finished, to prevent the possibility of memory leaks.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1101,"fires":[],"method_calls":["callParent","destroyFocusableContainer","doRemove"],"readonly":null,"required":null,"template":null,"id":"method-doDestroy","owner":"Ext.container.Container","overrides":[{"name":"doDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-doDestroy\" rel=\"Ext.Component-method-doDestroy\" class=\"docClass\">Ext.Component.doDestroy</a>"}],"short_doc":"Perform the actual destruction sequence. ...","html_type":null},{"tagname":"method","name":"doFireDelegatedEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":84}],"doc":"<p>Fires a delegated event.  Users should not invoke this method directly.  It\nis called automatically by the framework as needed (see the \"delegate\" event\noption of <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> for more\ndetails.</p>\n","params":[{"tagname":null,"type":"Object","name":"eventName","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-doFireDelegatedEvent","owner":"Ext.mixin.ComponentDelegation","overrides":null,"short_doc":"Fires a delegated event. ...","html_type":null},{"tagname":"method","name":"doFireEvent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3313}],"doc":"<p>Continue to fire event.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3313,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-doFireEvent","owner":"Ext.Component","overrides":[{"name":"doFireEvent","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-doFireEvent\" rel=\"Ext.mixin.Observable-method-doFireEvent\" class=\"docClass\">Ext.mixin.Observable.doFireEvent</a>"}],"short_doc":"Continue to fire event. ...","html_type":null},{"tagname":"method","name":"doRemove","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2212}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"component","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"flags","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onFocusableChildRemove","onRemove"],"readonly":null,"required":null,"template":null,"id":"method-doRemove","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"doRestoreDisplay","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":1076}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1076,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-doRestoreDisplay","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"down","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":90}],"doc":"<p>Retrieves the first descendant of this container which matches the passed selector.\nThe passed in selector must comply with an <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector, or it can be\nan actual <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Component","name":"selector","doc":"<p>An <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector or <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.\nIf no selector is\nspecified, the first child will be returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The matching descendant <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> (or <code>null</code> if no match\nwas found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefItems","matchById","query"],"readonly":null,"required":null,"template":null,"id":"method-down","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Retrieves the first descendant of this container which matches the passed selector. ...","html_type":null},{"tagname":"method","name":"eachBox","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":284}],"doc":"<p>Convenience function which calls the given function for every checkbox in the group</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>scope object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-eachBox","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"Convenience function which calls the given function for every checkbox in the group ...","html_type":null},{"tagname":"method","name":"enable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1255}],"doc":"<p>Enables all child input fields and buttons.</p>\n","params":[{"tagname":"params","type":"Object","name":"silent","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"fromParent","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["activateFocusableContainer","callParent","getChildItemsToDisable"],"readonly":null,"required":null,"template":null,"id":"method-enable","owner":"Ext.container.Container","overrides":[{"name":"enable","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-enable\" rel=\"Ext.Component-method-enable\" class=\"docClass\">Ext.Component.enable</a>"}],"short_doc":"Enables all child input fields and buttons. ...","html_type":null},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-enableBubble","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...","html_type":null},{"tagname":"method","name":"enableFocusable","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":156}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":156,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-enableFocusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"ensureAttachedToBody","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":866}],"doc":"<p>Ensures that this component is attached to <code>document.body</code>. If the component was\nrendered to <a href=\"#!/api/Ext-method-getDetachedBody\" rel=\"Ext-method-getDetachedBody\" class=\"docClass\">Ext.getDetachedBody</a>, then it will be appended to <code>document.body</code>.\nAny configured position is also restored.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"runLayout","doc":"<p>True to run the component's layout.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["setPosition","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-ensureAttachedToBody","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Ensures that this component is attached to document.body. ...","html_type":null},{"tagname":"method","name":"extractFileInput","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":586}],"doc":"<p>Only relevant if the instance's <a href=\"#!/api/Ext.form.field.Field-method-isFileUpload\" rel=\"Ext.form.field.Field-method-isFileUpload\" class=\"docClass\">isFileUpload</a> method returns true. Returns\na reference to the file input DOM element holding the user's selected file.\nThe input will be appended into the submission form and will not be returned, so this method\nshould also create a replacement.</p>\n","params":[],"return":{"type":"HTMLElement","name":"return","doc":"\n","properties":null,"html_type":"HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-extractFileInput","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Only relevant if the instance's isFileUpload method returns true. ...","html_type":null},{"tagname":"method","name":"findFocusTarget","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":683}],"doc":"<p>Finds an alternate Component to focus if this Component is disabled while focused, or\nfocused while disabled, or otherwise unable to focus.</p>\n\n<p>In both cases, focus must not be lost to document.body, but must move to an intuitively\nconnectible Component, either a sibling, or uncle or nephew.</p>\n\n<p>This is both for the convenience of keyboard users, and also for when focus is tracked\nwithin a Component tree such as for ComboBoxes and their dropdowns.</p>\n\n<p>For example, a ComboBox with a PagingToolbar in is BoundList. If the \"Next Page\"\nbutton is hit, the LoadMask shows and focuses, the next page is the last page, so\nthe \"Next Page\" button is disabled. When the LoadMask hides, it attempt to focus the\nlast focused Component which is the disabled \"Next Page\" button. In this situation,\nfocus should move to a sibling within the PagingToolbar.</p>\n","params":[],"return":{"type":"Ext.Component","name":"return","doc":"<p>A closely related focusable Component to which focus can move.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-findFocusTarget","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Finds an alternate Component to focus if this Component is disabled while focused, or\nfocused while disabled, or othe...","html_type":null},{"tagname":"method","name":"findParentBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3379}],"doc":"<p>Find a container above this component at any level by a custom function. If the passed\nfunction returns true, the container will be returned.</p>\n\n<p>See also the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a> method.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The custom function to call with the arguments\n(container, this component).</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.container.Container","name":"return","doc":"<p>The first Container for which the custom function\nreturns true</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-findParentBy","owner":"Ext.Component","overrides":null,"short_doc":"Find a container above this component at any level by a custom function. ...","html_type":null},{"tagname":"method","name":"findParentByType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3402}],"doc":"<p>Find a container above this component at any level by xtype or class</p>\n\n<p>See also the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a> method.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"xtype","doc":"<p>The xtype string for a component, or the class\nof the component directly</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.container.Container","name":"return","doc":"<p>The first Container which matches the given xtype or class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findParentBy","up"],"readonly":null,"required":null,"template":null,"id":"method-findParentByType","owner":"Ext.Component","overrides":null,"short_doc":"Find a container above this component at any level by xtype or class\n\nSee also the up method. ...","html_type":null},{"tagname":"method","name":"findPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3419}],"doc":"<p>Retrieves plugin from this component's collection by its <code>ptype</code>.</p>\n\n<pre><code>var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    store: {\n        fields: ['name'],\n        data: [{\n            name: 'Scott Pilgrim'\n        }]\n    },\n    columns: [{\n        header: 'Name',\n        dataIndex: 'name',\n        editor: 'textfield',\n        flex: 1\n    }],\n    selType: 'cellmodel',\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 1,\n        id: 'myplugin'\n    }],\n    height: 200,\n    width: 400,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n\ngrid.findPlugin('cellediting');  // the cellediting plugin\n</code></pre>\n\n<p><strong>Note:</strong> See also <a href=\"#!/api/Ext.Component-method-getPlugin\" rel=\"Ext.Component-method-getPlugin\" class=\"docClass\">getPlugin</a></p>\n","params":[{"tagname":"params","type":"String","name":"ptype","doc":"<p>The Plugin's <code>ptype</code> as specified by the class's\n<a href=\"#!/api/Ext.Class-cfg-alias\" rel=\"Ext.Class-cfg-alias\" class=\"docClass\">alias</a> configuration.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>undefined</code> if not found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-findPlugin","owner":"Ext.Component","overrides":null,"short_doc":"Retrieves plugin from this component's collection by its ptype. ...","html_type":null},{"tagname":"method","name":"finishRender","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1048}],"doc":"<p>This method visits the rendered component tree in a \"top-down\" order. That is, this\ncode runs on a parent component before running on a child. This method calls the\n<a href=\"#!/api/Ext.util.Renderable-method-onRender\" rel=\"Ext.util.Renderable-method-onRender\" class=\"docClass\">onRender</a> method of each component.</p>\n","params":[{"tagname":"params","type":"Number","name":"containerIdx","doc":"<p>The index into the Container items of this Component.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["afterrender","move","render"],"method_calls":["afterRender","cacheRefEls","fireEvent","getTargetEl","initEvents","initOverflow","initRenderData","initRenderTpl","onRender","wrapPrimaryEl"],"readonly":null,"required":null,"template":null,"id":"method-finishRender","owner":"Ext.util.Renderable","overrides":null,"short_doc":"This method visits the rendered component tree in a \"top-down\" order. ...","html_type":null},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'before'","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList...","html_type":null},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doFireEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameter list. ...","html_type":null},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"fireHierarchyEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6562}],"doc":"<p>This method fires an event on <code><a href=\"#!/api/Ext.GlobalEvents\" rel=\"Ext.GlobalEvents\" class=\"docClass\">Ext.GlobalEvents</a></code> allowing interested parties to know\nof certain critical events for this component. This is done globally because the\n(few) listeners can immediately receive the event rather than bubbling the event\nonly to reach the top and have no listeners.</p>\n\n<p>The main usage for these events is to do with floating components. For example, the\nload mask is a floating component. The component it is masking may be inside several\ncontainers. As such, they need to know when component is hidden, either directly, or\nvia a parent container being hidden. To do this they subscribe to these events and\nfilter out the appropriate container.</p>\n\n<p>This functionality is contained in Component (as opposed to Container) because a\nComponent can be the ownerCt for a floating component (loadmask), and the loadmask\nneeds to know when its owner is shown/hidden so that its hidden state can be\nsynchronized.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The event name.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"4.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-fireHierarchyEvent","owner":"Ext.Component","overrides":null,"short_doc":"This method fires an event on Ext.GlobalEvents allowing interested parties to know\nof certain critical events for thi...","html_type":null},{"tagname":"method","name":"fitContainer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":652}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["setBox"],"readonly":null,"required":null,"template":null,"id":"method-fitContainer","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1146}],"doc":"<p>Try to focus this component.</p>\n\n<p>If this component is disabled, a close relation will be targeted for focus instead\nto keep focus localized for keyboard users.</p>\n","params":[{"tagname":"params","type":"Mixed","name":"selectText","doc":"<p>If applicable, <code>true</code> to also select all the text in this\ncomponent, or an array consisting of start and end (defaults to start) position of selection.</p>\n","html_type":"Mixed","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Number","name":"delay","doc":"<p>Delay the focus this number of milliseconds (true for\n10 milliseconds).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>Only needed if the <code>delay</code> parameter is used. A function to call\nupon focus.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"scope","doc":"<p>Only needed if the <code>delay</code> parameter is used. The scope (<code>this</code>\nreference) in which to execute the callback.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The focused Component. Usually <code>this</code> Component. Some Containers may\ndelegate focus to a descendant Component (<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s can do this\nthrough their <a href=\"#!/api/Ext.window.Window-cfg-defaultFocus\" rel=\"Ext.window.Window-cfg-defaultFocus\" class=\"docClass\">defaultFocus</a> config option. If this\ncomponent is disabled, a closely related component will be focused and that will be returned.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["cancelFocus","getFocusTask"],"readonly":null,"required":null,"template":null,"id":"method-focus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Try to focus this component. ...","html_type":null},{"tagname":"method","name":"forceComponentLayout","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7134}],"doc":"<p>Updates this component's layout. If this update affects this components <a href=\"#!/api/Ext.Component-property-ownerCt\" rel=\"Ext.Component-property-ownerCt\" class=\"docClass\">ownerCt</a>,\nthat component's <code>updateLayout</code> method will be called to perform the layout instead.\nOtherwise, just this component (and its child items) will layout.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>An object with layout options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Boolean","name":"defer","doc":"<p><code>true</code> if this layout should be deferred.</p>\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"isRoot","doc":"<p><code>true</code> if this layout should be the root of the layout.</p>\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-updateLayout\" rel=\"Ext.Component-method-updateLayout\" class=\"docClass\">updateLayout</a> instead.</p>\n","version":"4.1"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-forceComponentLayout","owner":"Ext.Component","overrides":null,"short_doc":"Updates this component's layout. ...","html_type":null},{"tagname":"method","name":"getAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2114}],"doc":"<p>Retrieves the named <a href=\"#!/api/Ext.Action\" rel=\"Ext.Action\" class=\"docClass\">Action</a> from this view or any ancestor which\nhas that named Action. See <a href=\"#!/api/Ext.container.Container-cfg-actions\" rel=\"Ext.container.Container-cfg-actions\" class=\"docClass\">actions</a></p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-getAction","owner":"Ext.container.Container","overrides":null,"short_doc":"Retrieves the named Action from this view or any ancestor which\nhas that named Action. ...","html_type":null},{"tagname":"method","name":"getActions","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":460}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.container.Container-cfg-actions\" rel=\"Ext.container.Container-cfg-actions\" class=\"docClass\">actions</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getActions","owner":"Ext.container.Container","overrides":null,"short_doc":"Returns the value of actions. ...","html_type":null},{"tagname":"method","name":"getActiveAnimation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":385}],"doc":"<p>Returns the current animation if this object has any effects actively running or queued,\nelse returns false.</p>\n","params":[],"return":{"type":"Ext.fx.Anim/Boolean","name":"return","doc":"<p>Anim if element has active effects, else false</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getActiveAnimation","owner":"Ext.util.Animate","overrides":null,"short_doc":"Returns the current animation if this object has any effects actively running or queued,\nelse returns false. ...","html_type":null},{"tagname":"method","name":"getActiveCounter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":130}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Floating-cfg-activeCounter\" rel=\"Ext.util.Floating-cfg-activeCounter\" class=\"docClass\">activeCounter</a>.</p>\n","params":[],"return":{"type":"Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getActiveCounter","owner":"Ext.util.Floating","overrides":null,"short_doc":"Returns the value of activeCounter. ...","html_type":null},{"tagname":"method","name":"getActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":882}],"doc":"<p>Gets the active error message for this component, if any. This does not trigger validation\non its own, it merely returns any message that the component may already hold.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The active error message on the component; if there is no error,\nan empty string is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getActiveError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Gets the active error message for this component, if any. ...","html_type":null},{"tagname":"method","name":"getActiveErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":915}],"doc":"<p>Gets an Array of any active error messages currently applied to the field. This does not\ntrigger validation on its own, it merely returns any messages that the component\nmay already hold.</p>\n","params":[],"return":{"type":"String[]","name":"return","doc":"<p>The active error messages on the component; if there are no errors,\nan empty Array is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getActiveErrors","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Gets an Array of any active error messages currently applied to the field. ...","html_type":null},{"tagname":"method","name":"getAlignToRegion","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":322}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"alignToEl","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"posSpec","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"offset","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"minHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":322,"fires":[],"method_calls":["convertPositionSpec","getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAlignToRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getAlignToXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":307}],"doc":"<p>Gets the x,y coordinates to align this element with another element. See\n<a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for more info on the supported position values.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"alignToEl","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"position","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y]</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAlignToRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAlignToXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Gets the x,y coordinates to align this element with another element. ...","html_type":null},{"tagname":"method","name":"getAlwaysOnTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":137}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.util.Floating-cfg-alwaysOnTop\" rel=\"Ext.util.Floating-cfg-alwaysOnTop\" class=\"docClass\">alwaysOnTop</a>.</p>\n","params":[],"return":{"type":"Boolean/Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAlwaysOnTop","owner":"Ext.util.Floating","overrides":null,"short_doc":"Returns the value of alwaysOnTop. ...","html_type":null},{"tagname":"method","name":"getAnchor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":61}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":61,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnchor","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getAnchorToXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6292},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":31}],"doc":"<p><editor-fold desc=\"Positionable Methods\"></editor></p>\n\n<hr />\n\n<p> Begin Positionable methods</p>\n\n<hr />\n\n<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"el","doc":"<p>The element</p>\n\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnchorToXY","owner":"Ext.Component","overrides":[{"name":"getAnchorToXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getAnchorToXY\" rel=\"Ext.util.Positionable-method-getAnchorToXY\" class=\"docClass\">Ext.util.Positionable.getAnchorToXY</a>"}],"short_doc":"Begin Positionable methods\n\n\n\nOverridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"getAnchorXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":375}],"doc":"<p>Gets the x,y coordinates specified by the anchor position on the element.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAnchorXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Gets the x,y coordinates specified by the anchor position on the element. ...","html_type":null},{"tagname":"method","name":"getAnimateTarget","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3466}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"target","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3466,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnimateTarget","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getAnimationProps","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":320}],"doc":"<p>Get animation properties</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnimationProps","owner":"Ext.util.Animate","overrides":null,"short_doc":"Get animation properties ...","html_type":null},{"tagname":"method","name":"getAriaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaAttributes\" rel=\"Ext.mixin.Accessible-cfg-ariaAttributes\" class=\"docClass\">ariaAttributes</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAriaAttributes","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"Returns the value of ariaAttributes. ...","html_type":null},{"tagname":"method","name":"getAriaLabelEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":81}],"doc":"<p>Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements.</p>\n","params":[{"tagname":"params","type":"Function/String/String[]","name":"reference","doc":"<p>Component reference,\nor array of component references, or a function that should return\nthe proper attribute string. The function will be called in the\ncontext of the labelled component.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Element","name":"return","doc":"<p>Element id string, or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupReferenceHolder"],"readonly":null,"required":null,"template":null,"id":"method-getAriaLabelEl","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements. ...","html_type":null},{"tagname":"method","name":"getAutoId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6595}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAutoId","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getBind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-bind\" rel=\"Ext.mixin.Bindable-cfg-bind\" class=\"docClass\">bind</a>.</p>\n","params":[],"return":{"type":"Object/String","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getBind","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of bind. ...","html_type":null},{"tagname":"method","name":"getBorderPadding","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6300},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":50}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>an object with the following numeric properties\n- beforeX\n- afterX\n- beforeY\n- afterY</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6300,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getBorderPadding","owner":"Ext.Component","overrides":[{"name":"getBorderPadding","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getBorderPadding\" rel=\"Ext.util.Positionable-method-getBorderPadding\" class=\"docClass\">Ext.util.Positionable.getBorderPadding</a>"}],"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"getBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":408}],"doc":"<p>Return an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">setBox</a> to set another Element's size/location to match this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentBox","doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object in the format</p>\n","properties":[{"tagname":"return","type":"Number","name":"x","doc":"<p>The element's X position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"y","doc":"<p>The element's Y position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"width","doc":"<p>The element's width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"<p>The element's height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"bottom","doc":"<p>The element's lower bound.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"right","doc":"<p>The element's rightmost bound.</p>\n\n<p>The returned object may also be addressed as an Array where index 0 contains the X\nposition and index 1 contains the Y position. The result may also be used for\n<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">setXY</a></p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBorderPadding","getHeight","getLocalXY","getWidth","getXY"],"readonly":null,"required":null,"template":null,"id":"method-getBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Return an object defining the area of this Element which can be passed to\nsetBox to set another Element's size/locati...","html_type":null},{"tagname":"method","name":"getBoxes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":275}],"doc":"<p>Returns all checkbox components within the container</p>\n","params":[{"tagname":"params","type":"String","name":"query","doc":"<p>An additional query to add to the selector.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":null,"id":"method-getBoxes","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"Returns all checkbox components within the container ...","html_type":null},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","params":[],"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleTarget"],"readonly":null,"required":null,"template":null,"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Gets the bubbling parent for an Observable ...","html_type":null},{"tagname":"method","name":"getBubbleTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3476}],"doc":"<p>Implements an upward event bubbling policy. By default a Component bubbles events\nup to its <a href=\"#!/api/Ext.Component-method-getRefOwner\" rel=\"Ext.Component-method-getRefOwner\" class=\"docClass\">reference owner</a>.</p>\n\n<p>Component subclasses may implement a different bubbling strategy by overriding this method.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-getBubbleTarget","owner":"Ext.Component","overrides":null,"short_doc":"Implements an upward event bubbling policy. ...","html_type":null},{"tagname":"method","name":"getChecked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":294}],"doc":"<p>Returns an Array of all checkboxes in the container which are currently checked</p>\n","params":[],"return":{"type":"Ext.form.field.Checkbox[]","name":"return","doc":"<p>Array of <a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">Ext.form.field.Checkbox</a> components</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">Ext.form.field.Checkbox</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-getChecked","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":"Returns an Array of all checkboxes in the container which are currently checked ...","html_type":null},{"tagname":"method","name":"getChildByElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1283}],"doc":"<p>Return the immediate child Component in which the passed element is located.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element/HTMLElement/String","name":"el","doc":"<p>The element to test (or ID of element).</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>If <code>true</code>, returns the deepest descendant Component which contains\nthe passed element.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The child item which contains the passed element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefItems"],"readonly":null,"required":null,"template":null,"id":"method-getChildByElement","owner":"Ext.container.Container","overrides":null,"short_doc":"Return the immediate child Component in which the passed element is located. ...","html_type":null},{"tagname":"method","name":"getChildEls","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":41}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.form.Labelable-cfg-childEls\" rel=\"Ext.form.Labelable-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[],"return":{"type":"Array","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":41,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getChildEls","owner":"Ext.form.Labelable","overrides":[{"name":"getChildEls","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-getChildEls\" rel=\"Ext.util.ElementContainer-method-getChildEls\" class=\"docClass\">Ext.util.ElementContainer.getChildEls</a>"}],"short_doc":"Returns the value of childEls. ...","html_type":null},{"tagname":"method","name":"getChildItemsToDisable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2302}],"doc":"<p>Gets a list of child components to enable/disable when the container is\nenabled/disabled</p>\n","params":[],"return":{"type":"Ext.Component[]","name":"return","doc":"<p>Items to be enabled/disabled</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":null,"id":"method-getChildItemsToDisable","owner":"Ext.container.Container","overrides":null,"short_doc":"Gets a list of child components to enable/disable when the container is\nenabled/disabled ...","html_type":null},{"tagname":"method","name":"getClientRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":706}],"doc":"<p>Returns a region object that defines the client area of this element.</p>\n\n<p>That is, the area <em>within</em> any scrollbars.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBox"],"readonly":null,"required":null,"template":null,"id":"method-getClientRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns a region object that defines the client area of this element. ...","html_type":null},{"tagname":"method","name":"getCombinedErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":310}],"doc":"<p>Takes an Array of invalid <a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a> objects and builds a combined list\nof error messages from them. Defaults to prepending each message by the field name\nand a colon. This can be overridden to provide custom combined error message handling,\nfor instance changing the format of each message or sorting the array (it is sorted\nin order of appearance by default).</p>\n","params":[{"tagname":"params","type":"Ext.form.field.Field[]","name":"invalidFields","doc":"<p>An Array of the sub-fields which are currently\ninvalid.</p>\n","html_type":"<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"String[]","name":"return","doc":"<p>The combined list of error messages</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCombinedErrors","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"Takes an Array of invalid Ext.form.field.Field objects and builds a combined list\nof error messages from them. ...","html_type":null},{"tagname":"method","name":"getComponent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1311}],"doc":"<p>Examines this container's <a href=\"#!/api/Ext.container.Container-property-items\" rel=\"Ext.container.Container-property-items\" class=\"docClass\">items</a> <strong>property</strong> and gets a direct child\ncomponent of this container.</p>\n","params":[{"tagname":"params","type":"String/Number","name":"comp","doc":"<p>This parameter may be any of the following:</p>\n\n<ul>\n<li>a <strong>String</strong> : representing the <a href=\"#!/api/Ext.Component-cfg-itemId\" rel=\"Ext.Component-cfg-itemId\" class=\"docClass\">itemId</a>\nor <a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a> of the child component.</li>\n<li>a <strong>Number</strong> : representing the position of the child component\nwithin the <a href=\"#!/api/Ext.container.Container-property-items\" rel=\"Ext.container.Container-property-items\" class=\"docClass\">items</a> <strong>property</strong></li>\n</ul>\n\n\n<p>For additional information see <a href=\"#!/api/Ext.util.MixedCollection-method-get\" rel=\"Ext.util.MixedCollection-method-get\" class=\"docClass\">Ext.util.MixedCollection.get</a>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The component (if found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getComponent","owner":"Ext.container.Container","overrides":null,"short_doc":"Examines this container's items property and gets a direct child\ncomponent of this container. ...","html_type":null},{"tagname":"method","name":"getComponentLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3487}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3487,"fires":[],"method_calls":["setComponentLayout"],"readonly":null,"required":null,"template":null,"id":"method-getComponentLayout","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getConstrainRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":547}],"doc":"<p>Returns the content region of this element for purposes of constraining or clipping floating\nchildren.  That is the region within the borders and scrollbars, but not within the padding.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getConstrainRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the content region of this element for purposes of constraining or clipping floating\nchildren. ...","html_type":null},{"tagname":"method","name":"getConstrainVector","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":580}],"doc":"<p>Returns the <code>[X, Y]</code> vector by which this Positionable's element must be translated to make\na best attempt to constrain within the passed constraint. Returns <code>false</code> if the element\ndoes not need to be moved.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>The constraint may either be an existing element into which the element is to be\nconstrained, or a <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this element is to be\nconstrained.</p>\n\n<p>By default, any extra shadow around the element is <strong>not</strong> included in the constrain\ncalculations - the edges of the element are used as the element bounds. To constrain\nthe shadow within the constrain region, set the <code>constrainShadow</code> property on this element\nto <code>true</code>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String/Ext.util.Region","name":"constrainTo","doc":"<p>The\nPositionable, HTMLElement, element id, or Region into which the element is to be\nconstrained.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedPosition","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to produce a vector for instead of using the element's current position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedSize","doc":"<p>A proposed <code>[width, height]</code> size to constrain\ninstead of using the element's current size</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]/Boolean","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, an <code>[X, Y]</code>\nvector by which this element must be translated. Otherwise, <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getConstrainVector","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the [X, Y] vector by which this Positionable's element must be translated to make\na best attempt to constrain...","html_type":null},{"tagname":"method","name":"getContentTarget","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2312}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLayout"],"readonly":null,"required":null,"template":null,"id":"method-getContentTarget","owner":"Ext.container.Container","overrides":[{"name":"getContentTarget","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-getContentTarget\" rel=\"Ext.Component-method-getContentTarget\" class=\"docClass\">Ext.Component.getContentTarget</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"getController","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":78}],"doc":"<p>Returns the <a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a> instance associated with this\ncomponent via the <a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a> config or <a href=\"#!/api/Ext.mixin.Bindable-method-setController\" rel=\"Ext.mixin.Bindable-method-setController\" class=\"docClass\">setController</a> method.</p>\n","params":[],"return":{"type":"Ext.app.ViewController","name":"return","doc":"<p>Returns this component's ViewController or\nnull if one was not configured</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getController","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the Ext.app.ViewController instance associated with this\ncomponent via the controller config or setController...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":319}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-data\" rel=\"Ext.Component-cfg-data\" class=\"docClass\">data</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getData","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of data. ...","html_type":null},{"tagname":"method","name":"getDefaultContentTarget","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2319}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getDefaultContentTarget","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getDefaultFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1435}],"doc":"<p>Finds the configured default focus item. See <a href=\"#!/api/Ext.container.Container-cfg-defaultFocus\" rel=\"Ext.container.Container-cfg-defaultFocus\" class=\"docClass\">defaultFocus</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["down"],"readonly":null,"required":null,"template":null,"id":"method-getDefaultFocus","owner":"Ext.container.Container","overrides":null,"short_doc":"Finds the configured default focus item. ...","html_type":null},{"tagname":"method","name":"getDefaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-defaultListenerScope\" rel=\"Ext.mixin.Bindable-cfg-defaultListenerScope\" class=\"docClass\">defaultListenerScope</a>.</p>\n","params":[],"return":{"type":"Boolean","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getDefaultListenerScope","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of defaultListenerScope. ...","html_type":null},{"tagname":"method","name":"getEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3497}],"doc":"<p>Retrieves the top level element representing this component.</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getEl","owner":"Ext.Component","overrides":null,"short_doc":"Retrieves the top level element representing this component. ...","html_type":null},{"tagname":"method","name":"getElConfig","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":482}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":482,"fires":[],"method_calls":["getAriaAttributes","getFrameInfo","getFrameRenderData","initFramingTpl","initRenderData","initRenderTpl","initStyles"],"readonly":null,"required":null,"template":null,"id":"method-getElConfig","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":260}],"doc":"<p>Runs CheckboxGroup's validations and returns an array of any errors. The only error\nby default is if allowBlank is set to false and no items are checked.</p>\n","params":[],"return":{"type":"String[]","name":"return","doc":"<p>Array of all validation errors</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChecked"],"readonly":null,"required":null,"template":null,"id":"method-getErrors","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"getErrors","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-getErrors\" rel=\"Ext.form.field.Field-method-getErrors\" class=\"docClass\">Ext.form.field.Field.getErrors</a>"}],"short_doc":"Runs CheckboxGroup's validations and returns an array of any errors. ...","html_type":null},{"tagname":"method","name":"getFieldIdentifier","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":209}],"doc":"<p>Fields can be editors, and some editors may not have a name property that maps\nto its data index, so it's necessary in these cases to look it up by its dataIndex\nproperty.  See EXTJSIV-11650.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getFieldIdentifier","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Fields can be editors, and some editors may not have a name property that maps\nto its data index, so it's necessary i...","html_type":null},{"tagname":"method","name":"getFieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":228}],"doc":"<p>Returns the combined field label if <a href=\"#!/api/Ext.form.FieldContainer-cfg-combineLabels\" rel=\"Ext.form.FieldContainer-cfg-combineLabels\" class=\"docClass\">combineLabels</a> is set to true and if there is no\nset <a href=\"#!/api/Ext.form.FieldContainer-cfg-fieldLabel\" rel=\"Ext.form.FieldContainer-cfg-fieldLabel\" class=\"docClass\">fieldLabel</a>. Otherwise returns the fieldLabel like normal. You can also override\nthis method to provide a custom generated label.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The label, or empty string if none.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":true,"id":"method-getFieldLabel","owner":"Ext.form.FieldContainer","overrides":[{"name":"getFieldLabel","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-method-getFieldLabel\" rel=\"Ext.form.Labelable-method-getFieldLabel\" class=\"docClass\">Ext.form.Labelable.getFieldLabel</a>"}],"short_doc":"Returns the combined field label if combineLabels is set to true and if there is no\nset fieldLabel. ...","html_type":null},{"tagname":"method","name":"getFocusClsEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":123}],"doc":"<p>Returns the element used to apply focus styling CSS class when Focusable's\n<a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> becomes focused. By default it is <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a>.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"focusEl","doc":"<p>Return focus styling element for the given\nfocused element. This is used by Components implementing multiple focusable\nelements.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The focus styling element.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-getFocusClsEl","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Returns the element used to apply focus styling CSS class when Focusable's\nfocusEl becomes focused. ...","html_type":null},{"tagname":"method","name":"getFocusEl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1345}],"doc":"<p>Returns the focus holder element associated with this Container.\nBy default, this is the Container's target element; however if <a href=\"#!/api/Ext.container.Container-cfg-defaultFocus\" rel=\"Ext.container.Container-cfg-defaultFocus\" class=\"docClass\">defaultFocus</a>\nis defined, the child component referenced by that property will be found\nand returned instead.</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>the focus holding element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getDefaultFocus","getTargetEl"],"readonly":null,"required":null,"template":null,"id":"method-getFocusEl","owner":"Ext.container.Container","overrides":[{"name":"getFocusEl","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-method-getFocusEl\" rel=\"Ext.mixin.Focusable-method-getFocusEl\" class=\"docClass\">Ext.mixin.Focusable.getFocusEl</a>"}],"short_doc":"Returns the focus holder element associated with this Container. ...","html_type":null},{"tagname":"method","name":"getFocusTask","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1308}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getFocusTask","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getFrameInfo","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1224}],"doc":"<p>On render, reads an encoded style attribute, \"filter\" from the style of this Component's\nelement. This information is memoized based upon the CSS class name of this Component's\nelement. Because child Components are rendered as textual HTML as part of the topmost\nContainer, a dummy div is inserted into the document to receive the document element's\nCSS class name, and therefore style attributes.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFramingInfoCls","getStyleProxy","getXType"],"readonly":null,"required":null,"template":null,"id":"method-getFrameInfo","owner":"Ext.util.Renderable","overrides":null,"short_doc":"On render, reads an encoded style attribute, \"filter\" from the style of this Component's\nelement. ...","html_type":null},{"tagname":"method","name":"getFrameTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1379}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"table","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupTpl"],"readonly":null,"required":null,"template":null,"id":"method-getFrameTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3506}],"doc":"<p>Gets the current height of the component's underlying element.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getHeight","owner":"Ext.Component","overrides":null,"short_doc":"Gets the current height of the component's underlying element. ...","html_type":null},{"tagname":"method","name":"getHidden","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4223}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":4223,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getHidden","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getHorizontalPaddingStyle","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":803}],"doc":"<p>hook for rtl</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getHorizontalPaddingStyle","owner":"Ext.form.Labelable","overrides":null,"short_doc":"hook for rtl ...","html_type":null},{"tagname":"method","name":"getId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3546}],"doc":"<p>Retrieves the <code>id</code> of this component. Will auto-generate an <code>id</code> if one has not already\nbeen set.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAutoId","getXType"],"readonly":null,"required":null,"template":null,"id":"method-getId","owner":"Ext.Component","overrides":null,"short_doc":"Retrieves the id of this component. ...","html_type":null},{"tagname":"method","name":"getInherited","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":85}],"doc":"<p>This method returns an object containing the inherited properties for this instance.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"inner","doc":"<p>Pass <code>true</code> to return <code>inheritedStateInner</code> instead\nof the normal <code>inheritedState</code> object. This is only needed internally and should\nnot be passed by user code.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>inheritedState</code> object containing inherited properties.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner","initInheritedState"],"readonly":null,"required":null,"template":null,"id":"method-getInherited","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"This method returns an object containing the inherited properties for this instance. ...","html_type":null},{"tagname":"method","name":"getInheritedConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":142}],"doc":"<p>This method returns the value of a config property that may be inherited from some\nancestor.</p>\n\n<p>In some cases, a config may be explicitly set on a component with the intent of\n<em>only</em> being presented to its children while that component should act upon the\ninherited value (see <code>referenceHolder</code> for example). In these cases the <code>skipThis</code>\nparameter should be specified as <code>true</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the config property to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p>Pass <code>true</code> if the property should be ignored if\nfound on this instance. In other words, <code>true</code> means the property must be inherited\nand not explicitly set on this instance.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Mixed","name":"return","doc":"<p>The value of the requested <code>property</code>.</p>\n","properties":null,"html_type":"Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-getInheritedConfig","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"This method returns the value of a config property that may be inherited from some\nancestor. ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getInputId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":872}],"doc":"<p>Get the input id, if any, for this component. This is used as the \"for\" attribute on the\nlabel element. Implementing subclasses may also use this as e.g. the id for their own\ninput element.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The input id</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInputId","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Get the input id, if any, for this component. ...","html_type":null},{"tagname":"method","name":"getInsertPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":570}],"doc":"<p>This function takes the position argument passed to onRender and returns a\nDOM element that you can use in the insertBefore.</p>\n","params":[{"tagname":"params","type":"String/Number/Ext.dom.Element/HTMLElement","name":"position","doc":"<p>Index, element id\nor element you want to put this component before.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement","default":null,"optional":null,"properties":null}],"return":{"type":"HTMLElement","name":"return","doc":"<p>DOM element that you can use in the insertBefore</p>\n","properties":null,"html_type":"HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInsertPosition","owner":"Ext.util.Renderable","overrides":null,"short_doc":"This function takes the position argument passed to onRender and returns a\nDOM element that you can use in the insert...","html_type":null},{"tagname":"method","name":"getInsertionRenderData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":674}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"data","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"names","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":674,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInsertionRenderData","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getItemId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3573}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-itemId\" rel=\"Ext.Component-cfg-itemId\" class=\"docClass\">itemId</a> assigned to this component, or when that\nis not set, returns the value of <a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a>.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getItemId","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of itemId assigned to this component, or when that\nis not set, returns the value of id. ...","html_type":null},{"tagname":"method","name":"getLabelableRenderData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":698}],"doc":"<p>Generates the arguments for the field decorations <a href=\"#!/api/Ext.form.Labelable-cfg-labelableRenderTpl\" rel=\"Ext.form.Labelable-cfg-labelableRenderTpl\" class=\"docClass\">rendering template</a>.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>optional object to use as the base data object.  If provided,\nthis method will add properties to the base object instead of creating a new one.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The template arguments</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFieldLabel","getHorizontalPaddingStyle","getInputId","getInsertionRenderData","hasVisibleLabel"],"readonly":null,"required":null,"template":null,"id":"method-getLabelableRenderData","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Generates the arguments for the field decorations rendering template. ...","html_type":null},{"tagname":"method","name":"getLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1371}],"doc":"<p>Returns the <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">layout</a> instance currently associated\nwith this Container. If a layout has not been instantiated yet, that is done first</p>\n","params":[],"return":{"type":"Ext.layout.container.Container","name":"return","doc":"<p>The layout</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setLayout"],"readonly":null,"required":null,"template":null,"id":"method-getLayout","owner":"Ext.container.Container","overrides":null,"short_doc":"Returns the layout instance currently associated\nwith this Container. ...","html_type":null},{"tagname":"method","name":"getLoader","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3582}],"doc":"<p>Gets the <a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a> for this Component.</p>\n","params":[],"return":{"type":"Ext.ComponentLoader","name":"return","doc":"<p>The loader instance, null if it doesn't exist.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.ComponentLoader\" rel=\"Ext.ComponentLoader\" class=\"docClass\">Ext.ComponentLoader</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLoader","owner":"Ext.Component","overrides":null,"short_doc":"Gets the Ext.ComponentLoader for this Component. ...","html_type":null},{"tagname":"method","name":"getLocalX","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6304},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":63}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The local x coordinate</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6304,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalX","owner":"Ext.Component","overrides":[{"name":"getLocalX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getLocalX\" rel=\"Ext.util.Positionable-method-getLocalX\" class=\"docClass\">Ext.util.Positionable.getLocalX</a>"}],"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"getLocalXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6308},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":67}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[],"return":{"type":"Number[]","name":"return","doc":"<p>The local XY position of the element</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6308,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalXY","owner":"Ext.Component","overrides":[{"name":"getLocalXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getLocalXY\" rel=\"Ext.util.Positionable-method-getLocalXY\" class=\"docClass\">Ext.util.Positionable.getLocalXY</a>"}],"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"getLocalY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6312}],"doc":"<p>Returns the y coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The local y coordinate</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6312,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalY","owner":"Ext.Component","overrides":[{"name":"getLocalY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getLocalY\" rel=\"Ext.util.Positionable-method-getLocalY\" class=\"docClass\">Ext.util.Positionable.getLocalY</a>"}],"short_doc":"Returns the y coordinate of this element reletive to its offsetParent. ...","html_type":null},{"tagname":"method","name":"getMaskTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3607}],"doc":"<p>Returns the element which is masked by the <a href=\"#!/api/Ext.Component-method-mask\" rel=\"Ext.Component-method-mask\" class=\"docClass\">mask</a> method, or into which the\n<a href=\"#!/api/Ext.Component-method-setLoading\" rel=\"Ext.Component-method-setLoading\" class=\"docClass\">LoadMask</a> is rendered into.</p>\n\n<p>The default implementation uses the <a href=\"#!/api/Ext.Component-cfg-maskElement\" rel=\"Ext.Component-cfg-maskElement\" class=\"docClass\">maskElement</a> configuration to access\nthe Component's child element by name. By default, <a href=\"#!/api/Ext.Component-cfg-maskElement\" rel=\"Ext.Component-cfg-maskElement\" class=\"docClass\">maskElement</a> is <code>null</code> which means\nthat <code>null</code> is returned from this method indicating that the mask needs to be rendered into\nthe document because component structure should not be contaminated by mask elements.</p>\n\n<p>Some subclasses may override this method if they have knowledge about external structures\nwhere a mask could usefully be rendered.</p>\n\n<p>For example a <a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">GridView</a> will request that its owning\n<a href=\"#!/api/Ext.panel.Table\" rel=\"Ext.panel.Table\" class=\"docClass\">GridPanel</a> be masked. The GridPanel will have its own implementation\nof <code>getMaskTarget</code> which will return the element dictated by its own <a href=\"#!/api/Ext.Component-cfg-maskElement\" rel=\"Ext.Component-cfg-maskElement\" class=\"docClass\">maskElement</a>\nPanels use <code>\"el\"</code> as their <a href=\"#!/api/Ext.Component-cfg-maskElement\" rel=\"Ext.Component-cfg-maskElement\" class=\"docClass\">maskElement</a> by default, but that could be overridden\nto be <code>\"body\"</code> to leave toolbars and the header mouse-accessible.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMaskTarget","owner":"Ext.Component","overrides":null,"short_doc":"Returns the element which is masked by the mask method, or into which the\nLoadMask is rendered into. ...","html_type":null},{"tagname":"method","name":"getMaxHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":368}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-maxHeight\" rel=\"Ext.Component-cfg-maxHeight\" class=\"docClass\">maxHeight</a>.</p>\n","params":[],"return":{"type":"Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMaxHeight","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of maxHeight. ...","html_type":null},{"tagname":"method","name":"getMaxWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":376}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-maxWidth\" rel=\"Ext.Component-cfg-maxWidth\" class=\"docClass\">maxWidth</a>.</p>\n","params":[],"return":{"type":"Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMaxWidth","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of maxWidth. ...","html_type":null},{"tagname":"method","name":"getMinHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":384}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-minHeight\" rel=\"Ext.Component-cfg-minHeight\" class=\"docClass\">minHeight</a>.</p>\n","params":[],"return":{"type":"Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMinHeight","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of minHeight. ...","html_type":null},{"tagname":"method","name":"getMinWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":392}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-minWidth\" rel=\"Ext.Component-cfg-minWidth\" class=\"docClass\">minWidth</a>.</p>\n","params":[],"return":{"type":"Number","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMinWidth","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of minWidth. ...","html_type":null},{"tagname":"method","name":"getModelData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":520}],"doc":"<p>Don't return any data for the model; the form will get the info from the individual\ncheckboxes themselves.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>A mapping of submit parameter names to values; each value should be\na string, or an array of strings if that particular name has multiple values. It can also\nreturn null if there are no parameters to be submitted.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFieldIdentifier","getValue"],"readonly":null,"required":null,"template":null,"id":"method-getModelData","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"getModelData","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-getModelData\" rel=\"Ext.form.field.Field-method-getModelData\" class=\"docClass\">Ext.form.field.Field.getModelData</a>"}],"short_doc":"Don't return any data for the model; the form will get the info from the individual\ncheckboxes themselves. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":216}],"doc":"<p>Returns the <a href=\"#!/api/Ext.form.field.Field-cfg-name\" rel=\"Ext.form.field.Field-cfg-name\" class=\"docClass\">name</a> attribute of the field. This is used\nas the parameter name when including the field value in a\n<a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">form submit()</a>.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>name The field <a href=\"#!/api/Ext.form.field.Field-cfg-name\" rel=\"Ext.form.field.Field-cfg-name\" class=\"docClass\">name</a></p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getName","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns the name attribute of the field. ...","html_type":null},{"tagname":"method","name":"getNamedItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":36}],"doc":"<p>Returns an object holding the descendants of this container keyed by their\n<code>name</code>. This object should not be held past the scope of the function calling this\nmethod. It will not be valid if items are added or removed from this or any\nsub-container.</p>\n\n<p>The intended usage is shown here (assume there are 3 components with names of\n\"foo\", \"bar\" and \"baz\" at some level below this container):</p>\n\n<pre><code> onClick: function () {\n     var items = this.getNamedItems();\n\n     // using \"items\" we can access any descendant by its \"name\"\n\n     items.foo.getValue() + items.bar.getValue() + items.baz.getValue();\n }\n</code></pre>\n\n<p>If <code>this</code> component has a <code>name</code> assigned to it, it is <strong>not</strong> included in this\nobject. That name is understood to belong to the ancestor container configured\nas the <code>nameHolder</code>.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>An object with each named child. This will be <code>null</code> if this\ncontainer has no descendants with a <code>name</code> specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getNamedItems","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Returns an object holding the descendants of this container keyed by their\nname. ...","html_type":null},{"tagname":"method","name":"getOffsetsTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":676}],"doc":"<p>Returns the offsets of this element from the passed element. The element must both\nbe part of the DOM tree and not have display:none to have page coordinates.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"offsetsTo","doc":"<p>The Positionable,\nHTMLElement, or element id to get get the offsets from.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>The XY page offsets (e.g. <code>[100, -200]</code>)</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-getOffsetsTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the offsets of this element from the passed element. ...","html_type":null},{"tagname":"method","name":"getOverflowEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6615}],"doc":"<p>Get an el for overflowing, defaults to the target el</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTargetEl"],"readonly":null,"required":null,"template":null,"id":"method-getOverflowEl","owner":"Ext.Component","overrides":null,"short_doc":"Get an el for overflowing, defaults to the target el ...","html_type":null},{"tagname":"method","name":"getOverflowStyle","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6623}],"doc":"<p>Returns the CSS style object which will set the Component's scroll styles.\nThis must be applied to the <a href=\"#!/api/Ext.Component-method-getTargetEl\" rel=\"Ext.Component-method-getTargetEl\" class=\"docClass\">target element</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-getOverflowStyle","owner":"Ext.Component","overrides":null,"short_doc":"Returns the CSS style object which will set the Component's scroll styles. ...","html_type":null},{"tagname":"method","name":"getOwningBorderContainer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/border/Region.js","linenr":45}],"doc":"<p>Returns the owning container if that container uses <code>border</code> layout. Otherwise\nthis method returns <code>null</code>.</p>\n\n<p><strong>Defined in override Ext.layout.container.border.Region.</strong></p>\n","params":[],"return":{"type":"Ext.container.Container","name":"return","doc":"<p>The owning border container or <code>null</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getOwningBorderLayout"],"readonly":null,"required":null,"template":null,"id":"method-getOwningBorderContainer","owner":"Ext.Component","overrides":null,"short_doc":"Returns the owning container if that container uses border layout. ...","html_type":null},{"tagname":"method","name":"getOwningBorderLayout","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/border/Region.js","linenr":57}],"doc":"<p>Returns the owning <code>border</code> (<code><a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a></code>) instance if there is\none. Otherwise this method returns <code>null</code>.</p>\n\n<p><strong>Defined in override Ext.layout.container.border.Region.</strong></p>\n","params":[],"return":{"type":"Ext.layout.container.Border","name":"return","doc":"<p>The owning border layout or <code>null</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getOwningBorderLayout","owner":"Ext.Component","overrides":null,"short_doc":"Returns the owning border (Ext.layout.container.Border) instance if there is\none. ...","html_type":null},{"tagname":"method","name":"getPlugin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3631}],"doc":"<p>Retrieves a plugin from this component's collection by its <code>id</code>.</p>\n\n<pre><code>var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    store: {\n        fields: ['name'],\n        data: [{\n            name: 'Scott Pilgrim'\n        }]\n    },\n    columns: [{\n        header: 'Name',\n        dataIndex: 'name',\n        editor: 'textfield',\n        flex: 1\n    }],\n    selType: 'cellmodel',\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 1,\n        id: 'myplugin'\n    }],\n    height: 200,\n    width: 400,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n\ngrid.getPlugin('myplugin');  // the cellediting plugin\n</code></pre>\n\n<p><strong>Note:</strong> See also <a href=\"#!/api/Ext.Component-method-findPlugin\" rel=\"Ext.Component-method-findPlugin\" class=\"docClass\">findPlugin</a>. Prior to 6.2.0 the plugin had to have a\n<code><a href=\"#!/api/Ext.plugin.Abstract-cfg-pluginId\" rel=\"Ext.plugin.Abstract-cfg-pluginId\" class=\"docClass\">pluginId</a></code> property but this can now be just\n<code><a href=\"#!/api/Ext.plugin.Abstract-cfg-id\" rel=\"Ext.plugin.Abstract-cfg-id\" class=\"docClass\">id</a></code>. Both are supported (so plugins with a\nmatching <code>pluginId</code> are still found) but <code>id</code> is preferred.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The <code>id</code> set on the plugin config object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.plugin.Abstract","name":"return","doc":"<p>plugin instance or <code>null</code> if not found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.plugin.Abstract\" rel=\"Ext.plugin.Abstract\" class=\"docClass\">Ext.plugin.Abstract</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getPlugin","owner":"Ext.Component","overrides":null,"short_doc":"Retrieves a plugin from this component's collection by its id. ...","html_type":null},{"tagname":"method","name":"getPlugins","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6661}],"doc":"<p>Returns an array of current fully constructed plugin instances.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["constructPlugins"],"readonly":null,"required":null,"template":null,"id":"method-getPlugins","owner":"Ext.Component","overrides":null,"short_doc":"Returns an array of current fully constructed plugin instances. ...","html_type":null},{"tagname":"method","name":"getPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3686}],"doc":"<p>Gets the current XY position of the component's underlying element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>If true the element's left and top are returned instead of\npage XY.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>The XY position of the element (e.g., [100, 200])</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLocalX","getLocalY","getXY","isContainedFloater"],"readonly":null,"required":null,"template":null,"id":"method-getPosition","owner":"Ext.Component","overrides":null,"short_doc":"Gets the current XY position of the component's underlying element. ...","html_type":null},{"tagname":"method","name":"getPublishes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":102}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-publishes\" rel=\"Ext.mixin.Bindable-cfg-publishes\" class=\"docClass\">publishes</a>.</p>\n","params":[],"return":{"type":"String/String[]/Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getPublishes","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of publishes. ...","html_type":null},{"tagname":"method","name":"getQueryRoot","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":160}],"doc":"\n","params":[],"return":{"type":"Ext.mixin.Queryable","name":null,"doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.mixin.Queryable\" rel=\"Ext.mixin.Queryable\" class=\"docClass\">Ext.mixin.Queryable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":160,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getQueryRoot","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getRefItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1387}],"doc":"<p>Used by <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>, <a href=\"#!/api/Ext.container.Container-method-child\" rel=\"Ext.container.Container-method-child\" class=\"docClass\">child</a> and <a href=\"#!/api/Ext.container.Container-method-down\" rel=\"Ext.container.Container-method-down\" class=\"docClass\">down</a>\nto retrieve all of the items which can potentially be considered a child of this Container.</p>\n\n<p>This may be overriden by Components which have ownership of Components\nthat are not contained in the <a href=\"#!/api/Ext.container.Container-property-items\" rel=\"Ext.container.Container-property-items\" class=\"docClass\">items</a> collection.</p>\n\n<p>NOTE: IMPORTANT note for maintainers:\nItems are returned in tree traversal order. Each item is appended to the result array\nfollowed by the results of that child's getRefItems call.\nFloating child items are appended after internal child items.</p>\n","params":[{"tagname":null,"type":"Object","name":"deep","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getRefItems","owner":"Ext.container.Container","overrides":[{"name":"getRefItems","owner":"Ext.mixin.Queryable","link":"<a href=\"#!/api/Ext.mixin.Queryable-method-getRefItems\" rel=\"Ext.mixin.Queryable-method-getRefItems\" class=\"docClass\">Ext.mixin.Queryable.getRefItems</a>"}],"short_doc":"Used by ComponentQuery, child and down\nto retrieve all of the items which can potentially be considered a child of th...","html_type":null},{"tagname":"method","name":"getRefOwner","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":304}],"doc":"<p>Used by <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>, and the <a href=\"#!/api/Ext.Component-method-up\" rel=\"Ext.Component-method-up\" class=\"docClass\">up</a>\nmethod to find the owning Component in the linkage hierarchy.</p>\n\n<p>By default this returns the Container which contains this Component.</p>\n\n<p>This may be overridden by Component authors who implement ownership hierarchies\nwhich are not based upon ownerCt, such as BoundLists being owned by Fields or Menus\nbeing owned by Buttons.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getRefOwner","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Used by ComponentQuery, and the up\nmethod to find the owning Component in the linkage hierarchy. ...","html_type":null},{"tagname":"method","name":"getReference","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":324}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":324,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getReference","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getReferences","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":69}],"doc":"<p>Returns an object holding the descendants of this view keyed by their\n<code><a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a></code>. This object should not be held\npast the scope of the function calling this method. It will not be valid if items\nare added or removed from this or any sub-container.</p>\n\n<p>The intended usage is shown here (assume there are 3 components with reference\nvalues of \"foo\", \"bar\" and \"baz\" at some level below this container):</p>\n\n<pre><code> onClick: function () {\n     var refs = this.getReferences();\n\n     // using \"refs\" we can access any descendant by its \"reference\"\n\n     refs.foo.getValue() + refs.bar.getValue() + refs.baz.getValue();\n }\n</code></pre>\n\n<p>If <code>this</code> component has a <code><a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a></code> assigned\nto it, that is <strong>not</strong> included in this object. That reference is understood to\nbelong to the ancestor container configured as the <code>referenceHolder</code>.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>An object with each child reference. This will be <code>null</code> if this\ncontainer has no descendants with a <code><a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a></code>\nspecified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getReferences","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Returns an object holding the descendants of this view keyed by their\nreference. ...","html_type":null},{"tagname":"method","name":"getRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":692}],"doc":"<p>Returns a region object that defines the area of this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentBox","doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBox"],"readonly":null,"required":null,"template":null,"id":"method-getRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns a region object that defines the area of this element. ...","html_type":null},{"tagname":"method","name":"getRenderTree","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":591}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":591,"fires":["beforerender"],"method_calls":["beforeRender","fireEvent","getElConfig"],"readonly":null,"required":null,"template":null,"id":"method-getRenderTree","owner":"Ext.util.Renderable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getScrollX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3715}],"doc":"<p>Returns the \"x\" scroll position for this component.  Only applicable for\n<a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> components</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-getScrollX","owner":"Ext.Component","overrides":null,"short_doc":"Returns the \"x\" scroll position for this component. ...","html_type":null},{"tagname":"method","name":"getScrollY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3726}],"doc":"<p>Returns the \"y\" scroll position for this component.  Only applicable for\n<a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> components</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-getScrollY","owner":"Ext.Component","overrides":null,"short_doc":"Returns the \"y\" scroll position for this component. ...","html_type":null},{"tagname":"method","name":"getScrollable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":400}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a>.</p>\n","params":[],"return":{"type":"Boolean/String/Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getScrollable","owner":"Ext.Component","overrides":null,"short_doc":"Returns the value of scrollable. ...","html_type":null},{"tagname":"method","name":"getScrollableClientRegion","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2904}],"doc":"<p>This method is required by the Scroller to return the scrollable client region</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>The scrolling viewport region.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-getScrollableClientRegion","owner":"Ext.Component","overrides":null,"short_doc":"This method is required by the Scroller to return the scrollable client region ...","html_type":null},{"tagname":"method","name":"getSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a>.</p>\n","params":[],"return":{"type":"Boolean/Object/Ext.data.Session","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSession","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of session. ...","html_type":null},{"tagname":"method","name":"getSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3737}],"doc":"<p>Gets the current size of the component's underlying element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentSize","doc":"<p>true to get the width/size minus borders and padding</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the element's size:</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSize","owner":"Ext.Component","overrides":null,"short_doc":"Gets the current size of the component's underlying element. ...","html_type":null},{"tagname":"method","name":"getSizeModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3748}],"doc":"<p>Returns an object that describes how this component's width and height are managed.\nAll of these objects are shared and should not be modified.</p>\n","params":[{"tagname":null,"type":"Object","name":"ownerCtSizeModel","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The size model for this component.</p>\n","properties":[{"tagname":"return","type":"Ext.layout.SizeModel","name":"width","doc":"<p>The <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">size model</a>\nfor the width.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a>"},{"tagname":"return","type":"Ext.layout.SizeModel","name":"height","doc":"<p>The <a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">size model</a>\nfor the height.</p>\n","html_type":"<a href=\"#!/api/Ext.layout.SizeModel\" rel=\"Ext.layout.SizeModel\" class=\"docClass\">Ext.layout.SizeModel</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSizeModel","owner":"Ext.Component","overrides":null,"short_doc":"Returns an object that describes how this component's width and height are managed. ...","html_type":null},{"tagname":"method","name":"getState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3893}],"doc":"<p>The supplied default state gathering method for the Component class.</p>\n\n<p>This method returns dimension settings such as <code>flex</code>, <code>anchor</code>, <code>width</code> and <code>height</code>\nalong with <code>collapsed</code> state.</p>\n\n<p>Subclasses which implement more complex state should call the superclass's implementation,\nand apply their state to the result if this basic state is to be saved.</p>\n\n<p>Note that Component state will only be saved if the Component has a <a href=\"#!/api/Ext.Component-cfg-stateId\" rel=\"Ext.Component-cfg-stateId\" class=\"docClass\">stateId</a>\nand there as a StateProvider configured for the document.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addPropertyToState","getSizeModel"],"readonly":null,"required":null,"template":null,"id":"method-getState","owner":"Ext.Component","overrides":[{"name":"getState","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-getState\" rel=\"Ext.state.Stateful-method-getState\" class=\"docClass\">Ext.state.Stateful.getState</a>"}],"short_doc":"The supplied default state gathering method for the Component class. ...","html_type":null},{"tagname":"method","name":"getStateId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":315}],"doc":"<p>Gets the state id for this object.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The 'stateId' or the implicit 'id' specified by component configuration.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStateId","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Gets the state id for this object. ...","html_type":null},{"tagname":"method","name":"getStateful","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":15}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a>.</p>\n","params":[],"return":{"type":"Boolean/Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStateful","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Returns the value of stateful. ...","html_type":null},{"tagname":"method","name":"getStyleProxy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1351}],"doc":"<p>Returns an offscreen div with the same class name as the element this is being rendered.\nThis is because child item rendering takes place in a detached div which, being not\npart of the document, has no styling.</p>\n","params":[{"tagname":null,"type":"Object","name":"cls","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStyleProxy","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Returns an offscreen div with the same class name as the element this is being rendered. ...","html_type":null},{"tagname":"method","name":"getSubTplData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":247}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":247,"fires":[],"method_calls":["initRenderData"],"readonly":null,"required":null,"template":null,"id":"method-getSubTplData","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getSubTplMarkup","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":255}],"doc":"<p>Gets the markup to be inserted into the outer template's bodyEl. Defaults to empty string,\nshould be implemented by classes including this mixin as needed.</p>\n","params":[{"tagname":null,"type":"Object","name":"fieldData","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The markup to be inserted</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":255,"fires":[],"method_calls":["getSubTplData","lookupTpl","setupRenderTpl"],"readonly":null,"required":null,"template":null,"id":"method-getSubTplMarkup","owner":"Ext.form.FieldContainer","overrides":[{"name":"getSubTplMarkup","owner":"Ext.form.Labelable","link":"<a href=\"#!/api/Ext.form.Labelable-method-getSubTplMarkup\" rel=\"Ext.form.Labelable-method-getSubTplMarkup\" class=\"docClass\">Ext.form.Labelable.getSubTplMarkup</a>"}],"short_doc":"Gets the markup to be inserted into the outer template's bodyEl. ...","html_type":null},{"tagname":"method","name":"getSubmitData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":512}],"doc":"<p>Don't return any data for submit; the form will get the info from the individual checkboxes\nthemselves.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>A mapping of submit parameter names to values; each value should be\na string, or an array of strings if that particular name has multiple values. It can also\nreturn null if there are no parameters to be submitted.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getName","getValue"],"readonly":null,"required":null,"template":null,"id":"method-getSubmitData","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"getSubmitData","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-getSubmitData\" rel=\"Ext.form.field.Field-method-getSubmitData\" class=\"docClass\">Ext.form.field.Field.getSubmitData</a>"}],"short_doc":"Don't return any data for submit; the form will get the info from the individual checkboxes\nthemselves. ...","html_type":null},{"tagname":"method","name":"getTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":393}],"doc":"<p>Return the actual tabIndex for this Focusable.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>tabIndex attribute value</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-getTabIndex","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Return the actual tabIndex for this Focusable. ...","html_type":null},{"tagname":"method","name":"getTargetEl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6685}],"doc":"<p>This is used to determine where to insert the 'html', 'contentEl' and 'items' in this\ncomponent.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTargetEl","owner":"Ext.Component","overrides":null,"short_doc":"This is used to determine where to insert the 'html', 'contentEl' and 'items' in this\ncomponent. ...","html_type":null},{"tagname":"method","name":"getTdCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6694}],"doc":"<p>Needed for when widget is rendered into a grid cell. The class to add to the cell\nelement.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTdType"],"readonly":null,"required":null,"template":null,"id":"method-getTdCls","owner":"Ext.Component","overrides":null,"short_doc":"Needed for when widget is rendered into a grid cell. ...","html_type":null},{"tagname":"method","name":"getTdType","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6703}],"doc":"<p>Partner method to <a href=\"#!/api/Ext.Component-method-getTdCls\" rel=\"Ext.Component-method-getTdCls\" class=\"docClass\">getTdCls</a>.</p>\n\n<p>Returns the base type for the component. Defaults to return <code>this.xtype</code>, but\nAll derived classes of <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">TextField</a> can return the type\n'textfield', and all derived classes of <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Button</a> can return\nthe type 'button'</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTdType","owner":"Ext.Component","overrides":null,"short_doc":"Partner method to getTdCls. ...","html_type":null},{"tagname":"method","name":"getTopAlignTarget","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":690}],"doc":"<p>Gets the topmost <em>non floating</em> alignTo target if there are multiple aligns\nsuch as a menu stack hanging off a button or grid column header.</p>\n","params":[],"return":{"type":"Ext.Element/Ext.Component","name":"return","doc":"<p>The topmost, <em>non floating</em> alignTo target.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTopAlignTarget","owner":"Ext.util.Floating","overrides":null,"short_doc":"Gets the topmost non floating alignTo target if there are multiple aligns\nsuch as a menu stack hanging off a button o...","html_type":null},{"tagname":"method","name":"getTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6716}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupTpl"],"readonly":null,"required":null,"template":null,"id":"method-getTpl","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getTwoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-twoWayBindable\" rel=\"Ext.mixin.Bindable-cfg-twoWayBindable\" class=\"docClass\">twoWayBindable</a>.</p>\n","params":[],"return":{"type":"String/String[]/Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTwoWayBindable","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of twoWayBindable. ...","html_type":null},{"tagname":"method","name":"getUserCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3923}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3923,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getUserCls","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getValidation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":32}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.form.field.Field-cfg-validation\" rel=\"Ext.form.field.Field-cfg-validation\" class=\"docClass\">validation</a>.</p>\n","params":[],"return":{"type":"Boolean/String","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getValidation","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns the value of validation. ...","html_type":null},{"tagname":"method","name":"getValidationField","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":39}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.form.field.Field-cfg-validationField\" rel=\"Ext.form.field.Field-cfg-validationField\" class=\"docClass\">validationField</a>.</p>\n","params":[],"return":{"type":"Ext.data.Field","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">Ext.data.Field</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getValidationField","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns the value of validationField. ...","html_type":null},{"tagname":"method","name":"getValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":464}],"doc":"<p>Returns an object containing the values of all checked checkboxes within the group.\nEach key-value pair in the object corresponds to a checkbox\n<a href=\"#!/api/Ext.form.field.Checkbox-cfg-name\" rel=\"Ext.form.field.Checkbox-cfg-name\" class=\"docClass\">name</a>. If there is only one checked checkbox\nwith a particular name, the value of that pair will be the String\n<a href=\"#!/api/Ext.form.field.Checkbox-cfg-inputValue\" rel=\"Ext.form.field.Checkbox-cfg-inputValue\" class=\"docClass\">inputValue</a> of that checkbox. If there are\nmultiple checked checkboxes with that name, the value of that pair will be an Array\nof the selected inputValues.</p>\n\n<p>The object format returned from this method can also be passed directly to the\n<a href=\"#!/api/Ext.form.CheckboxGroup-method-setValue\" rel=\"Ext.form.CheckboxGroup-method-setValue\" class=\"docClass\">setValue</a> method.</p>\n\n<p>NOTE: In Ext 3, this method returned an array of Checkbox components; this was changed\nto make it more consistent with other field components and with the <a href=\"#!/api/Ext.form.CheckboxGroup-method-setValue\" rel=\"Ext.form.CheckboxGroup-method-setValue\" class=\"docClass\">setValue</a>\nargument signature. If you need the old behavior in Ext 4+, use the <a href=\"#!/api/Ext.form.CheckboxGroup-method-getChecked\" rel=\"Ext.form.CheckboxGroup-method-getChecked\" class=\"docClass\">getChecked</a>\nmethod instead.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-getValue","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"getValue","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-getValue\" rel=\"Ext.form.field.Field-method-getValue\" class=\"docClass\">Ext.form.field.Field.getValue</a>"}],"short_doc":"Returns an object containing the values of all checked checkboxes within the group. ...","html_type":null},{"tagname":"method","name":"getViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a>.</p>\n","params":[],"return":{"type":"String/Object/Ext.app.ViewModel","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getViewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the value of viewModel. ...","html_type":null},{"tagname":"method","name":"getViewRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":754}],"doc":"<p>Returns the <strong>content</strong> region of this element. That is the region within the borders\nand padding.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" member data.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBorderPadding","getHeight","getWidth","getXY"],"readonly":null,"required":null,"template":null,"id":"method-getViewRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the content region of this element. ...","html_type":null},{"tagname":"method","name":"getWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3942}],"doc":"<p>Gets the current width of the component's underlying element.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getWidth","owner":"Ext.Component","overrides":null,"short_doc":"Gets the current width of the component's underlying element. ...","html_type":null},{"tagname":"method","name":"getX","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6316}],"doc":"<p>Gets the current X position of the DOM element based on page coordinates.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The X position of the element</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6316,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getX","owner":"Ext.Component","overrides":[{"name":"getX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getX\" rel=\"Ext.util.Positionable-method-getX\" class=\"docClass\">Ext.util.Positionable.getX</a>"}],"short_doc":"Gets the current X position of the DOM element based on page coordinates. ...","html_type":null},{"tagname":"method","name":"getXType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3950}],"doc":"<p>Gets the xtype for this component as registered with <a href=\"#!/api/Ext.ComponentManager\" rel=\"Ext.ComponentManager\" class=\"docClass\">Ext.ComponentManager</a>.\nFor a list of all available xtypes, see the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> header.\nExample usage:</p>\n\n<pre><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nalert(t.getXType());  // alerts 'textfield'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The xtype</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getXType","owner":"Ext.Component","overrides":null,"short_doc":"Gets the xtype for this component as registered with Ext.ComponentManager. ...","html_type":null},{"tagname":"method","name":"getXTypes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3964}],"doc":"<p>Returns this Component's xtype hierarchy as a slash-delimited string. For a list of all\navailable xtypes, see the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> header.</p>\n\n<p><strong>If using your own subclasses, be aware that a Component must register its own xtype\nto participate in determination of inherited xtypes.</strong></p>\n\n<p>Example usage:</p>\n\n<pre class='inline-example '><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nalert(t.getXTypes());  // alerts 'component/field/textfield'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The xtype hierarchy string</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getXTypes","owner":"Ext.Component","overrides":null,"short_doc":"Returns this Component's xtype hierarchy as a slash-delimited string. ...","html_type":null},{"tagname":"method","name":"getXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6320}],"doc":"<p>Gets the current position of the DOM element based on page coordinates.</p>\n","params":[],"return":{"type":"Number[]","name":"return","doc":"<p>The XY position of the element</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6320,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getXY","owner":"Ext.Component","overrides":[{"name":"getXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getXY\" rel=\"Ext.util.Positionable-method-getXY\" class=\"docClass\">Ext.util.Positionable.getXY</a>"}],"short_doc":"Gets the current position of the DOM element based on page coordinates. ...","html_type":null},{"tagname":"method","name":"getY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6324}],"doc":"<p>Gets the current Y position of the DOM element based on page coordinates.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The Y position of the element</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6324,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getY","owner":"Ext.Component","overrides":[{"name":"getY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getY\" rel=\"Ext.util.Positionable-method-getY\" class=\"docClass\">Ext.util.Positionable.getY</a>"}],"short_doc":"Gets the current Y position of the DOM element based on page coordinates. ...","html_type":null},{"tagname":"method","name":"handleBlurEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":852}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"info","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-blur\" rel=\"Ext.mixin.Focusable-event-blur\" class=\"docClass\">blur</a>"],"method_calls":["isBlurring","onBlur"],"readonly":null,"required":null,"template":null,"id":"method-handleBlurEvent","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"handleFieldErrorChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":172}],"doc":"<p>Handle bubbled errorchange events from descendants; invoke the aggregated event and method</p>\n","params":[{"tagname":null,"type":"Object","name":"labelable","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"activeError","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["errorchange","<a href=\"#!/api/Ext.form.FieldAncestor-event-fielderrorchange\" rel=\"Ext.form.FieldAncestor-event-fielderrorchange\" class=\"docClass\">fielderrorchange</a>"],"method_calls":["fireEvent","onFieldErrorChange"],"readonly":null,"required":null,"template":null,"id":"method-handleFieldErrorChange","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Handle bubbled errorchange events from descendants; invoke the aggregated event and method ...","html_type":null},{"tagname":"method","name":"handleFieldValidityChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":159}],"doc":"<p>Handle bubbled validitychange events from descendants; invoke the aggregated event and method</p>\n","params":[{"tagname":null,"type":"Object","name":"field","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"isValid","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.FieldAncestor-event-fieldvaliditychange\" rel=\"Ext.form.FieldAncestor-event-fieldvaliditychange\" class=\"docClass\">fieldvaliditychange</a>"],"method_calls":["fireEvent","onFieldValidityChange"],"readonly":null,"required":null,"template":null,"id":"method-handleFieldValidityChange","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Handle bubbled validitychange events from descendants; invoke the aggregated event and method ...","html_type":null},{"tagname":"method","name":"handleFocusEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":825}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"info","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-focus\" rel=\"Ext.mixin.Focusable-event-focus\" class=\"docClass\">focus</a>"],"method_calls":["isFocusing","onFocus"],"readonly":null,"required":null,"template":null,"id":"method-handleFocusEvent","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":892}],"doc":"<p>Tells whether the field currently has an active error message. This does not trigger\nvalidation on its own, it merely looks for any message that the component may already hold.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getActiveError"],"readonly":null,"required":null,"template":null,"id":"method-hasActiveError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Tells whether the field currently has an active error message. ...","html_type":null},{"tagname":"method","name":"hasActiveFx","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":378}],"doc":"<p>Returns the current animation if this object has any effects actively running or queued,\nelse returns false.</p>\n","params":[],"return":{"type":"Ext.fx.Anim/Boolean","name":"return","doc":"<p>Anim if element has active effects, else false</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-getActiveAnimation\" rel=\"Ext.util.Animate-method-getActiveAnimation\" class=\"docClass\">getActiveAnimation</a></p>\n","version":"4.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasActiveFx","owner":"Ext.util.Animate","overrides":null,"short_doc":"Returns the current animation if this object has any effects actively running or queued,\nelse returns false. ...","html_type":null},{"tagname":"method","name":"hasCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4006}],"doc":"<p>Checks if the specified CSS class exists on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to check for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the class exists, else <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasCls","owner":"Ext.Component","overrides":null,"short_doc":"Checks if the specified CSS class exists on this element's DOM node. ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ...","html_type":null},{"tagname":"method","name":"hasUICls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4018}],"doc":"<p>Checks if there is currently a specified <code>uiCls</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"cls","doc":"<p>The <code>cls</code> to check.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasUICls","owner":"Ext.Component","overrides":null,"short_doc":"Checks if there is currently a specified uiCls. ...","html_type":null},{"tagname":"method","name":"hasVisibleLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":850}],"doc":"<p>Checks if the field has a visible label</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>True if the field has a visible label</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFieldLabel"],"readonly":null,"required":null,"template":null,"id":"method-hasVisibleLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Checks if the field has a visible label ...","html_type":null},{"tagname":"method","name":"hide","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4029}],"doc":"<p>Hides this Component, setting it to invisible using the configured <a href=\"#!/api/Ext.Component-cfg-hideMode\" rel=\"Ext.Component-cfg-hideMode\" class=\"docClass\">hideMode</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.dom.Element/Ext.Component","name":"animateTarget","doc":"<p><strong>only valid for\n<a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Components such as <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s or\n<a href=\"#!/api/Ext.tip.ToolTip\" rel=\"Ext.tip.ToolTip\" class=\"docClass\">ToolTip</a>s, or regular Components which have been configured with\n<code>floating: true</code>.</strong>. The target to which the Component should animate while hiding.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":"null","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>A callback function to call after the Component is hidden.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the callback is executed.\nDefaults to this Component.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-beforehide\" rel=\"Ext.Component-event-beforehide\" class=\"docClass\">beforehide</a>"],"method_calls":["fireEvent","fireHierarchyEvent","getInherited","isVisible"],"readonly":null,"required":null,"template":null,"id":"method-hide","owner":"Ext.Component","overrides":null,"short_doc":"Hides this Component, setting it to invisible using the configured hideMode. ...","html_type":null},{"tagname":"method","name":"initBindable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":764}],"doc":"<p>This method triggers the lazy configs and must be called when it is time to\nfully boot up. The configs that must be initialized are: <code>bind</code>, <code>publishes</code>,\n<code>session</code>, <code>twoWayBindable</code> and <code>viewModel</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBind","getPublishes","getViewModel","publishState"],"readonly":null,"required":null,"template":null,"id":"method-initBindable","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"This method triggers the lazy configs and must be called when it is time to\nfully boot up. ...","html_type":null},{"tagname":"method","name":"initBorderRegion","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/border/Region.js","linenr":9}],"doc":"<p>This method is called by the <code><a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a></code> class when instances are\nadded as regions to the layout. Since it is valid to add any component to a border\nlayout as a region, this method must be added to <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> but is only ever\ncalled when that component is owned by a <code>border</code> layout.</p>\n\n<p><strong>Defined in override Ext.layout.container.border.Region.</strong></p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addPropertyToState","addStateEvents","callParent"],"readonly":null,"required":null,"template":null,"id":"method-initBorderRegion","owner":"Ext.Component","overrides":null,"short_doc":"This method is called by the Ext.layout.container.Border class when instances are\nadded as regions to the layout. ...","html_type":null},{"tagname":"method","name":"initComponent","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":155}],"doc":"<p>eslint-enable indent</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":155,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-change\" rel=\"Ext.form.CheckboxGroup-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-dirtychange\" rel=\"Ext.form.CheckboxGroup-event-dirtychange\" class=\"docClass\">dirtychange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-errorchange\" rel=\"Ext.form.CheckboxGroup-event-errorchange\" class=\"docClass\">errorchange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["callParent","initField"],"readonly":null,"required":null,"template":true,"id":"method-initComponent","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"initComponent","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-method-initComponent\" rel=\"Ext.form.FieldContainer-method-initComponent\" class=\"docClass\">Ext.form.FieldContainer.initComponent</a>"}],"short_doc":"eslint-enable indent ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"initEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4141}],"doc":"<p>Initialize any events on this component</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["initFocusableEvents","initKeyMap","mon"],"readonly":null,"required":null,"template":null,"id":"method-initEvents","owner":"Ext.Component","overrides":null,"short_doc":"Initialize any events on this component ...","html_type":null},{"tagname":"method","name":"initField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":138}],"doc":"<p>Initializes this Field mixin on the current instance. Components using this mixin\nshould call this method during their own initialization process.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-change\" rel=\"Ext.form.field.Field-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>","errorchange","<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["initValue","on"],"readonly":null,"required":null,"template":null,"id":"method-initField","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Initializes this Field mixin on the current instance. ...","html_type":null},{"tagname":"method","name":"initFieldAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":95}],"doc":"<p>Initializes the FieldAncestor's state; this must be called from the initComponent method\nof any components importing this mixin.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["initFieldDefaults"],"readonly":null,"required":null,"template":null,"id":"method-initFieldAncestor","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Initializes the FieldAncestor's state; this must be called from the initComponent method\nof any components importing ...","html_type":null},{"tagname":"method","name":"initFieldDefaults","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":149}],"doc":"<p>Initialize the <a href=\"#!/api/Ext.form.FieldAncestor-cfg-fieldDefaults\" rel=\"Ext.form.FieldAncestor-cfg-fieldDefaults\" class=\"docClass\">fieldDefaults</a> object</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initFieldDefaults","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Initialize the fieldDefaults object ...","html_type":null},{"tagname":"method","name":"initFieldInheritedState","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":120}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"inheritedState","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":120,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initFieldInheritedState","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initFloatConstrain","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":284}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":284,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initFloatConstrain","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initFocusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":138}],"doc":"<p>Template method to do any Focusable related initialization that\ndoes not involve event listeners creation.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initFocusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any Focusable related initialization that\ndoes not involve event listeners creation. ...","html_type":null},{"tagname":"method","name":"initFocusableElement","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":763}],"doc":"<p>Sets up the focus listener on this Component's <a href=\"#!/api/Ext.mixin.Focusable-method-getFocusEl\" rel=\"Ext.mixin.Focusable-method-getFocusEl\" class=\"docClass\">focusEl</a> if it has one.</p>\n\n<p>Form Components which must implicitly participate in tabbing order usually have\na naturally focusable element as their <a href=\"#!/api/Ext.mixin.Focusable-method-getFocusEl\" rel=\"Ext.mixin.Focusable-method-getFocusEl\" class=\"docClass\">focusEl</a>, and it is\nthe DOM event of that receiving focus which drives the Component's <code>onFocus</code> handling,\nand the DOM event of it being blurred which drives the <code>onBlur</code> handling.</p>\n","params":[{"tagname":null,"type":"Object","name":"force","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["canFocus","getFocusEl","getTabIndex","setTabIndex"],"readonly":null,"required":null,"template":null,"id":"method-initFocusableElement","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Sets up the focus listener on this Component's focusEl if it has one. ...","html_type":null},{"tagname":"method","name":"initFocusableEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":145}],"doc":"<p>Template method to do any event listener initialization for a Focusable.\nThis generally happens after the focusEl is available.</p>\n","params":[{"tagname":null,"type":"Object","name":"force","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["initFocusableElement"],"readonly":null,"required":null,"template":null,"id":"method-initFocusableEvents","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any event listener initialization for a Focusable. ...","html_type":null},{"tagname":"method","name":"initHierarchyEvents","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":295}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":295,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initHierarchyEvents","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initInheritedState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1518}],"doc":"<p>Called by <code>getInherited</code> to initialize the inheritedState the first time it is\nrequested.</p>\n","params":[{"tagname":null,"type":"Object","name":"inheritedState","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"inheritedStateInner","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","initContainerInheritedState"],"readonly":null,"required":null,"template":null,"id":"method-initInheritedState","owner":"Ext.container.Container","overrides":[{"name":"initInheritedState","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-initInheritedState\" rel=\"Ext.Component-method-initInheritedState\" class=\"docClass\">Ext.Component.initInheritedState</a>"}],"short_doc":"Called by getInherited to initialize the inheritedState the first time it is\nrequested. ...","html_type":null},{"tagname":"method","name":"initItems","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1478}],"doc":"<p>This method is called to initialize the <code>items</code> collection. A derived class can\noverride this method to do any last minute manipulation of <code>items</code> and then call\nthis method using <code>callParent</code>. Upon return, the <code>items</code> will no longer be a simple\narray.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-add\" rel=\"Ext.container.Container-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.container.Container-event-beforeadd\" rel=\"Ext.container.Container-event-beforeadd\" class=\"docClass\">beforeadd</a>"],"method_calls":["add"],"readonly":null,"required":null,"template":null,"id":"method-initItems","owner":"Ext.container.Container","overrides":null,"short_doc":"This method is called to initialize the items collection. ...","html_type":null},{"tagname":"method","name":"initKeyMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Keyboard.js","linenr":203}],"doc":"<p>This method should be called when the instance is ready to start listening for\nkeyboard events. This is called automatically for <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code> and derived\nclasses. This is done after the component is rendered.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getKeyMap","getKeyMapEnabled","setKeyMapEnabled","setKeyMapListener"],"readonly":null,"required":null,"template":null,"id":"method-initKeyMap","owner":"Ext.mixin.Keyboard","overrides":null,"short_doc":"This method should be called when the instance is ready to start listening for\nkeyboard events. ...","html_type":null},{"tagname":"method","name":"initLabelable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":538}],"doc":"<p>Performs initialization of this mixin. Component classes using this mixin should call\nthis method during their own initialization.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","enableBubble"],"readonly":null,"required":null,"template":null,"id":"method-initLabelable","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Performs initialization of this mixin. ...","html_type":null},{"tagname":"method","name":"initMonitor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":116}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":116,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initMonitor","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initPadding","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6789}],"doc":"<p>Initializes padding by applying it to the target element, or if the layout manages\npadding ensures that the padding on the target element is \"0\".</p>\n","params":[{"tagname":null,"type":"Object","name":"targetEl","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["unitizeBox"],"readonly":null,"required":null,"template":null,"id":"method-initPadding","owner":"Ext.Component","overrides":null,"short_doc":"Initializes padding by applying it to the target element, or if the layout manages\npadding ensures that the padding o...","html_type":null},{"tagname":"method","name":"initPlugin","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6818}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"plugin","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initPlugin","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initRenderData","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":164}],"doc":"<p>Initialized the renderData to be used when rendering the renderTpl.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>Object with keys and values that are going to be applied to the renderTpl</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":164,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-initRenderData","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"initRenderData","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-method-initRenderData\" rel=\"Ext.form.FieldContainer-method-initRenderData\" class=\"docClass\">Ext.form.FieldContainer.initRenderData</a>"}],"short_doc":"Initialized the renderData to be used when rendering the renderTpl. ...","html_type":null},{"tagname":"method","name":"initRenderTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1433}],"doc":"<p>Initializes the renderTpl.</p>\n","params":[],"return":{"type":"Ext.XTemplate","name":"return","doc":"<p>The renderTpl XTemplate instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookupTpl","setupRenderTpl"],"readonly":null,"required":null,"template":null,"id":"method-initRenderTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Initializes the renderTpl. ...","html_type":null},{"tagname":"method","name":"initState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":326}],"doc":"<p>Initializes the state of the object upon construction.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestaterestore\" rel=\"Ext.state.Stateful-event-beforestaterestore\" class=\"docClass\">beforestaterestore</a>","<a href=\"#!/api/Ext.state.Stateful-event-staterestore\" rel=\"Ext.state.Stateful-event-staterestore\" class=\"docClass\">staterestore</a>"],"method_calls":["applyState","fireEvent","getPlugins","getStateId"],"readonly":null,"required":null,"template":null,"id":"method-initState","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Initializes the state of the object upon construction. ...","html_type":null},{"tagname":"method","name":"initStyles","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6842}],"doc":"<p>Applies padding, margin, border, top, left, height, and width configs to the\nappropriate elements.</p>\n","params":[{"tagname":null,"type":"Object","name":"targetEl","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFrameInfo","initPadding","setBorder","unitizeBox"],"readonly":null,"required":null,"template":null,"id":"method-initStyles","owner":"Ext.Component","overrides":null,"short_doc":"Applies padding, margin, border, top, left, height, and width configs to the\nappropriate elements. ...","html_type":null},{"tagname":"method","name":"initValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":184}],"doc":"<p>Initializes the field's value based on the initial config. If the <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-value\" rel=\"Ext.form.CheckboxGroup-cfg-value\" class=\"docClass\">value</a> config\nis specified then we use that to set the value; otherwise we initialize the originalValue\nby querying the values of all sub-checkboxes after they have been initialized.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-change\" rel=\"Ext.form.CheckboxGroup-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-dirtychange\" rel=\"Ext.form.CheckboxGroup-event-dirtychange\" class=\"docClass\">dirtychange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-errorchange\" rel=\"Ext.form.CheckboxGroup-event-errorchange\" class=\"docClass\">errorchange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["getValue","setValue"],"readonly":null,"required":null,"template":null,"id":"method-initValue","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"initValue","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-initValue\" rel=\"Ext.form.field.Field-method-initValue\" class=\"docClass\">Ext.form.field.Field.initValue</a>"}],"short_doc":"Initializes the field's value based on the initial config. ...","html_type":null},{"tagname":"method","name":"insert","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1540}],"doc":"<p>Inserts a Component into this Container at a specified index. Fires the\n<a href=\"#!/api/Ext.container.Container-event-beforeadd\" rel=\"Ext.container.Container-event-beforeadd\" class=\"docClass\">beforeadd</a> event before inserting, then fires the <a href=\"#!/api/Ext.container.Container-event-add\" rel=\"Ext.container.Container-event-add\" class=\"docClass\">add</a>\nevent after the Component has been inserted.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the Component will be inserted\ninto the Container's items collection</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component/Object/Ext.Component[]/Object[]","name":"component","doc":"<p>The child Component\nor config object to insert.</p>\n\n<p>Ext uses lazy rendering, and will only render the inserted Component should\nit become necessary.</p>\n\n<p>A Component config object may be passed in order to avoid the overhead of\nconstructing a real Component object if lazy rendering might mean that the\ninserted Component will not be rendered immediately. To take advantage of\nthis 'lazy instantiation', set the <a href=\"#!/api/Ext.Component-cfg-xtype\" rel=\"Ext.Component-cfg-xtype\" class=\"docClass\">Ext.Component.xtype</a> config\nproperty to the registered type of the Component wanted.</p>\n\n<p>You can pass an array of Component instances and config objects.</p>\n\n<p>For a list of all available xtypes, see <a href=\"#!/api/Ext.enums.Widget\" rel=\"Ext.enums.Widget\" class=\"docClass\">Ext.enums.Widget</a>.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>component The Component (or config object) that was\ninserted with the Container's default config values applied.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-add\" rel=\"Ext.container.Container-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.container.Container-event-beforeadd\" rel=\"Ext.container.Container-event-beforeadd\" class=\"docClass\">beforeadd</a>","<a href=\"#!/api/Ext.container.Container-event-childmove\" rel=\"Ext.container.Container-event-childmove\" class=\"docClass\">childmove</a>"],"method_calls":["add","move"],"readonly":null,"required":null,"template":null,"id":"method-insert","owner":"Ext.container.Container","overrides":null,"short_doc":"Inserts a Component into this Container at a specified index. ...","html_type":null},{"tagname":"method","name":"invalidateInheritedState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":389}],"doc":"<p>This method marks the current inherited state as invalid. The next time a call is\nmade to <code>getInherited</code> the objects will be recreated and initialized.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-invalidateInheritedState","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"This method marks the current inherited state as invalid. ...","html_type":null},{"tagname":"method","name":"is","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4173}],"doc":"<p>Tests whether this Component matches a <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a>\nselector string.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The selector string to test against.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this Component matches the selector.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-is","owner":"Ext.Component","overrides":null,"short_doc":"Tests whether this Component matches a ComponentQuery\nselector string. ...","html_type":null},{"tagname":"method","name":"isAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":358}],"doc":"<p>Determines whether <strong>this Component</strong> is an ancestor of the passed Component.\nThis will return <code>true</code> if the passed Component is anywhere within the subtree\nbeneath this Component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"possibleDescendant","doc":"<p>The Component to test for presence\nwithin this Component's subtree.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isAncestor","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Determines whether this Component is an ancestor of the passed Component. ...","html_type":null},{"tagname":"method","name":"isBlurring","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":899}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-isBlurring","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"isBound","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":382}],"doc":"<p>Determines if the passed property name is bound to ViewModel data.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The property name to test. Defaults to the\n<a href=\"#!/api/Ext.mixin.Bindable-property-defaultBindProperty\" rel=\"Ext.mixin.Bindable-property-defaultBindProperty\" class=\"docClass\">defaultBindProperty</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the passed property receives data from a ViewModel.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBind"],"readonly":null,"required":null,"template":null,"id":"method-isBound","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Determines if the passed property name is bound to ViewModel data. ...","html_type":null},{"tagname":"method","name":"isDescendantOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":348}],"doc":"<p>Determines whether this component is the descendant of a passed component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"ancestor","doc":"<p>A Component which may contain this Component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the component is the descendant of the passed component,\notherwise <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isDescendantOf","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Determines whether this component is the descendant of a passed component. ...","html_type":null},{"tagname":"method","name":"isDestructing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":214}],"doc":"<p>Determines if this Component is inside a Component tree which is destroyed, <em>or\nis being destroyed</em>.</p>\n","params":[],"return":{"type":"boolean","name":"return","doc":"<p><code>true</code> if this Component, or any ancestor is destroyed, or\nis being destroyed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isDestructing","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Determines if this Component is inside a Component tree which is destroyed, or\nis being destroyed. ...","html_type":null},{"tagname":"method","name":"isDirty","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":302}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-isDirty","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"isDirty","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">Ext.form.field.Field.isDirty</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"isDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4183}],"doc":"<p>Method to determine whether this Component is currently disabled.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>the disabled state of this Component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isDisabled","owner":"Ext.Component","overrides":null,"short_doc":"Method to determine whether this Component is currently disabled. ...","html_type":null},{"tagname":"method","name":"isDraggable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4191}],"doc":"<p>Method to determine whether this Component is draggable.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>the draggable state of this component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isDraggable","owner":"Ext.Component","overrides":null,"short_doc":"Method to determine whether this Component is draggable. ...","html_type":null},{"tagname":"method","name":"isDroppable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4199}],"doc":"<p>Method to determine whether this Component is droppable.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>the droppable state of this component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isDroppable","owner":"Ext.Component","overrides":null,"short_doc":"Method to determine whether this Component is droppable. ...","html_type":null},{"tagname":"method","name":"isEqual","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":250}],"doc":"<p>The group value is a complex object, compare using object serialization</p>\n","params":[{"tagname":null,"type":"Object","name":"value1","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"value2","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isEqual","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"isEqual","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-isEqual\" rel=\"Ext.form.field.Field-method-isEqual\" class=\"docClass\">Ext.form.field.Field.isEqual</a>"}],"short_doc":"The group value is a complex object, compare using object serialization ...","html_type":null},{"tagname":"method","name":"isEqualAsString","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":261}],"doc":"<p>Returns whether two values are logically equal.\nSimilar to <a href=\"#!/api/Ext.form.field.Field-method-isEqual\" rel=\"Ext.form.field.Field-method-isEqual\" class=\"docClass\">isEqual</a>, however null or undefined values will be treated\nas empty strings.</p>\n","params":[{"tagname":"params","type":"Object","name":"value1","doc":"<p>The first value to compare</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value2","doc":"<p>The second value to compare</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the values are equal, false if inequal.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isEqualAsString","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns whether two values are logically equal. ...","html_type":null},{"tagname":"method","name":"isFileUpload","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":574}],"doc":"<p>Returns whether this Field is a file upload field; if it returns true, forms will use special\ntechniques for <a href=\"#!/api/Ext.form.Basic-method-submit\" rel=\"Ext.form.Basic-method-submit\" class=\"docClass\">submitting the form</a> via AJAX.\nSee <a href=\"#!/api/Ext.form.Basic-method-hasUpload\" rel=\"Ext.form.Basic-method-hasUpload\" class=\"docClass\">Ext.form.Basic.hasUpload</a> for details. If this returns true, the\n<a href=\"#!/api/Ext.form.field.Field-method-extractFileInput\" rel=\"Ext.form.field.Field-method-extractFileInput\" class=\"docClass\">extractFileInput</a> method must also be implemented to return the corresponding file\ninput element.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isFileUpload","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns whether this Field is a file upload field; if it returns true, forms will use special\ntechniques for submitti...","html_type":null},{"tagname":"method","name":"isFloating","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4207}],"doc":"<p>Method to determine whether this Component is floating.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>the floating state of this component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isFloating","owner":"Ext.Component","overrides":null,"short_doc":"Method to determine whether this Component is floating. ...","html_type":null},{"tagname":"method","name":"isFocusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":180}],"doc":"<p>Determine if this Focusable can receive focus at this time.</p>\n\n<p>Note that Containers can be non-focusable themselves while delegating\nfocus treatment to a child Component; see <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">#defaultFocus</a>\nfor more information.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>Optionally determine if the container itself\nis focusable, or if container's focus is delegated to a child component\nand that child is focusable.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if component is focusable, false if not.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["canFocus","getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-isFocusable","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Determine if this Focusable can receive focus at this time. ...","html_type":null},{"tagname":"method","name":"isFocusing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":877}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusEl"],"readonly":null,"required":null,"template":null,"id":"method-isFocusing","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"isHidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4215}],"doc":"<p>Method to determine whether this Component is currently set to hidden.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>the hidden state of this Component.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isHidden","owner":"Ext.Component","overrides":null,"short_doc":"Method to determine whether this Component is currently set to hidden. ...","html_type":null},{"tagname":"method","name":"isHierarchicallyHidden","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4227}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":4227,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-isHierarchicallyHidden","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"isLayoutChild","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4266}],"doc":"<p>Checks if this component will be contained by the passed component as part of its\nlayout run. If <code>true</code>, then the layout on <code>this</code> can be skipped because it will be\nencompassed when the layout for <code>comp</code> runs. Typical cases where this may be be <code>false</code>\nis when asking about floaters nested in containers.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"ownerCandidate","doc":"<p>The potential owner.</p>\n\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this component is a layout child of <code>comp</code>.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["up"],"readonly":null,"required":null,"template":null,"id":"method-isLayoutChild","owner":"Ext.Component","overrides":null,"short_doc":"Checks if this component will be contained by the passed component as part of its\nlayout run. ...","html_type":null},{"tagname":"method","name":"isLayoutRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4280}],"doc":"<p>Determines whether this Component is the root of a layout. This returns <code>true</code> if\nthis component can run its layout without assistance from or impact on its owner.\nIf this component cannot run its layout given these restrictions, <code>false</code> is returned\nand its owner will be considered as the next candidate for the layout root.</p>\n\n<p>Setting the <a href=\"#!/api/Ext.Component-property-_isLayoutRoot\" rel=\"Ext.Component-property-_isLayoutRoot\" class=\"docClass\">_isLayoutRoot</a> property to <code>true</code> causes this method to always\nreturn <code>true</code>. This may be useful when updating a layout of a Container which shrink\nwraps content, and you know that it will not change size, and so can safely be the\ntopmost participant in the layout run.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isLayoutRoot","owner":"Ext.Component","overrides":null,"short_doc":"Determines whether this Component is the root of a layout. ...","html_type":null},{"tagname":"method","name":"isLayoutSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4307}],"doc":"<p>Returns <code>true</code> if layout is suspended for this component. This can come from direct\nsuspension of this component's layout activity (<a href=\"#!/api/Ext.container.Container-cfg-suspendLayout\" rel=\"Ext.container.Container-cfg-suspendLayout\" class=\"docClass\">Ext.Container.suspendLayout</a>)\nor if one of this component's containers is suspended.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> layout of this component is suspended.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isLayoutSuspended","owner":"Ext.Component","overrides":null,"short_doc":"Returns true if layout is suspended for this component. ...","html_type":null},{"tagname":"method","name":"isLocalRtl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":95}],"doc":"<p>Returns true if this component's local coordinate system is rtl. For normal\ncomponents this equates to the value of isParentRtl().  Floaters are a bit different\nbecause a floater's element can be a childNode of something other than its\nparent component's element.  For floaters we have to read the dom to see if the\ncomponent's element's parentNode has a css direction value of \"rtl\".</p>\n\n<p><strong>Defined in override Ext.rtl.Component.</strong></p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isParentRtl"],"readonly":null,"required":null,"template":null,"id":"method-isLocalRtl","owner":"Ext.Component","overrides":null,"short_doc":"Returns true if this component's local coordinate system is rtl. ...","html_type":null},{"tagname":"method","name":"isMasked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4398}],"doc":"<p>Returns masked state for this Component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>True to look up this Component's parent masked state.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if masked, false otherwise.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-isMasked","owner":"Ext.Component","overrides":null,"short_doc":"Returns masked state for this Component. ...","html_type":null},{"tagname":"method","name":"isOppositeRootDirection","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":175}],"doc":"<p><strong>Defined in override Ext.rtl.Component.</strong></p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":175,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-isOppositeRootDirection","owner":"Ext.Component","overrides":null,"short_doc":"Defined in override Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"isParentRtl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":129}],"doc":"<p>Returns true if this component's parent container is rtl. Used by rtl positioning\nmethods to determine if the component should be positioned using a right-to-left\ncoordinate system.</p>\n\n<p><strong>Defined in override Ext.rtl.Component.</strong></p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-isParentRtl","owner":"Ext.Component","overrides":null,"short_doc":"Returns true if this component's parent container is rtl. ...","html_type":null},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks if all events, or a specific event, is suspended. ...","html_type":null},{"tagname":"method","name":"isSyncing","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":800}],"doc":"<p>Checks if a particular binding is synchronizing the value.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the property being bound to.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the binding is syncing.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBind"],"readonly":null,"required":null,"template":null,"id":"method-isSyncing","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Checks if a particular binding is synchronizing the value. ...","html_type":null},{"tagname":"method","name":"isValid","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":504}],"doc":"<p>Returns whether or not the field value is currently valid by <a href=\"#!/api/Ext.form.field.Field-method-getErrors\" rel=\"Ext.form.field.Field-method-getErrors\" class=\"docClass\">validating</a>\nthe field's current value. The <a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a> event will not be fired;\nuse <a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validate</a> instead if you want the event to fire.\n<strong>Note</strong>: <a href=\"#!/api/Ext.form.field.Field-cfg-disabled\" rel=\"Ext.form.field.Field-cfg-disabled\" class=\"docClass\">disabled</a> fields are always treated as valid.</p>\n\n<p>Implementations are encouraged to ensure that this method does not have side-effects\nsuch as triggering error message display.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>True if the value is valid, else false</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getErrors"],"readonly":null,"required":null,"template":null,"id":"method-isValid","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Returns whether or not the field value is currently valid by validating\nthe field's current value. ...","html_type":null},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4340}],"doc":"<p>Returns <code>true</code> if this component is visible.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>Pass <code>true</code> to interrogate the visibility status of all\nparent Containers to determine whether this Component is truly visible to the user.</p>\n\n<p>Generally, to determine whether a Component is hidden, the no argument form is needed.\nFor example when creating dynamically laid out UIs in a hidden Container before showing them.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this component is visible, <code>false</code> otherwise.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isHierarchicallyHidden"],"readonly":null,"required":null,"template":null,"id":"method-isVisible","owner":"Ext.Component","overrides":null,"short_doc":"Returns true if this component is visible. ...","html_type":null},{"tagname":"method","name":"isXType","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4367}],"doc":"<p>Tests whether or not this Component is of a specific xtype. This can test whether this\nComponent is descended from the xtype (default) or whether it is directly of the xtype\nspecified (<code>shallow = true</code>).</p>\n\n<p><strong>If using your own subclasses, be aware that a Component must register its own xtype\nto participate in determination of inherited xtypes.</strong></p>\n\n<p>For a list of all available xtypes, see the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> header.</p>\n\n<p>Example usage:</p>\n\n<pre class='inline-example '><code>var t = new <a href=\"#!/api/Ext.form.field.Text\" rel=\"Ext.form.field.Text\" class=\"docClass\">Ext.form.field.Text</a>();\nvar isText = t.isXType('textfield');          // true\nvar isBoxSubclass = t.isXType('field');       // true, descended from <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>\nvar isBoxInstance = t.isXType('field', true); // false, not a direct <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>\n                                              // instance\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"xtype","doc":"<p>The xtype to check for this Component</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"shallow","doc":"<p><code>true</code> to check whether this Component is directly\nof the specified xtype, <code>false</code> to check whether this Component is descended from the xtype.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this component descends from the specified xtype,\n<code>false</code> otherwise.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isXType","owner":"Ext.Component","overrides":null,"short_doc":"Tests whether or not this Component is of a specific xtype. ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"lookup","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":103}],"doc":"<p>Gets a reference to the component with the specified\n<a href=\"#!/api/Ext.Component-cfg-reference\" rel=\"Ext.Component-cfg-reference\" class=\"docClass\">reference</a> value.</p>\n\n<p>The method is a short-hand for the <a href=\"#!/api/Ext.mixin.Container-method-lookupReference\" rel=\"Ext.mixin.Container-method-lookupReference\" class=\"docClass\">lookupReference</a> method.</p>\n","params":[{"tagname":"params","type":"String","name":"ref","doc":"<p>The value of the <code>reference</code> to lookup.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The referenced component or <code>null</code> if it is not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getReferences"],"readonly":null,"required":null,"template":null,"id":"method-lookup","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Gets a reference to the component with the specified\nreference value. ...","html_type":null},{"tagname":"method","name":"lookupComponent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1583}],"doc":"<p>Called when a raw config object is added to this container either during initialization\nof the <a href=\"#!/api/Ext.container.Container-cfg-items\" rel=\"Ext.container.Container-cfg-items\" class=\"docClass\">items</a> config, or when new items are <a href=\"#!/api/Ext.container.Container-method-add\" rel=\"Ext.container.Container-method-add\" class=\"docClass\">added</a>,\nor <a href=\"#!/api/Ext.container.Container-method-insert\" rel=\"Ext.container.Container-method-insert\" class=\"docClass\">inserted</a>.</p>\n\n<p>This method converts the passed object into an instanced child component.</p>\n\n<p>This may be overridden in subclasses when special processing needs to be applied to child\ncreation.</p>\n","params":[{"tagname":"params","type":"Object","name":"comp","doc":"<p>The config object being added.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The component to be added.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAction"],"readonly":null,"required":null,"template":null,"id":"method-lookupComponent","owner":"Ext.container.Container","overrides":null,"short_doc":"Called when a raw config object is added to this container either during initialization\nof the items config, or when ...","html_type":null},{"tagname":"method","name":"lookupController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":395}],"doc":"<p>Gets the controller that controls this view. May be a controller that belongs\nto a view higher in the hierarchy.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p><code>true</code> to not consider the controller directly attached\nto this view (if it exists).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.app.ViewController","name":"return","doc":"<p>The controller. <code>null</code> if no controller is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig"],"readonly":null,"required":null,"template":null,"id":"method-lookupController","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Gets the controller that controls this view. ...","html_type":null},{"tagname":"method","name":"lookupName","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":119}],"doc":"<p>Gets a reference to the component with the specified <code>name</code> property.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the descendant to lookup.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The component or <code>null</code> if it is not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getNamedItems"],"readonly":null,"required":null,"template":null,"id":"method-lookupName","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Gets a reference to the component with the specified name property. ...","html_type":null},{"tagname":"method","name":"lookupNameHolder","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":268}],"doc":"<p>Gets the Form or Component that is used as the name holder for this component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p><code>false</code> to return this as the name holder if\nthis instance has set <code>nameHolder</code>. Unlike <code>getInheritedConfig</code> this method\ndefaults to <code>true</code> because it is possible that a <code>name</code> property set by the\nowner of a component that is also a <code>nameHolder</code> itself. In this case, the\n<code>name</code> connects not to this component but to the parent nameHolder.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The name holder.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig"],"readonly":null,"required":null,"template":null,"id":"method-lookupNameHolder","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Gets the Form or Component that is used as the name holder for this component. ...","html_type":null},{"tagname":"method","name":"lookupReference","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Container.js","linenr":132}],"doc":"<p>Gets a reference to the component with the specified reference value.</p>\n\n<p>The <a href=\"#!/api/Ext.mixin.Container-method-lookup\" rel=\"Ext.mixin.Container-method-lookup\" class=\"docClass\">lookup</a> method is a short-hand version of this method.</p>\n","params":[{"tagname":"params","type":"String","name":"ref","doc":"<p>The name of the reference to lookup.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The referenced component or <code>null</code> if it is not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["lookup"],"readonly":null,"required":null,"template":null,"id":"method-lookupReference","owner":"Ext.mixin.Container","overrides":null,"short_doc":"Gets a reference to the component with the specified reference value. ...","html_type":null},{"tagname":"method","name":"lookupReferenceHolder","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":286}],"doc":"<p>Gets the Controller or Component that is used as the reference holder for this view.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p><code>false</code> to return this as the reference holder if\nthis instance has set <code>referenceHolder</code>. Unlike <code>getInheritedConfig</code> this method\ndefaults to <code>true</code> because it is possible that a <code>reference</code> property set by the\nowner of a component that is also a <code>referenceHolder</code> itself. In this case, the\n<code>reference</code> connects not to this component but to the parent referenceHolder.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.app.ViewController/Ext.container.Container","name":"return","doc":"<p>The reference holder.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>/<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig"],"readonly":null,"required":null,"template":null,"id":"method-lookupReferenceHolder","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Gets the Controller or Component that is used as the reference holder for this view. ...","html_type":null},{"tagname":"method","name":"lookupSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":409}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a></code> for this instance. This property may come\nfrom this instance's <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a></code> or be inherited from this object's parent.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p>Pass <code>true</code> to ignore a <code>session</code> configured on\nthis instance and only consider an inherited session.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.Session","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig","getSession"],"readonly":null,"required":null,"template":null,"id":"method-lookupSession","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the Ext.data.Session for this instance. ...","html_type":null},{"tagname":"method","name":"lookupTpl","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4412}],"doc":"<p>Gets a named template instance for this class. See <a href=\"#!/api/Ext.XTemplate-static-method-getTpl\" rel=\"Ext.XTemplate-static-method-getTpl\" class=\"docClass\">Ext.XTemplate.getTpl</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the property that holds the template.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.XTemplate","name":"return","doc":"<p>The template, <code>null</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.XTemplate\" rel=\"Ext.XTemplate\" class=\"docClass\">Ext.XTemplate</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-lookupTpl","owner":"Ext.Component","overrides":null,"short_doc":"Gets a named template instance for this class. ...","html_type":null},{"tagname":"method","name":"lookupViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":432}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a></code> for this instance. This property may come from this\nthis instance's <code><a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a></code> or be inherited from this object's parent.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"skipThis","doc":"<p>Pass <code>true</code> to ignore a <code>viewModel</code> configured on\nthis instance and only consider an inherited view model.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.app.ViewModel","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig","getViewModel"],"readonly":null,"required":null,"template":null,"id":"method-lookupViewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Returns the Ext.app.ViewModel for this instance. ...","html_type":null},{"tagname":"method","name":"markInvalid","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":597}],"doc":"<p>Display one or more error messages associated with this field, using\n<a href=\"#!/api/Ext.form.Labelable-cfg-msgTarget\" rel=\"Ext.form.Labelable-cfg-msgTarget\" class=\"docClass\">Ext.form.Labelable.msgTarget</a> to determine how to display the messages and\napplying <a href=\"#!/api/Ext.form.Labelable-cfg-invalidCls\" rel=\"Ext.form.Labelable-cfg-invalidCls\" class=\"docClass\">Ext.form.Labelable.invalidCls</a> to the field's UI element.</p>\n\n<pre><code>var formPanel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'Contact Info',\n    width: 300,\n    bodyPadding: 10,\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    items: [{\n        xtype: 'textfield',\n        name: 'name',\n        id: 'nameId',\n        fieldLabel: 'Name'\n    }],\n    bbar: [{\n        text: 'Mark both fields invalid',\n        handler: function() {\n            var nameField = formPanel.getForm().findField('name');\n            nameField.markInvalid('Name invalid message');\n\n            // multiple error string syntax\n            // nameField.markInvalid(['First message', 'Second message']);\n        }\n    }]\n});\n</code></pre>\n\n<p><strong>Note</strong>: this method does not cause the Field's <a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">validate</a> or\n<a href=\"#!/api/Ext.form.field.Field-method-isValid\" rel=\"Ext.form.field.Field-method-isValid\" class=\"docClass\">isValid</a> methods to return <code>false</code> if the value does <em>pass</em> validation.\nSo simply marking a Field as invalid will not prevent submission of forms\nsubmitted with the <a href=\"#!/api/Ext.form.action.Submit-cfg-clientValidation\" rel=\"Ext.form.action.Submit-cfg-clientValidation\" class=\"docClass\">Ext.form.action.Submit.clientValidation</a> option set.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"errors","doc":"<p>The validation message(s) to display.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-markInvalid","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Display one or more error messages associated with this field, using\nExt.form.Labelable.msgTarget to determine how to...","html_type":null},{"tagname":"method","name":"mask","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4449}],"doc":"<p>Masks this component with a semi-opaque layer and makes the contents unavailable to clicks.</p>\n\n<p>See <a href=\"#!/api/Ext.Component-method-unmask\" rel=\"Ext.Component-method-unmask\" class=\"docClass\">unmask</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"msg","doc":"<p>A message to show in the center of the mask layer.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"msgCls","doc":"<p>A CSS class name to use on the message element in the center\nof the layer.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"elHeight","doc":"<p>(private) The height of element to be masked</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getMaskTarget","setMasked"],"readonly":null,"required":null,"template":null,"id":"method-mask","owner":"Ext.Component","overrides":null,"short_doc":"Masks this component with a semi-opaque layer and makes the contents unavailable to clicks. ...","html_type":null},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mon","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for addManagedListener. ...","html_type":null},{"tagname":"method","name":"move","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1631}],"doc":"<p>Moves a Component within the Container. This method does <strong>not</strong> account for things\nlike splitter components added by a layout. To better handle these situations, it\nis recommended to use <code><a href=\"#!/api/Ext.container.Container-method-moveBefore\" rel=\"Ext.container.Container-method-moveBefore\" class=\"docClass\">moveBefore</a></code> or <code><a href=\"#!/api/Ext.container.Container-method-moveAfter\" rel=\"Ext.container.Container-method-moveAfter\" class=\"docClass\">moveAfter</a></code> instead.</p>\n","params":[{"tagname":"params","type":"Number/Ext.Component","name":"fromIdx","doc":"<p>The index/component to move.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"toIdx","doc":"<p>The new index for the Component.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>component The Component that was moved.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <code><a href=\"#!/api/Ext.container.Container-method-moveBefore\" rel=\"Ext.container.Container-method-moveBefore\" class=\"docClass\">moveBefore</a></code> or <code><a href=\"#!/api/Ext.container.Container-method-moveAfter\" rel=\"Ext.container.Container-method-moveAfter\" class=\"docClass\">moveAfter</a></code> instead.</p>\n\n","version":"5.0"},"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-childmove\" rel=\"Ext.container.Container-event-childmove\" class=\"docClass\">childmove</a>"],"method_calls":["fireEvent","onMove","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-move","owner":"Ext.container.Container","overrides":[{"name":"move","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-move\" rel=\"Ext.util.Positionable-method-move\" class=\"docClass\">Ext.util.Positionable.move</a>"}],"short_doc":"Moves a Component within the Container. ...","html_type":null},{"tagname":"method","name":"moveAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1727}],"doc":"<p>Moves the given <code>item(s)</code> into this container following <code>after</code>. This method will\naccount for layout-generated components like splitters and should be used instead\nof index based <code><a href=\"#!/api/Ext.container.Container-method-move\" rel=\"Ext.container.Container-method-move\" class=\"docClass\">move</a></code>. If <code>after</code> is <code>null</code> then the <code>item</code> will be the\nfirst item in this container.</p>\n\n<pre><code>var tb = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'toolbar',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    items: [{\n        text: 'one'\n    }, {\n        text: 'two'\n    }]\n});\n\n// moves the 'one' button after the 'two' button\ntb.moveAfter(tb.getComponent(0), tb.getComponent(1));\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Component[]","name":"item","doc":"<p>The item to move. May be a component,\ncomponent configuration object, or an array of either.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"after","doc":"<p>The reference component. May be <code>null</code>.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component/Ext.Component[]","name":"return","doc":"<p>The moved item(s).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["moveBefore"],"readonly":null,"required":null,"template":null,"id":"method-moveAfter","owner":"Ext.container.Container","overrides":null,"short_doc":"Moves the given item(s) into this container following after. ...","html_type":null},{"tagname":"method","name":"moveBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1674}],"doc":"<p>Moves the given <code>item(s)</code> into this container in front of <code>before</code>. This method\nwill account for layout-generated components like splitters and should be used\ninstead of index based <code><a href=\"#!/api/Ext.container.Container-method-move\" rel=\"Ext.container.Container-method-move\" class=\"docClass\">move</a></code>. If <code>before</code> is <code>null</code> then the\n<code>item</code> will be the last item in this container.</p>\n\n<pre><code>var tb = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'toolbar',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    items: [{\n        text: 'one'\n    }, {\n        text: 'two'\n    }]\n});\n\n// moves the 'two' button before the 'one' button\ntb.moveBefore(tb.getComponent(1), tb.getComponent(0));\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Component[]","name":"item","doc":"<p>The item to move. May be a component,\ncomponent configuration object, or an array of either.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"before","doc":"<p>The reference component. May be <code>null</code>.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component/Ext.Component[]","name":"return","doc":"<p>The moved item(s).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-moveBefore","owner":"Ext.container.Container","overrides":null,"short_doc":"Moves the given item(s) into this container in front of before. ...","html_type":null},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mun","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeManagedListener. ...","html_type":null},{"tagname":"method","name":"nextChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1764}],"doc":"<p>A method to find a child component after the passed child parameter. If a selector is also\nprovided, the first child component matching the selector will be returned.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"child","doc":"<p>The child to use as a starting point to find the next child.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector to find the next child.\nThis will return the next child matching this selector. This parameter is optional.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The next child found, <code>null</code> if no child found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-nextChild","owner":"Ext.container.Container","overrides":null,"short_doc":"A method to find a child component after the passed child parameter. ...","html_type":null},{"tagname":"method","name":"nextNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4476}],"doc":"<p>Returns the next node in the Component tree in tree traversal order.</p>\n\n<p>Note that this is not limited to siblings, and if invoked upon a node with no matching\nsiblings, will walk the tree to attempt to find a match. Contrast with <a href=\"#!/api/Ext.Component-method-nextSibling\" rel=\"Ext.Component-method-nextSibling\" class=\"docClass\">nextSibling</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector to filter\nthe following nodes.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"includeSelf","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The next node (or the next node which matches the selector).\nReturns <code>null</code> if there is no matching node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["is"],"readonly":null,"required":null,"template":null,"id":"method-nextNode","owner":"Ext.Component","overrides":null,"short_doc":"Returns the next node in the Component tree in tree traversal order. ...","html_type":null},{"tagname":"method","name":"nextSibling","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4521}],"doc":"<p>Returns the next sibling of this Component.</p>\n\n<p>Optionally selects the next sibling which matches the passed\n<a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector.</p>\n\n<p>May also be referred to as <strong><code>next()</code></strong></p>\n\n<p>Note that this is limited to siblings, and if no siblings of the item match,\n<code>null</code> is returned. Contrast with <a href=\"#!/api/Ext.Component-method-nextNode\" rel=\"Ext.Component-method-nextNode\" class=\"docClass\">nextNode</a></p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector to filter\nthe following items.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The next sibling (or the next sibling which matches the selector).\nReturns <code>null</code> if there is no matching sibling.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-nextSibling","owner":"Ext.Component","overrides":null,"short_doc":"Returns the next sibling of this Component. ...","html_type":null},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-on","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"onAdd","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":201}],"doc":"<p>When a checkbox is added to the group, monitor it for changes</p>\n","params":[{"tagname":"params","type":"Object","name":"field","doc":"<p>The field being added</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","mon","onAdd"],"readonly":null,"required":null,"template":null,"id":"method-onAdd","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"onAdd","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-method-onAdd\" rel=\"Ext.form.FieldContainer-method-onAdd\" class=\"docClass\">Ext.form.FieldContainer.onAdd</a>"}],"short_doc":"When a checkbox is added to the group, monitor it for changes ...","html_type":null},{"tagname":"method","name":"onAdded","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1038}],"doc":"<p>Method to manage awareness of when components are added to their\nrespective Container, firing an <a href=\"#!/api/Ext.container.Container-event-added\" rel=\"Ext.container.Container-event-added\" class=\"docClass\">added</a> event. References are\nestablished at add time rather than at render time.</p>\n\n<p>Allows addition of behavior when a Component is added to a\nContainer. At this stage, the Component is in the parent\nContainer's collection of child items. After calling the\nsuperclass's <code>onAdded</code>, the <code>ownerCt</code> reference will be present,\nand if configured with a ref, the <code>refOwner</code> will be set.</p>\n","params":[{"tagname":null,"type":"Object","name":"container","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"pos","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"instanced","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1038,"fires":["<a href=\"#!/api/Ext.container.Container-event-added\" rel=\"Ext.container.Container-event-added\" class=\"docClass\">added</a>"],"method_calls":["callParent","containerOnAdded"],"readonly":null,"required":null,"template":true,"id":"method-onAdded","owner":"Ext.container.Container","overrides":[{"name":"onAdded","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-onAdded\" rel=\"Ext.Component-method-onAdded\" class=\"docClass\">Ext.Component.onAdded</a>"}],"short_doc":"Method to manage awareness of when components are added to their\nrespective Container, firing an added event. ...","html_type":null},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends an after-event handler. ...","html_type":null},{"tagname":"method","name":"onAfterFloatLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":407}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":407,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onAfterFloatLayout","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends a before-event handler. ...","html_type":null},{"tagname":"method","name":"onBeforeAdd","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1814}],"doc":"<p>This method is invoked before adding a new child Component. It\nis passed the new Component, and may be used to modify the\nComponent, or prepare the Container in some way. Returning\nfalse aborts the add operation.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onBeforeAdd","owner":"Ext.container.Container","overrides":null,"short_doc":"This method is invoked before adding a new child Component. ...","html_type":null},{"tagname":"method","name":"onBeforeDestroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":203}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":203,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onBeforeDestroy","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onBeforeFloatLayout","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":403}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":403,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onBeforeFloatLayout","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onBlur","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":328}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-blur\" rel=\"Ext.mixin.Focusable-event-blur\" class=\"docClass\">blur</a>"],"method_calls":["beforeBlur","fireEvent","postBlur","removeFocusCls"],"readonly":null,"required":null,"template":null,"id":"method-onBlur","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onBoxReady","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4647}],"doc":"<p>Invoked when this component has first achieved size. This occurs after the\n<a href=\"#!/api/Ext.Component-cfg-componentLayout\" rel=\"Ext.Component-cfg-componentLayout\" class=\"docClass\">componentLayout</a> has completed its initial run.</p>\n\n<p>This method is not called on components that use <a href=\"#!/api/Ext.Component-cfg-liquidLayout\" rel=\"Ext.Component-cfg-liquidLayout\" class=\"docClass\">liquidLayout</a>, such as\n<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Buttons</a> and <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Form Fields</a>.</p>\n\n<p><strong>Note:</strong> If the Component has a <a href=\"#!/api/Ext.Component-cfg-controller\" rel=\"Ext.Component-cfg-controller\" class=\"docClass\">ViewController</a>\nand the controller has a <a href=\"#!/api/Ext.app.ViewController-method-boxReady\" rel=\"Ext.app.ViewController-method-boxReady\" class=\"docClass\">boxReady</a> method\nit will be called passing the Component and its width and height.</p>\n\n<pre><code> boxReady: function(view, width, height) {\n     // ...\n }\n</code></pre>\n","params":[{"tagname":"params","type":"Number","name":"width","doc":"<p>The width of this component</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"height","doc":"<p>The height of this component</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-boxready\" rel=\"Ext.Component-event-boxready\" class=\"docClass\">boxready</a>"],"method_calls":["fireEvent","getAriaLabelEl","initDraggable","initResizable"],"readonly":null,"required":null,"template":true,"id":"method-onBoxReady","owner":"Ext.Component","overrides":null,"short_doc":"Invoked when this component has first achieved size. ...","html_type":null},{"tagname":"method","name":"onChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":399}],"doc":"<p>Called when the field's value changes. Performs validation if the <a href=\"#!/api/Ext.form.field.Field-cfg-validateOnChange\" rel=\"Ext.form.field.Field-cfg-validateOnChange\" class=\"docClass\">validateOnChange</a>\nconfig is enabled, and invokes the dirty check.</p>\n","params":[{"tagname":null,"type":"Object","name":"newVal","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.field.Field-event-dirtychange\" rel=\"Ext.form.field.Field-event-dirtychange\" class=\"docClass\">dirtychange</a>","errorchange","<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["checkDirty","validate"],"readonly":null,"required":null,"template":null,"id":"method-onChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Called when the field's value changes. ...","html_type":null},{"tagname":"method","name":"onChildFieldAdd","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":135}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"field","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":135,"fires":[],"method_calls":["mon"],"readonly":null,"required":null,"template":null,"id":"method-onChildFieldAdd","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onChildFieldRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":142}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"field","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":142,"fires":[],"method_calls":["mun"],"readonly":null,"required":null,"template":null,"id":"method-onChildFieldRemove","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":221}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"targetClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":221,"fires":[],"method_calls":["processRenderConfig"],"readonly":null,"required":null,"template":null,"id":"method-onClassMixedIn","owner":"Ext.util.Renderable","overrides":[{"name":"onClassMixedIn","owner":"Ext.mixin.ComponentDelegation","link":"<a href=\"#!/api/Ext.mixin.ComponentDelegation-method-onClassMixedIn\" rel=\"Ext.mixin.ComponentDelegation-method-onClassMixedIn\" class=\"docClass\">Ext.mixin.ComponentDelegation.onClassMixedIn</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"onDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4709}],"doc":"<p>Allows addition of behavior to the destroy operation.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onDestroy","owner":"Ext.Component","overrides":null,"short_doc":"Allows addition of behavior to the destroy operation. ...","html_type":null},{"tagname":"method","name":"onDirtyChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":465}],"doc":"<p>Called when the field's dirty state changes.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isDirty","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onDirtyChange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Called when the field's dirty state changes. ...","html_type":null},{"tagname":"method","name":"onDisable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4718}],"doc":"<p>Allows addition of behavior to the disable operation.\nAfter calling the superclass's <code>onDisable</code>, the Component will be disabled.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["disableFocusable","getInheritedConfig","mask"],"readonly":null,"required":null,"template":true,"id":"method-onDisable","owner":"Ext.Component","overrides":null,"short_doc":"Allows addition of behavior to the disable operation. ...","html_type":null},{"tagname":"method","name":"onEnable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4752}],"doc":"<p>Allows addition of behavior to the enable operation.\nAfter calling the superclass's <code>onEnable</code>, the Component will be enabled.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["enableFocusable","getInherited","unmask"],"readonly":null,"required":null,"template":true,"id":"method-onEnable","owner":"Ext.Component","overrides":null,"short_doc":"Allows addition of behavior to the enable operation. ...","html_type":null},{"tagname":"method","name":"onFieldErrorChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":282}],"doc":"<p>Fired when the error message of any field within the container changes, and updates the\ncombined error message to match.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.FieldContainer-event-errorchange\" rel=\"Ext.form.FieldContainer-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["getActiveError","getCombinedErrors","query","setActiveErrors","unsetActiveError","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-onFieldErrorChange","owner":"Ext.form.FieldContainer","overrides":[{"name":"onFieldErrorChange","owner":"Ext.form.FieldAncestor","link":"<a href=\"#!/api/Ext.form.FieldAncestor-method-onFieldErrorChange\" rel=\"Ext.form.FieldAncestor-method-onFieldErrorChange\" class=\"docClass\">Ext.form.FieldAncestor.onFieldErrorChange</a>"}],"short_doc":"Fired when the error message of any field within the container changes, and updates the\ncombined error message to match. ...","html_type":null},{"tagname":"method","name":"onFieldValidityChange","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":185}],"doc":"<p>Fired when the validity of any field within the container changes.</p>\n","params":[{"tagname":"params","type":"Ext.form.field.Field","name":"field","doc":"<p>The sub-field whose validity changed</p>\n","html_type":"<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"valid","doc":"<p>The new validity state</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onFieldValidityChange","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Fired when the validity of any field within the container changes. ...","html_type":null},{"tagname":"method","name":"onFloatShow","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":632}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":632,"fires":["move"],"method_calls":["alignTo","center"],"readonly":null,"required":null,"template":null,"id":"method-onFloatShow","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onFocus","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":360}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.mixin.Focusable-event-focus\" rel=\"Ext.mixin.Focusable-event-focus\" class=\"docClass\">focus</a>"],"method_calls":["addFocusCls","beforeFocus","canFocus","fireEvent","postFocus"],"readonly":null,"required":null,"template":null,"id":"method-onFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onFocusEnter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2138}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2138,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-onFocusEnter","owner":"Ext.container.Container","overrides":[{"name":"onFocusEnter","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-method-onFocusEnter\" rel=\"Ext.mixin.Focusable-method-onFocusEnter\" class=\"docClass\">Ext.mixin.Focusable.onFocusEnter</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"onFocusLeave","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2152}],"doc":"<p>Called when focus exits from this Component's hierarchy</p>\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2152,"fires":["<a href=\"#!/api/Ext.container.Container-event-focusleave\" rel=\"Ext.container.Container-event-focusleave\" class=\"docClass\">focusleave</a>"],"method_calls":["callParent"],"readonly":null,"required":null,"template":true,"id":"method-onFocusLeave","owner":"Ext.container.Container","overrides":[{"name":"onFocusLeave","owner":"Ext.mixin.Focusable","link":"<a href=\"#!/api/Ext.mixin.Focusable-method-onFocusLeave\" rel=\"Ext.mixin.Focusable-method-onFocusLeave\" class=\"docClass\">Ext.mixin.Focusable.onFocusLeave</a>"}],"short_doc":"Called when focus exits from this Component's hierarchy ...","html_type":null},{"tagname":"method","name":"onFocusMove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":560}],"doc":"<p>Called when focus moves <em>within</em> this Component's hierarchy</p>\n","params":[{"tagname":"params","type":"Object","name":"info","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The underlying Event object.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","properties":null},{"tagname":"params","type":"HTMLElement","name":"toElement","doc":"<p>The element gaining focus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"HTMLElement","properties":null},{"tagname":"params","type":"HTMLElement","name":"fromElement","doc":"<p>The element losing focus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"HTMLElement","properties":null},{"tagname":"params","type":"Ext.Component","name":"toComponent","doc":"<p>The Component gaining focus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","properties":null},{"tagname":"params","type":"Ext.Component","name":"fromComponent","doc":"<p>The Component losing focus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","properties":null},{"tagname":"params","type":"Boolean","name":"backwards","doc":"<p><code>true</code> if the focus movement is backward in DOM order</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onFocusMove","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Called when focus moves within this Component's hierarchy ...","html_type":null},{"tagname":"method","name":"onFocusTopmost","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":588}],"doc":"<p>This method is called internally by <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">Ext.ZIndexManager</a> to signal that a\nfocusable floating Component has become the topost focusable in its zIndex stack.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["focus"],"readonly":null,"required":null,"template":null,"id":"method-onFocusTopmost","owner":"Ext.util.Floating","overrides":null,"short_doc":"This method is called internally by Ext.ZIndexManager to signal that a\nfocusable floating Component has become the to...","html_type":null},{"tagname":"method","name":"onGlobalShow","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4785}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"c","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":4785,"fires":[],"method_calls":["getScrollable","up"],"readonly":null,"required":null,"template":null,"id":"method-onGlobalShow","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onHide","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4791}],"doc":"<p>Allows addition of behavior to the hide operation. After\ncalling the superclass's onHide, the Component will be hidden.</p>\n\n<p>Gets passed the same parameters as <a href=\"#!/api/Ext.Component-event-hide\" rel=\"Ext.Component-event-hide\" class=\"docClass\">hide</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.dom.Element/Ext.Component","name":"animateTarget","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>Callback function to be called when finished</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-hide\" rel=\"Ext.Component-event-hide\" class=\"docClass\">hide</a>"],"method_calls":["afterHide","getAnimateTarget","getSize","ghost","revertFocus","unghost"],"readonly":null,"required":null,"template":true,"id":"method-onHide","owner":"Ext.Component","overrides":null,"short_doc":"Allows addition of behavior to the hide operation. ...","html_type":null},{"tagname":"method","name":"onInheritedAdd","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":440}],"doc":"<p>Called when this Inheritable is added to a parent</p>\n","params":[{"tagname":"params","type":"Object","name":"parent","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"instanced","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["invalidateInheritedState"],"readonly":null,"required":null,"template":null,"id":"method-onInheritedAdd","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Called when this Inheritable is added to a parent ...","html_type":null},{"tagname":"method","name":"onInheritedRemove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":458}],"doc":"<p>Called when this inheritable is removed from a parent</p>\n","params":[{"tagname":"params","type":"Boolean","name":"destroying","doc":"<p><code>true</code> if this item will be destroyed by it's container</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["invalidateInheritedState"],"readonly":null,"required":null,"template":null,"id":"method-onInheritedRemove","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Called when this inheritable is removed from a parent ...","html_type":null},{"tagname":"method","name":"onLabelRender","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":822}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":822,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onLabelRender","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onMouseDown","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":339}],"doc":"<p>Mousedown brings to front, and programmatically grabs focus\nunless the mousedown was on a focusable element</p>\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["tofront"],"method_calls":["getRefOwner","owns","toFront"],"readonly":null,"required":null,"template":null,"id":"method-onMouseDown","owner":"Ext.util.Floating","overrides":null,"short_doc":"Mousedown brings to front, and programmatically grabs focus\nunless the mousedown was on a focusable element ...","html_type":null},{"tagname":"method","name":"onMove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1843}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1843,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onMove","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onPosition","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1861}],"doc":"<p>Called after the component is moved, this method is empty by default but can be implemented\nby any subclass that needs to perform custom logic after a move occurs.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1861,"fires":[],"method_calls":["callParent","repositionFloatingItems"],"readonly":null,"required":null,"template":true,"id":"method-onPosition","owner":"Ext.container.Container","overrides":[{"name":"onPosition","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-onPosition\" rel=\"Ext.Component-method-onPosition\" class=\"docClass\">Ext.Component.onPosition</a>"}],"short_doc":"Called after the component is moved, this method is empty by default but can be implemented\nby any subclass that need...","html_type":null},{"tagname":"method","name":"onRemove","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":231}],"doc":"<p>This method is invoked after a new Component has been\nremoved. It is passed the Component which has been\nremoved. This method may be used to update any internal\nstructure which may depend upon the state of the child items.</p>\n","params":[{"tagname":null,"type":"Object","name":"item","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":231,"fires":[],"method_calls":["callParent","mun","onRemove"],"readonly":null,"required":null,"template":true,"id":"method-onRemove","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"onRemove","owner":"Ext.form.FieldContainer","link":"<a href=\"#!/api/Ext.form.FieldContainer-method-onRemove\" rel=\"Ext.form.FieldContainer-method-onRemove\" class=\"docClass\">Ext.form.FieldContainer.onRemove</a>"}],"short_doc":"This method is invoked after a new Component has been\nremoved. ...","html_type":null},{"tagname":"method","name":"onRemoved","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1043}],"doc":"<p>Method to manage awareness of when components are removed from their\nrespective Container, firing a <a href=\"#!/api/Ext.container.Container-event-removed\" rel=\"Ext.container.Container-event-removed\" class=\"docClass\">removed</a> event. References are properly\ncleaned up after removing a component from its owning container.</p>\n\n<p>Allows addition of behavior when a Component is removed from\nits parent Container. At this stage, the Component has been\nremoved from its parent Container's collection of child items,\nbut has not been destroyed (It will be destroyed if the parent\nContainer's <code>autoDestroy</code> is <code>true</code>, or if the remove call was\npassed a truthy second parameter). After calling the\nsuperclass's <code>onRemoved</code>, the <code>ownerCt</code> and the <code>refOwner</code> will not\nbe present.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"destroying","doc":"<p>Will be passed as <code>true</code> if the Container performing\nthe remove operation will delete this Component upon remove.</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","containerOnRemoved"],"readonly":null,"required":null,"template":null,"id":"method-onRemoved","owner":"Ext.container.Container","overrides":[{"name":"onRemoved","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-onRemoved\" rel=\"Ext.Component-method-onRemoved\" class=\"docClass\">Ext.Component.onRemoved</a>"}],"short_doc":"Method to manage awareness of when components are removed from their\nrespective Container, firing a removed event. ...","html_type":null},{"tagname":"method","name":"onRender","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":680}],"doc":"<p>Template method called when this Component's DOM structure is created.</p>\n\n<p>At this point, this Component's (and all descendants') DOM structure <em>exists</em> but it has not\nbeen layed out (positioned and sized).</p>\n\n<p>Subclasses which override this to gain access to the structure at render time should\ncall the parent class's method before attempting to access any child elements of the\nComponent.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"parentNode","doc":"<p>The parent Element in which this Component's\nencapsulating element is contained.</p>\n\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"containerIdx","doc":"<p>The index within the parent Container's child collection\nof this Component.</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["applyRenderSelectors","flushRenderConfigs","getFrameInfo","getOverflowEl"],"readonly":null,"required":null,"template":true,"id":"method-onRender","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Template method called when this Component's DOM structure is created. ...","html_type":null},{"tagname":"method","name":"onResize","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1866}],"doc":"<p>Called when the component is resized.</p>\n\n<p>This method is not called on components that use <a href=\"#!/api/Ext.container.Container-cfg-liquidLayout\" rel=\"Ext.container.Container-cfg-liquidLayout\" class=\"docClass\">liquidLayout</a>, such as\n<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Buttons</a> and <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Form Fields</a>.</p>\n","params":[{"tagname":"params","type":"Number","name":"width","doc":"<p>The new width that was set</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"height","doc":"<p>The new height that was set</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"oldWidth","doc":"<p>The previous width</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"oldHeight","doc":"<p>The previous height</p>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","repositionFloatingItems"],"readonly":null,"required":null,"template":null,"id":"method-onResize","owner":"Ext.container.Container","overrides":[{"name":"onResize","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-onResize\" rel=\"Ext.Component-method-onResize\" class=\"docClass\">Ext.Component.onResize</a>"}],"short_doc":"Called when the component is resized. ...","html_type":null},{"tagname":"method","name":"onScrollEnd","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4920}],"doc":"<p>Invoked when a scroll operation is completed via this component's\n<a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scroller</a>.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The current x position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The current y position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onScrollEnd","owner":"Ext.Component","overrides":null,"short_doc":"Invoked when a scroll operation is completed via this component's\nscroller. ...","html_type":null},{"tagname":"method","name":"onScrollMove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4911}],"doc":"<p>Invoked when this component is scrolled via its <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scroller</a>.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The current x position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The current y position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onScrollMove","owner":"Ext.Component","overrides":null,"short_doc":"Invoked when this component is scrolled via its scroller. ...","html_type":null},{"tagname":"method","name":"onScrollStart","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4902}],"doc":"<p>Invoked when a scroll is initiated on this component via its <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scroller</a>.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The current x position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The current y position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onScrollStart","owner":"Ext.Component","overrides":null,"short_doc":"Invoked when a scroll is initiated on this component via its scroller. ...","html_type":null},{"tagname":"method","name":"onShow","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4930}],"doc":"<p>Allows addition of behavior to the show operation. After\ncalling the superclass's onShow, the Component will be visible.</p>\n\n<p>Override in subclasses where more complex behaviour is needed.</p>\n\n<p>Gets passed the same parameters as <a href=\"#!/api/Ext.Component-event-show\" rel=\"Ext.Component-event-show\" class=\"docClass\">show</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.dom.Element","name":"animateTarget","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>"],"method_calls":["doConstrain","fitContainer","updateLayout"],"readonly":null,"required":null,"template":true,"id":"method-onShow","owner":"Ext.Component","overrides":null,"short_doc":"Allows addition of behavior to the show operation. ...","html_type":null},{"tagname":"method","name":"onShowComplete","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2128}],"doc":"<p>Invoked after the <a href=\"#!/api/Ext.container.Container-method-afterShow\" rel=\"Ext.container.Container-method-afterShow\" class=\"docClass\">afterShow</a> method is complete.</p>\n\n<p>Gets passed the same <code>callback</code> and <code>scope</code> parameters that <a href=\"#!/api/Ext.container.Container-method-afterShow\" rel=\"Ext.container.Container-method-afterShow\" class=\"docClass\">afterShow</a> received.</p>\n","params":[{"tagname":null,"type":"Object","name":"cb","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2128,"fires":["<a href=\"#!/api/Ext.container.Container-event-show\" rel=\"Ext.container.Container-event-show\" class=\"docClass\">show</a>"],"method_calls":["activateFocusableContainer","callParent"],"readonly":null,"required":null,"template":true,"id":"method-onShowComplete","owner":"Ext.container.Container","overrides":[{"name":"onShowComplete","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-onShowComplete\" rel=\"Ext.Component-method-onShowComplete\" class=\"docClass\">Ext.Component.onShowComplete</a>"}],"short_doc":"Invoked after the afterShow method is complete. ...","html_type":null},{"tagname":"method","name":"onShowVeto","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5003}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":5003,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onShowVeto","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"onStateChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":201}],"doc":"<p>This method is called when any of the <a href=\"#!/api/Ext.state.Stateful-cfg-stateEvents\" rel=\"Ext.state.Stateful-cfg-stateEvents\" class=\"docClass\">stateEvents</a> are fired.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a>","<a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a>"],"method_calls":["saveState"],"readonly":null,"required":null,"template":null,"id":"method-onStateChange","owner":"Ext.state.Stateful","overrides":null,"short_doc":"This method is called when any of the stateEvents are fired. ...","html_type":null},{"tagname":"method","name":"onZIndexChange","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":553}],"doc":"<p>This method is called internally by <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">Ext.ZIndexManager</a> to signal that a floating\nComponent has either been moved to the top of its zIndex stack, or pushed from the top\nof its zIndex stack.</p>\n\n<p>If a <em>Window</em> is superceded by another Window, deactivating it hides its shadow.</p>\n\n<p>This method also fires the <a href=\"#!/api/Ext.Component-event-activate\" rel=\"Ext.Component-event-activate\" class=\"docClass\">activate</a> or\n<a href=\"#!/api/Ext.Component-event-deactivate\" rel=\"Ext.Component-event-deactivate\" class=\"docClass\">deactivate</a> event depending on which action occurred.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isTopMost","doc":"<p>True to activate the Component, false to deactivate it.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["activate","deactivate"],"method_calls":["fireEvent"],"readonly":null,"required":null,"template":null,"id":"method-onZIndexChange","owner":"Ext.util.Floating","overrides":null,"short_doc":"This method is called internally by Ext.ZIndexManager to signal that a floating\nComponent has either been moved to th...","html_type":null},{"tagname":"method","name":"owns","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6946}],"doc":"<p>Returns <code>true</code> if the passed element is within the container tree of this component.</p>\n\n<p>For example if a menu's submenu contains an <a href=\"#!/api/Ext.form.field.Date\" rel=\"Ext.form.field.Date\" class=\"docClass\">Ext.form.field.Date</a>, that top level\nmenu owns the elements of the date picker. Using this method, you can tell if an event\ntook place within a certain component tree.</p>\n","params":[{"tagname":null,"type":"Object","name":"element","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-owns","owner":"Ext.Component","overrides":null,"short_doc":"Returns true if the passed element is within the container tree of this component. ...","html_type":null},{"tagname":"method","name":"postBlur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1226}],"doc":"<p>Template method to do any post-blur processing.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-postBlur","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any post-blur processing. ...","html_type":null},{"tagname":"method","name":"postFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1242}],"doc":"<p>Template method to do any post-focus processing.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The event object</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-postFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Template method to do any post-focus processing. ...","html_type":null},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Prepares a given class for observable instances. ...","html_type":null},{"tagname":"method","name":"prepareItems","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2326}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"items","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"applyDefaults","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["applyDefaults","lookupComponent"],"readonly":null,"required":null,"template":null,"id":"method-prepareItems","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"prevChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1875}],"doc":"<p>A method to find a child component before the passed child parameter. If a selector is also\nprovided, the first child component matching the selector will be returned.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"child","doc":"<p>The child to use as a starting point to find the previous child.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector to find the previous child.\nThis will return the first child matching this selector. This parameter is optional.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The previous child found, <code>null</code> if no child found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-prevChild","owner":"Ext.container.Container","overrides":null,"short_doc":"A method to find a child component before the passed child parameter. ...","html_type":null},{"tagname":"method","name":"previousNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5005}],"doc":"<p>Returns the previous node in the Component tree in tree traversal order.</p>\n\n<p>Note that this is not limited to siblings, and if invoked upon a node with no matching\nsiblings, will walk the tree in reverse order to attempt to find a match. Contrast with\n<a href=\"#!/api/Ext.Component-method-previousSibling\" rel=\"Ext.Component-method-previousSibling\" class=\"docClass\">previousSibling</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector to filter\nthe preceding nodes.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"includeSelf","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The previous node (or the previous node which matches the selector).\nReturns <code>null</code> if there is no matching node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["is"],"readonly":null,"required":null,"template":null,"id":"method-previousNode","owner":"Ext.Component","overrides":null,"short_doc":"Returns the previous node in the Component tree in tree traversal order. ...","html_type":null},{"tagname":"method","name":"previousSibling","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5051}],"doc":"<p>Returns the previous sibling of this Component.</p>\n\n<p>Optionally selects the previous sibling which matches the passed\n<a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector.</p>\n\n<p>May also be referred to as <strong><code>prev()</code></strong></p>\n\n<p>Note that this is limited to siblings, and if no siblings of the item match,\n<code>null</code> is returned. Contrast with <a href=\"#!/api/Ext.Component-method-previousNode\" rel=\"Ext.Component-method-previousNode\" class=\"docClass\">previousNode</a></p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>A <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">ComponentQuery</a> selector to filter\nthe preceding items.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The previous sibling (or the previous sibling which matches\nthe selector).\nReturns <code>null</code> if there is no matching sibling.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-previousSibling","owner":"Ext.Component","overrides":null,"short_doc":"Returns the previous sibling of this Component. ...","html_type":null},{"tagname":"method","name":"processFocusableContainerKeyEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/FocusableContainer.js","linenr":270}],"doc":"<p>An overrideable function which preprocesses all key events from within this\nFocusableContainer. The base implementation vetoes processing of key events from input\nfields by returning <code>undefined</code>. This may be overridden in subclasses with special\nrequirements.</p>\n","params":[{"tagname":"params","type":"Ext.util.Event","name":"e","doc":"<p>A keyboard event that is significant to the operation\nof a FocusableContainer.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Event\" rel=\"Ext.util.Event\" class=\"docClass\">Ext.util.Event</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Event","name":"return","doc":"<p>The event if it is to be processed as a FocusableContainer\nnavigation keystroke, or <code>undefined</code> if it is to be ignore by the FocusableContainer\nnavigation machinery.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Event\" rel=\"Ext.util.Event\" class=\"docClass\">Ext.util.Event</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-processFocusableContainerKeyEvent","owner":"Ext.mixin.FocusableContainer","overrides":null,"short_doc":"An overrideable function which preprocesses all key events from within this\nFocusableContainer. ...","html_type":null},{"tagname":"method","name":"publishState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":457}],"doc":"<p>Publish this components state to the <code>ViewModel</code>. If no arguments are given (or if\nthis is the first call), the entire state is published. This state is determined by\nthe <code>publishes</code> property.</p>\n\n<p>This method is called only by component authors.</p>\n","params":[{"tagname":"params","type":"String","name":"property","doc":"<p>The name of the property to update.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value of <code>property</code>. Only needed if <code>property</code> is given.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBind","getConfig","getInitialConfig","getPublishes","lookupViewModel"],"readonly":null,"required":null,"template":null,"id":"method-publishState","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Publish this components state to the ViewModel. ...","html_type":null},{"tagname":"method","name":"publishValue","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":414}],"doc":"<p>Publish the value of this field.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getErrors","getValue","publishState"],"readonly":null,"required":null,"template":null,"id":"method-publishValue","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Publish the value of this field. ...","html_type":null},{"tagname":"method","name":"query","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":11}],"doc":"<p>Retrieves all descendant components which match the passed selector.\nExecutes an <a href=\"#!/api/Ext.ComponentQuery-method-query\" rel=\"Ext.ComponentQuery-method-query\" class=\"docClass\">Ext.ComponentQuery.query</a> using this container as its root.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Selector complying to an <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> selector.\nIf no selector is specified all items will be returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component[]","name":"return","doc":"<p>Components which matched the selector</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getQueryRoot"],"readonly":null,"required":null,"template":null,"id":"method-query","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Retrieves all descendant components which match the passed selector. ...","html_type":null},{"tagname":"method","name":"queryBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":24}],"doc":"<p>Retrieves all descendant components which match the passed function.\nThe function should return false for components that are to be\nexcluded from the selection.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The matcher function. It will be called with a single argument,\nthe component being tested.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope in which to run the function. If not specified,\nit will default to the active component.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component[]","name":"return","doc":"<p>Components matched by the passed function</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getQueryRoot"],"readonly":null,"required":null,"template":null,"id":"method-queryBy","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Retrieves all descendant components which match the passed function. ...","html_type":null},{"tagname":"method","name":"queryById","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":52}],"doc":"<p>Finds a component at any level under this container matching the id/itemId.\nThis is a shorthand for calling ct.down('#' + id);</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id to find</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>The matching id, null if not found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["down"],"readonly":null,"required":null,"template":null,"id":"method-queryById","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Finds a component at any level under this container matching the id/itemId. ...","html_type":null},{"tagname":"method","name":"registerFloatingItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5094}],"doc":"<p>Called by Component#doAutoRender</p>\n\n<p>Register a Container configured <code>floating: true</code> with this Component's\n<a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a>.</p>\n\n<p>Components added in this way will not participate in any layout, but will be rendered\nupon first show in the way that <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s are.</p>\n","params":[{"tagname":null,"type":"Object","name":"cmp","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-registerFloatingItem","owner":"Ext.Component","overrides":null,"short_doc":"Called by Component#doAutoRender\n\nRegister a Container configured floating: true with this Component's\nZIndexManager. ...","html_type":null},{"tagname":"method","name":"registerWithOwnerCt","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":311}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":311,"fires":[],"method_calls":["initFloatConstrain","up"],"readonly":null,"required":null,"template":null,"id":"method-registerWithOwnerCt","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createRelayer","mon"],"readonly":null,"required":null,"template":null,"id":"method-relayEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ...","html_type":null},{"tagname":"method","name":"remove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1910}],"doc":"<p>Removes a component from this container.  Fires the <a href=\"#!/api/Ext.container.Container-event-beforeremove\" rel=\"Ext.container.Container-event-beforeremove\" class=\"docClass\">beforeremove</a> event\nbefore removing, then fires the <a href=\"#!/api/Ext.container.Container-event-remove\" rel=\"Ext.container.Container-event-remove\" class=\"docClass\">remove</a> event after the component has\nbeen removed.</p>\n","params":[{"tagname":"params","type":"Ext.Component/String","name":"component","doc":"<p>The component instance or id to remove.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"autoDestroy","doc":"<p>Flags to determine what to do with the removed component.\n(May also be specified as a boolean <code>autoDestroy</code> flag for backward compatibility).</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Boolean","name":"destroy","doc":"<p>Defaults to this Container's <a href=\"#!/api/Ext.container.Container-cfg-autoDestroy\" rel=\"Ext.container.Container-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>\nconfig. Specifies whether to destroy the component being removed.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":null,"name":"detach","doc":"<p>Defaults to the <a href=\"#!/api/Ext.container.Container-cfg-detachOnRemove\" rel=\"Ext.container.Container-cfg-detachOnRemove\" class=\"docClass\">detachOnRemove</a> configuration\nSpecifies whether to remove the component's DOM from the container and into\nthe <a href=\"#!/api/Ext-method-getDetachedBody\" rel=\"Ext-method-getDetachedBody\" class=\"docClass\">detached body element</a></p>\n","default":null,"required":null,"deprecated":null,"html_type":null,"properties":null}]}],"return":{"type":"Ext.Component","name":"return","doc":"<p>component The Component that was removed.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-beforeremove\" rel=\"Ext.container.Container-event-beforeremove\" class=\"docClass\">beforeremove</a>","<a href=\"#!/api/Ext.container.Container-event-remove\" rel=\"Ext.container.Container-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["destroy","doRemove","fireEvent","getComponent","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-remove","owner":"Ext.container.Container","overrides":null,"short_doc":"Removes a component from this container. ...","html_type":null},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unAfter. ...","html_type":null},{"tagname":"method","name":"removeAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1965}],"doc":"<p>Removes all components from this container.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"autoDestroy","doc":"<p>True to automatically invoke the removed\nComponent's <a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a> function.\nDefaults to the value of this Container's <a href=\"#!/api/Ext.container.Container-cfg-autoDestroy\" rel=\"Ext.container.Container-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a> config.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component[]","name":"return","doc":"<p>Array of the removed components</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.container.Container-event-beforeremove\" rel=\"Ext.container.Container-event-beforeremove\" class=\"docClass\">beforeremove</a>","<a href=\"#!/api/Ext.container.Container-event-remove\" rel=\"Ext.container.Container-event-remove\" class=\"docClass\">remove</a>"],"method_calls":["remove"],"readonly":null,"required":null,"template":null,"id":"method-removeAll","owner":"Ext.container.Container","overrides":null,"short_doc":"Removes all components from this container. ...","html_type":null},{"tagname":"method","name":"removeAnchor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":120}],"doc":"<p>Remove any anchor to this element. See <a href=\"#!/api/Ext.util.Positionable-method-anchorTo\" rel=\"Ext.util.Positionable-method-anchorTo\" class=\"docClass\">anchorTo</a>.</p>\n","params":[],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAnchor"],"readonly":null,"required":null,"template":null,"id":"method-removeAnchor","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Remove any anchor to this element. ...","html_type":null},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unBefore. ...","html_type":null},{"tagname":"method","name":"removeClass","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7126}],"doc":"<p>Removes a CSS class from the top level element representing this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The CSS class name to remove.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>Returns the Component to allow method chaining.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-addCls\" rel=\"Ext.Component-method-addCls\" class=\"docClass\">addCls</a> instead.</p>\n","version":"4.1"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeClass","owner":"Ext.Component","overrides":null,"short_doc":"Removes a CSS class from the top level element representing this component. ...","html_type":null},{"tagname":"method","name":"removeCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5113}],"doc":"<p>Removes a CSS class from the top level element representing this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"cls","doc":"<p>The CSS class name to remove.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>Returns the Component to allow method chaining.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeCls","owner":"Ext.Component","overrides":null,"short_doc":"Removes a CSS class from the top level element representing this component. ...","html_type":null},{"tagname":"method","name":"removeClsWithUI","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5127}],"doc":"<p>Removes a <code>cls</code> to the <code>uiCls</code> array, which will also call <a href=\"#!/api/Ext.Component-method-removeUIClsFromElement\" rel=\"Ext.Component-method-removeUIClsFromElement\" class=\"docClass\">removeUIClsFromElement</a>\nand removes it from all elements of this component.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"classes","doc":"<p>A string or an array of strings to remove to the <code>uiCls</code>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"skip","doc":"<p>True to remove the class</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasUICls","removeCls","removeUIClsFromElement"],"readonly":null,"required":null,"template":null,"id":"method-removeClsWithUI","owner":"Ext.Component","overrides":null,"short_doc":"Removes a cls to the uiCls array, which will also call removeUIClsFromElement\nand removes it from all elements of thi...","html_type":null},{"tagname":"method","name":"removeDelegatedListener","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/ComponentDelegation.js","linenr":127}],"doc":"<p>Removes delegated listeners for a given eventName, function, and scope.\nUsers should not invoke this method directly.  It is called automatically by\nthe framework as part of removeListener processing.</p>\n","params":[{"tagname":null,"type":"Object","name":"eventName","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeDelegatedListener","owner":"Ext.mixin.ComponentDelegation","overrides":null,"short_doc":"Removes delegated listeners for a given eventName, function, and scope. ...","html_type":null},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doRemoveListener"],"readonly":null,"required":null,"template":null,"id":"method-removeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes an event handler. ...","html_type":null},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes listeners that were added by the mon method. ...","html_type":null},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Remove a single managed listener item ...","html_type":null},{"tagname":"method","name":"removeUIClsFromElement","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2528}],"doc":"<p>Method which removes a specified UI + <code>uiCls</code> from the components element. The <code>cls</code>\nwhich is added to the element will be: <code>this.baseCls + '-' + ui + uiCls</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"uiCls","doc":"<p>The UI class to remove from the element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls"],"readonly":null,"required":null,"template":null,"id":"method-removeUIClsFromElement","owner":"Ext.Component","overrides":null,"short_doc":"Method which removes a specified UI + uiCls from the components element. ...","html_type":null},{"tagname":"method","name":"removeUIFromElement","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7017}],"doc":"<p>Method which removes a specified UI from the components element.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-removeUIFromElement","owner":"Ext.Component","overrides":null,"short_doc":"Method which removes a specified UI from the components element. ...","html_type":null},{"tagname":"method","name":"render","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":764}],"doc":"<p>Renders the Component into the passed HTML element.</p>\n\n<p><strong>If you are using a <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Container</a> object to house this\nComponent, then do not use the render method.</strong></p>\n\n<p>A Container's child Components are rendered by that Container's\n<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a> manager when the Container is first rendered.</p>\n\n<p>When creating complex UIs, it is important to remember that sizing and positioning\nof child items is the responsibility of the Container's\n<a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a> manager. If you expect child items to be sized\nin response to user interactions, you must configure the Container with a layout manager\nwhich creates and manages the type of layout you have in mind.</p>\n\n<p><strong>Omitting the Container's <a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">layout</a> config means that a basic\nlayout manager is used which does nothing but render child components sequentially into the\nContainer. No sizing or positioning will be performed in this situation.</strong></p>\n","params":[{"tagname":"params","type":"Ext.dom.Element/HTMLElement/String","name":"container","doc":"<p>The element this Component should be\nrendered into. If it is being created from existing markup, this should be omitted.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String/Number","name":"position","doc":"<p>The element ID or DOM node index within the container\n<strong>before</strong> which this component will be inserted (defaults to appending to the end\nof the container)</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["afterrender","beforerender","move","render"],"method_calls":["beforeRender","cacheRefEls","finishRender","fireEvent","getInsertPosition","getRenderTree","initContainer","initStyles","wrapPrimaryEl"],"readonly":null,"required":null,"template":null,"id":"method-render","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Renders the Component into the passed HTML element. ...","html_type":null},{"tagname":"method","name":"renderActiveError","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":1087}],"doc":"<p>Updates the rendered DOM to match the current activeError. This only updates the content and\nattributes, you'll have to call doComponentLayout to actually update the display.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["fireEvent","getActiveError","toggleInvalidCls"],"readonly":null,"required":null,"template":null,"id":"method-renderActiveError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Updates the rendered DOM to match the current activeError. ...","html_type":null},{"tagname":"method","name":"reset","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":332}],"doc":"<p>Resets the checked state of all <a href=\"#!/api/Ext.form.field.Checkbox\" rel=\"Ext.form.field.Checkbox\" class=\"docClass\">checkboxes</a> in the group\nto their originally loaded values and clears any validation messages.\nSee <a href=\"#!/api/Ext.form.Basic\" rel=\"Ext.form.Basic\" class=\"docClass\">Ext.form.Basic</a>.<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a></p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-change\" rel=\"Ext.form.CheckboxGroup-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-dirtychange\" rel=\"Ext.form.CheckboxGroup-event-dirtychange\" class=\"docClass\">dirtychange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-errorchange\" rel=\"Ext.form.CheckboxGroup-event-errorchange\" class=\"docClass\">errorchange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["batchChanges","getBoxes","hasActiveError","unsetActiveError","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-reset","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"reset","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-reset\" rel=\"Ext.form.field.Field-method-reset\" class=\"docClass\">Ext.form.field.Field.reset</a>"}],"short_doc":"Resets the checked state of all checkboxes in the group\nto their originally loaded values and clears any validation m...","html_type":null},{"tagname":"method","name":"resetOriginalValue","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":360}],"doc":"<p>Resets the field's <a href=\"#!/api/Ext.form.CheckboxGroup-property-originalValue\" rel=\"Ext.form.CheckboxGroup-property-originalValue\" class=\"docClass\">originalValue</a> property so it matches the current\n<a href=\"#!/api/Ext.form.CheckboxGroup-method-getValue\" rel=\"Ext.form.CheckboxGroup-method-getValue\" class=\"docClass\">value</a>. This is called by\n<a href=\"#!/api/Ext.form.Basic\" rel=\"Ext.form.Basic\" class=\"docClass\">Ext.form.Basic</a>.<a href=\"#!/api/Ext.form.Basic-method-setValues\" rel=\"Ext.form.Basic-method-setValues\" class=\"docClass\">setValues</a> if the form's\n<a href=\"#!/api/Ext.form.Basic-cfg-trackResetOnLoad\" rel=\"Ext.form.Basic-cfg-trackResetOnLoad\" class=\"docClass\">trackResetOnLoad</a> property is set to true.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":360,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-dirtychange\" rel=\"Ext.form.CheckboxGroup-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["checkDirty","getBoxes","getValue"],"readonly":null,"required":null,"template":null,"id":"method-resetOriginalValue","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"resetOriginalValue","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-resetOriginalValue\" rel=\"Ext.form.field.Field-method-resetOriginalValue\" class=\"docClass\">Ext.form.field.Field.resetOriginalValue</a>"}],"short_doc":"Resets the field's originalValue property so it matches the current\nvalue. ...","html_type":null},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":667}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","doc":"<p>The default scope to return if none is found.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"this","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ...","html_type":null},{"tagname":"method","name":"resolveSatelliteListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Inheritable.js","linenr":229}],"doc":"<p>Returns the default listener scope for a \"satellite\" of this component.\nUsed for resolving scope for observable objects that are not part of the normal\nContainer/Component hierarchy (for example, plugins)</p>\n","params":[{"tagname":"params","type":"Ext.mixin.Observable","name":"satellite","doc":"\n","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"defaultScope","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The listener scope</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"5.1.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInheritedConfig"],"readonly":null,"required":null,"template":null,"id":"method-resolveSatelliteListenerScope","owner":"Ext.mixin.Inheritable","overrides":null,"short_doc":"Returns the default listener scope for a \"satellite\" of this component. ...","html_type":null},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing events (see suspendEvents). ...","html_type":null},{"tagname":"method","name":"resumeLayouts","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5169}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"flushOptions","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":5169,"fires":[],"method_calls":["isLayoutSuspended","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-resumeLayouts","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"reverseTranslateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":936}],"doc":"<p>Converts local coordinates into page-level coordinates</p>\n","params":[{"tagname":"params","type":"Number[]","name":"xy","doc":"<p>The local x and y coordinates</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>The translated coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-reverseTranslateXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Converts local coordinates into page-level coordinates ...","html_type":null},{"tagname":"method","name":"revertFocus","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":587}],"doc":"<p>Returns focus to the Component or element found in the cached\nfocusEnterEvent.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findFocusTarget"],"readonly":null,"required":null,"template":null,"id":"method-revertFocus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Returns focus to the Component or element found in the cached\nfocusEnterEvent. ...","html_type":null},{"tagname":"method","name":"revertFocusTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":668}],"doc":"<p>This field is on the recieving end of a call from method!revertFocus.</p>\n\n<p>It is called when focus is being pushed back into this Component from a Component\nthat is focused and is being hidden or disabled.</p>\n\n<p>We must focus the passed element.</p>\n\n<p>Subclasses may perform some extra processing to prepare for refocusing.</p>\n","params":[{"tagname":"params","type":"Object","name":"target","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-revertFocusTo","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"This field is on the recieving end of a call from method!revertFocus. ...","html_type":null},{"tagname":"method","name":"savePropToState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":373}],"doc":"<p>Conditionally saves a single property from this object to the given state object.\nThe idea is to only save state which has changed from the initial state so that\ncurrent software settings do not override future software settings. Only those\nvalues that are user-changed state should be saved.</p>\n","params":[{"tagname":"params","type":"String","name":"propName","doc":"<p>The name of the property to save.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The state object in to which to save the property.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"stateName","doc":"<p>The name to use for the property in state.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the property was saved, false if not.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-savePropToState","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Conditionally saves a single property from this object to the given state object. ...","html_type":null},{"tagname":"method","name":"savePropsToState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":402}],"doc":"<p>Gathers additional named properties of the instance and adds their current values\nto the passed state object.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"propNames","doc":"<p>The name (or array of names) of the property to save.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The state object in to which to save the property values.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>state</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["savePropToState"],"readonly":null,"required":null,"template":null,"id":"method-savePropsToState","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Gathers additional named properties of the instance and adds their current values\nto the passed state object. ...","html_type":null},{"tagname":"method","name":"saveState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":235}],"doc":"<p>Saves the state of the object to the persistence store.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.state.Stateful-event-beforestatesave\" rel=\"Ext.state.Stateful-event-beforestatesave\" class=\"docClass\">beforestatesave</a>","<a href=\"#!/api/Ext.state.Stateful-event-statesave\" rel=\"Ext.state.Stateful-event-statesave\" class=\"docClass\">statesave</a>"],"method_calls":["fireEvent","getPlugins","getState","getStateId","getStateful"],"readonly":null,"required":null,"template":null,"id":"method-saveState","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Saves the state of the object to the persistence store. ...","html_type":null},{"tagname":"method","name":"scrollBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5191}],"doc":"<p>Scrolls this Component by the passed delta values, optionally animating.</p>\n\n<p>All of the following are equivalent:</p>\n\n<pre><code> comp.scrollBy(10, 10, true);\n comp.scrollBy([10, 10], true);\n comp.scrollBy({ x: 10, y: 10 }, true);\n</code></pre>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"deltaX","doc":"<p>Either the x delta, an Array specifying x and y deltas\nor an object with \"x\" and \"y\" properties.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/Boolean/Object","name":"deltaY","doc":"<p>Either the y delta, or an animate flag\nor config object.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>Animate flag/config object if the delta values were passed\nseparately.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-scrollBy","owner":"Ext.Component","overrides":null,"short_doc":"Scrolls this Component by the passed delta values, optionally animating. ...","html_type":null},{"tagname":"method","name":"scrollTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5215}],"doc":"<p>Scrolls this component to the specified <code>x</code> and <code>y</code> coordinates.  Only applicable\nfor <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> components.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-scrollTo","owner":"Ext.Component","overrides":null,"short_doc":"Scrolls this component to the specified x and y coordinates. ...","html_type":null},{"tagname":"method","name":"sequenceFx","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":365}],"doc":"<p>Ensures that all effects queued after sequenceFx is called on this object are run\nin sequence. This is the opposite of <a href=\"#!/api/Ext.util.Animate-method-syncFx\" rel=\"Ext.util.Animate-method-syncFx\" class=\"docClass\">syncFx</a>.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-sequenceFx","owner":"Ext.util.Animate","overrides":null,"short_doc":"Ensures that all effects queued after sequenceFx is called on this object are run\nin sequence. ...","html_type":null},{"tagname":"method","name":"setActions","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":460}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.container.Container-cfg-actions\" rel=\"Ext.container.Container-cfg-actions\" class=\"docClass\">actions</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"actions","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setActions","owner":"Ext.container.Container","overrides":null,"short_doc":"Sets the value of actions. ...","html_type":null},{"tagname":"method","name":"setActiveCounter","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":130}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Floating-cfg-activeCounter\" rel=\"Ext.util.Floating-cfg-activeCounter\" class=\"docClass\">activeCounter</a>.</p>\n","params":[{"tagname":null,"type":"Number","name":"activeCounter","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setActiveCounter","owner":"Ext.util.Floating","overrides":null,"short_doc":"Sets the value of activeCounter. ...","html_type":null},{"tagname":"method","name":"setActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":901}],"doc":"<p>Sets the active error message to the given string. This replaces the entire error message\ncontents with the given string. Also see <a href=\"#!/api/Ext.form.Labelable-method-setActiveErrors\" rel=\"Ext.form.Labelable-method-setActiveErrors\" class=\"docClass\">setActiveErrors</a> which accepts an Array\nof messages and formats them according to the <a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>. Note that this only\nupdates the error message element's text and attributes, you'll have to call\ndoComponentLayout to actually update the field's layout to match. If the field extends\n<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call\n<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a> instead.</p>\n","params":[{"tagname":"params","type":"String","name":"msg","doc":"<p>The error message</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["setActiveErrors"],"readonly":null,"required":null,"template":null,"id":"method-setActiveError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Sets the active error message to the given string. ...","html_type":null},{"tagname":"method","name":"setActiveErrors","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":926}],"doc":"<p>Set the active error message to an Array of error messages. The messages are formatted\ninto a single message string using the <a href=\"#!/api/Ext.form.Labelable-cfg-activeErrorsTpl\" rel=\"Ext.form.Labelable-cfg-activeErrorsTpl\" class=\"docClass\">activeErrorsTpl</a>. Also see\n<a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a> which allows setting the entire error contents with a single string.\nNote that this only updates the error message element's text and attributes, you'll have to\ncall doComponentLayout to actually update the field's layout to match. If the field extends\n<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call\n<a href=\"#!/api/Ext.form.field.Base-method-markInvalid\" rel=\"Ext.form.field.Base-method-markInvalid\" class=\"docClass\">markInvalid</a> instead.</p>\n","params":[{"tagname":"params","type":"String[]","name":"errors","doc":"<p>The error messages</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["getActionEl","lookupTpl","renderActiveError","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setActiveErrors","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Set the active error message to an Array of error messages. ...","html_type":null},{"tagname":"method","name":"setActiveItem","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2079}],"doc":"<p>Sets a component as the active layout item. This only applies when using\na <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> layout.</p>\n\n<pre><code>var card1 = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {itemId: 'card-1'});\nvar card2 = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {itemId: 'card-2'});\nvar panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    layout: 'card',\n    items: [card1, card2]\n});\n// These are all equivalent\npanel.getLayout().setActiveItem(card2);\npanel.getLayout().setActiveItem('card-2');\npanel.getLayout().setActiveItem(1);\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Component/Number/String","name":"item","doc":"<p>The component, component\n<a href=\"#!/api/Ext.Component-cfg-id\" rel=\"Ext.Component-cfg-id\" class=\"docClass\">id</a>, <a href=\"#!/api/Ext.Component-cfg-itemId\" rel=\"Ext.Component-cfg-itemId\" class=\"docClass\">itemId</a>, or index of component.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>the activated component or false when nothing activated.\nFalse is returned also when trying to activate an already active item.</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLayout"],"readonly":null,"required":null,"template":null,"id":"method-setActiveItem","owner":"Ext.container.Container","overrides":null,"short_doc":"Sets a component as the active layout item. ...","html_type":null},{"tagname":"method","name":"setAlwaysOnTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":137}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.util.Floating-cfg-alwaysOnTop\" rel=\"Ext.util.Floating-cfg-alwaysOnTop\" class=\"docClass\">alwaysOnTop</a>.</p>\n","params":[{"tagname":null,"type":"Boolean/Number","name":"alwaysOnTop","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setAlwaysOnTop","owner":"Ext.util.Floating","overrides":null,"short_doc":"Sets the value of alwaysOnTop. ...","html_type":null},{"tagname":"method","name":"setAriaAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Accessible.js","linenr":38}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Accessible-cfg-ariaAttributes\" rel=\"Ext.mixin.Accessible-cfg-ariaAttributes\" class=\"docClass\">ariaAttributes</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"ariaAttributes","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setAriaAttributes","owner":"Ext.mixin.Accessible","overrides":null,"short_doc":"Sets the value of ariaAttributes. ...","html_type":null},{"tagname":"method","name":"setAutoScroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5231}],"doc":"<p>Sets the overflow on the content element of the component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"scroll","doc":"<p>True to allow the Component to auto scroll.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-setScrollable\" rel=\"Ext.Component-method-setScrollable\" class=\"docClass\">setScrollable</a> instead</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["setScrollable"],"readonly":null,"required":null,"template":null,"id":"method-setAutoScroll","owner":"Ext.Component","overrides":null,"short_doc":"Sets the overflow on the content element of the component. ...","html_type":null},{"tagname":"method","name":"setBind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":11}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-bind\" rel=\"Ext.mixin.Bindable-cfg-bind\" class=\"docClass\">bind</a>.</p>\n","params":[{"tagname":null,"type":"Object/String","name":"bind","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setBind","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of bind. ...","html_type":null},{"tagname":"method","name":"setBorder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5243}],"doc":"\n","params":[{"tagname":"params","type":"String/Number","name":"border","doc":"<p>The border, see <a href=\"#!/api/Ext.Component-cfg-border\" rel=\"Ext.Component-cfg-border\" class=\"docClass\">border</a>. If a falsey value is passed</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"targetEl","doc":"<p>(private)\nthe border will be removed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["unitizeBox","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setBorder","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":823}],"doc":"<p>Sets the element's box.</p>\n","params":[{"tagname":"params","type":"Object","name":"box","doc":"<p>The box to fill {x, y, width, height}</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["afterSetPosition","constrainBox","setSize","setXY"],"readonly":null,"required":null,"template":null,"id":"method-setBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Sets the element's box. ...","html_type":null},{"tagname":"method","name":"setChildEls","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":41}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.form.Labelable-cfg-childEls\" rel=\"Ext.form.Labelable-cfg-childEls\" class=\"docClass\">childEls</a>.</p>\n","params":[{"tagname":null,"type":"Array","name":"childEls","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":41,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setChildEls","owner":"Ext.form.Labelable","overrides":[{"name":"setChildEls","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-setChildEls\" rel=\"Ext.util.ElementContainer-method-setChildEls\" class=\"docClass\">Ext.util.ElementContainer.setChildEls</a>"}],"short_doc":"Sets the value of childEls. ...","html_type":null},{"tagname":"method","name":"setComponentLayout","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7047}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"layout","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setComponentLayout","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setController","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":47}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-controller\" rel=\"Ext.mixin.Bindable-cfg-controller\" class=\"docClass\">controller</a>.</p>\n","params":[{"tagname":null,"type":"String/Object/Ext.app.ViewController","name":"controller","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewController\" rel=\"Ext.app.ViewController\" class=\"docClass\">Ext.app.ViewController</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setController","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of controller. ...","html_type":null},{"tagname":"method","name":"setData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":319}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-data\" rel=\"Ext.Component-cfg-data\" class=\"docClass\">data</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"data","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setData","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of data. ...","html_type":null},{"tagname":"method","name":"setDefaultFocus","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":1451}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"value","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1451,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDefaultFocus","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setDefaultListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":86}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-defaultListenerScope\" rel=\"Ext.mixin.Bindable-cfg-defaultListenerScope\" class=\"docClass\">defaultListenerScope</a>.</p>\n","params":[{"tagname":null,"type":"Boolean","name":"defaultListenerScope","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDefaultListenerScope","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of defaultListenerScope. ...","html_type":null},{"tagname":"method","name":"setDisabled","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5300}],"doc":"<p>Enable or disable the component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"disabled","doc":"<p><code>true</code> to disable.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDisabled","owner":"Ext.Component","overrides":null,"short_doc":"Enable or disable the component. ...","html_type":null},{"tagname":"method","name":"setDock","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5277}],"doc":"<p>Sets the dock position of this component in its parent panel. Note that this only has effect\nif this item is part of the <code>dockedItems</code> collection of a parent that has a DockLayout\n(note that any Panel has a DockLayout by default)</p>\n","params":[{"tagname":"params","type":"Object","name":"dock","doc":"<p>The dock position.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDock","owner":"Ext.Component","overrides":null,"short_doc":"Sets the dock position of this component in its parent panel. ...","html_type":null},{"tagname":"method","name":"setDocked","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":7141}],"doc":"<p>Sets the dock position of this component in its parent panel. Note that this only has effect\nif this item is part of the <code>dockedItems</code> collection of a parent that has a DockLayout\n(note that any Panel has a DockLayout by default)</p>\n","params":[{"tagname":"params","type":"Object","name":"dock","doc":"<p>The dock position.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-setDock\" rel=\"Ext.Component-method-setDock\" class=\"docClass\">setDock</a> instead.</p>\n","version":"5.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDocked","owner":"Ext.Component","overrides":null,"short_doc":"Sets the dock position of this component in its parent panel. ...","html_type":null},{"tagname":"method","name":"setFieldDefaults","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":1122}],"doc":"<p>Applies a set of default configuration values to this Labelable instance. For each\nof the properties in the given object, check if this component hasOwnProperty that config;\nif not then it's inheriting a default value from its prototype and we should apply\nthe default value.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaults","doc":"<p>The defaults to apply to the object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-setFieldDefaults","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Applies a set of default configuration values to this Labelable instance. ...","html_type":null},{"tagname":"method","name":"setFieldLabel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":605}],"doc":"<p>Set the label of this field.</p>\n","params":[{"tagname":"params","type":"String","name":"label","doc":"<p>The new label. The <a href=\"#!/api/Ext.form.Labelable-cfg-labelSeparator\" rel=\"Ext.form.Labelable-cfg-labelSeparator\" class=\"docClass\">labelSeparator</a> will be automatically\nappended to the label string.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","removeCls","trimLabelSeparator","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setFieldLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Set the label of this field. ...","html_type":null},{"tagname":"method","name":"setFlex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5308}],"doc":"<p>Sets the flex property of this component. Only applicable when this component is\nan item of a box layout</p>\n","params":[{"tagname":"params","type":"Number","name":"flex","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setFlex","owner":"Ext.Component","overrides":null,"short_doc":"Sets the flex property of this component. ...","html_type":null},{"tagname":"method","name":"setHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5318}],"doc":"<p>Sets the height of the component. This method fires the <a href=\"#!/api/Ext.Component-event-resize\" rel=\"Ext.Component-event-resize\" class=\"docClass\">resize</a> event.</p>\n","params":[{"tagname":"params","type":"Number","name":"height","doc":"<p>The new height to set. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new height in pixels.</li>\n<li>A String used to set the CSS height style.</li>\n<li><code>undefined</code> to leave the height unchanged.</li>\n<li><code>null</code> to clear the height.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setSize"],"readonly":null,"required":null,"template":null,"id":"method-setHeight","owner":"Ext.Component","overrides":null,"short_doc":"Sets the height of the component. ...","html_type":null},{"tagname":"method","name":"setHidden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5775}],"doc":"<p>Sets the hidden state of this component. This is basically the same as\n<code><a href=\"#!/api/Ext.Component-method-setVisible\" rel=\"Ext.Component-method-setVisible\" class=\"docClass\">setVisible</a></code> but the boolean parameter has the opposite meaning.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"hidden","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setVisible"],"readonly":null,"required":null,"template":null,"id":"method-setHidden","owner":"Ext.Component","overrides":null,"short_doc":"Sets the hidden state of this component. ...","html_type":null},{"tagname":"method","name":"setHideEmptyLabel","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":659}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"hideEmptyLabel","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":659,"fires":[],"method_calls":["getFieldLabel","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setHideEmptyLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setHideLabel","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":646}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"hideLabel","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":646,"fires":[],"method_calls":["updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setHideLabel","owner":"Ext.form.Labelable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6165}],"doc":"<p>Update the content area of a component.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"html","doc":"<p>If this component has been configured with a\ntemplate via the tpl config then it will use this argument as data to populate the\ntemplate. If this component was not configured with a template, the components\ncontent area will be updated via <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> update.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"loadScripts","doc":"<p>Only legitimate when using the <code>html</code>\nconfiguration. Causes embedded script tags to be executed. Inline source will be executed\nwith this Component as the scope (<code>this</code> reference).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>Only legitimate when using the <code>html</code> configuration.\nCallback to execute when scripts have finished loading.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scriptScope","doc":"<p>The scope (<code>this</code> reference) in which to\nexecute <em>inline</em> script elements content. Scripts with a <code>src</code> attribute cannot\nbe executed with this scope.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"'this'","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["update"],"readonly":null,"required":null,"template":null,"id":"method-setHtml","owner":"Ext.Component","overrides":null,"short_doc":"Update the content area of a component. ...","html_type":null},{"tagname":"method","name":"setLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2013}],"doc":"<p>Reconfigures the initially configured cfg!layout.</p>\n\n<p>NOTE: this method cannot be used to change the \"type\" of layout after the component\nhas been rendered to the DOM. After rendering, this method can only modify the\nexisting layout's configuration properties. The reason for this restriction is that\nmany container layouts insert special wrapping elements into the dom, and the\nframework does not currently support dynamically changing these elements once\nrendered.</p>\n","params":[{"tagname":"params","type":"Object","name":"configuration","doc":"<p>object for the layout</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setLayout","owner":"Ext.container.Container","overrides":null,"short_doc":"Reconfigures the initially configured cfg!layout. ...","html_type":null},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"An alias for addListener. ...","html_type":null},{"tagname":"method","name":"setLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5334}],"doc":"<p>This method allows you to show or hide a LoadMask on top of this component.</p>\n\n<p>The mask will be rendered into the element returned by <a href=\"#!/api/Ext.Component-method-getMaskTarget\" rel=\"Ext.Component-method-getMaskTarget\" class=\"docClass\">getMaskTarget</a> which for most\nComponents is the Component's element. See <a href=\"#!/api/Ext.Component-method-getMaskTarget\" rel=\"Ext.Component-method-getMaskTarget\" class=\"docClass\">getMaskTarget</a> and <a href=\"#!/api/Ext.Component-cfg-maskElement\" rel=\"Ext.Component-cfg-maskElement\" class=\"docClass\">maskElement</a>.</p>\n\n<p>Most Components will return <code>null</code> indicating that their LoadMask cannot reside inside\ntheir element, but must be rendered into the document body.</p>\n\n<p><a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">Grid Views</a> however will direct a LoadMask to be rendered into\nthe owning <a href=\"#!/api/Ext.panel.Table\" rel=\"Ext.panel.Table\" class=\"docClass\">GridPanel</a>.</p>\n","params":[{"tagname":"params","type":"Boolean/Object/String","name":"load","doc":"<p>True to show the default LoadMask, a config object\nthat will be passed to the LoadMask constructor, or a message String to show. False to hide\nthe current LoadMask.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"targetEl","doc":"<p>(private) This param is deprecated</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.LoadMask","name":"return","doc":"<p>The LoadMask instance that has just been shown.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.LoadMask\" rel=\"Ext.LoadMask\" class=\"docClass\">Ext.LoadMask</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLoading","owner":"Ext.Component","overrides":null,"short_doc":"This method allows you to show or hide a LoadMask on top of this component. ...","html_type":null},{"tagname":"method","name":"setLocalX","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6328},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":167}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[{"tagname":null,"type":"Object","name":"x","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6328,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalX","owner":"Ext.Component","overrides":[{"name":"setLocalX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setLocalX\" rel=\"Ext.util.Positionable-method-setLocalX\" class=\"docClass\">Ext.util.Positionable.setLocalX</a>"}],"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"setLocalXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6332},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":171}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[{"tagname":null,"type":"Object","name":"x","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"y","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6332,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalXY","owner":"Ext.Component","overrides":[{"name":"setLocalXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setLocalXY\" rel=\"Ext.util.Positionable-method-setLocalXY\" class=\"docClass\">Ext.util.Positionable.setLocalXY</a>"}],"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"setLocalY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6336}],"doc":"<p>Sets the local y coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.Component-method-getLocalY\" rel=\"Ext.Component-method-getLocalY\" class=\"docClass\">getLocalY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":null,"type":"Object","name":"y","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6336,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalY","owner":"Ext.Component","overrides":[{"name":"setLocalY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setLocalY\" rel=\"Ext.util.Positionable-method-setLocalY\" class=\"docClass\">Ext.util.Positionable.setLocalY</a>"}],"short_doc":"Sets the local y coordinate of this element using CSS style. ...","html_type":null},{"tagname":"method","name":"setMargin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5403}],"doc":"<p>Sets the margin on the target element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"margin","doc":"<p>The margin to set. See the <a href=\"#!/api/Ext.Component-cfg-margin\" rel=\"Ext.Component-cfg-margin\" class=\"docClass\">margin</a> config.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"preventLayout","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getEl","unitizeBox","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setMargin","owner":"Ext.Component","overrides":null,"short_doc":"Sets the margin on the target element. ...","html_type":null},{"tagname":"method","name":"setMasked","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":4423}],"doc":"<p>Set masked state for this Component.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isMasked","doc":"<p>True if masked, false otherwise.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-setMasked","owner":"Ext.Component","overrides":null,"short_doc":"Set masked state for this Component. ...","html_type":null},{"tagname":"method","name":"setMaxHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":368}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-maxHeight\" rel=\"Ext.Component-cfg-maxHeight\" class=\"docClass\">maxHeight</a>.</p>\n","params":[{"tagname":null,"type":"Number","name":"maxHeight","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMaxHeight","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of maxHeight. ...","html_type":null},{"tagname":"method","name":"setMaxWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":376}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-maxWidth\" rel=\"Ext.Component-cfg-maxWidth\" class=\"docClass\">maxWidth</a>.</p>\n","params":[{"tagname":null,"type":"Number","name":"maxWidth","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMaxWidth","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of maxWidth. ...","html_type":null},{"tagname":"method","name":"setMinHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":384}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-minHeight\" rel=\"Ext.Component-cfg-minHeight\" class=\"docClass\">minHeight</a>.</p>\n","params":[{"tagname":null,"type":"Number","name":"minHeight","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMinHeight","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of minHeight. ...","html_type":null},{"tagname":"method","name":"setMinWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":392}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-minWidth\" rel=\"Ext.Component-cfg-minWidth\" class=\"docClass\">minWidth</a>.</p>\n","params":[{"tagname":null,"type":"Number","name":"minWidth","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMinWidth","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of minWidth. ...","html_type":null},{"tagname":"method","name":"setOverflowXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5440}],"doc":"<p>Sets the overflow x/y on the content element of the component. The x/y overflow\nvalues can be any valid CSS overflow (e.g., 'auto' or 'scroll'). By default, the\nvalue is 'hidden'.  Passing <code>undefined</code> will preserve the current value.</p>\n","params":[{"tagname":"params","type":"String","name":"overflowX","doc":"<p>The overflow-x value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"overflowY","doc":"<p>The overflow-y value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Component-method-setScrollable\" rel=\"Ext.Component-method-setScrollable\" class=\"docClass\">setScrollable</a> instead</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["setScrollable"],"readonly":null,"required":null,"template":null,"id":"method-setOverflowXY","owner":"Ext.Component","overrides":null,"short_doc":"Sets the overflow x/y on the content element of the component. ...","html_type":null},{"tagname":"method","name":"setPagePosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5459}],"doc":"<p>Sets the page XY position of the component. To set the left and top instead,\nuse <a href=\"#!/api/Ext.Component-method-setPosition\" rel=\"Ext.Component-method-setPosition\" class=\"docClass\">setPosition</a>. This method fires the <a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a> event.</p>\n","params":[{"tagname":"params","type":"Number/Number[]","name":"x","doc":"<p>The new x position or an array of <code>[x,y]</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The new y position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True to animate the Component into its new position.\nYou may also pass an animation configuration.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>"],"method_calls":["isContainedFloater","setPosition"],"readonly":null,"required":null,"template":null,"id":"method-setPagePosition","owner":"Ext.Component","overrides":null,"short_doc":"Sets the page XY position of the component. ...","html_type":null},{"tagname":"method","name":"setPosition","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5510}],"doc":"<p>Sets the left and top of the component. To set the page XY position instead,\nuse <a href=\"#!/api/Ext.Component-method-setPagePosition\" rel=\"Ext.Component-method-setPagePosition\" class=\"docClass\">setPagePosition</a>. This method fires the\n<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a> event.</p>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"x","doc":"<p>The new left, an array of <code>[x,y]</code>, or animation config\nobject containing <code>x</code> and <code>y</code> properties.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The new top.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>If <code>true</code>, the Component is <em>animated</em> into\nits new position. You may also pass an animation configuration.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>"],"method_calls":["afterSetPosition","animate","getLocalX","getLocalY","setLocalXY","stopAnimation"],"readonly":null,"required":null,"template":null,"id":"method-setPosition","owner":"Ext.Component","overrides":null,"short_doc":"Sets the left and top of the component. ...","html_type":null},{"tagname":"method","name":"setPublishes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":102}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-publishes\" rel=\"Ext.mixin.Bindable-cfg-publishes\" class=\"docClass\">publishes</a>.</p>\n","params":[{"tagname":null,"type":"String/String[]/Object","name":"publishes","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setPublishes","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of publishes. ...","html_type":null},{"tagname":"method","name":"setReadOnly","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":317}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"readOnly","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-setReadOnly","owner":"Ext.form.CheckboxGroup","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/border/Region.js","linenr":70}],"doc":"<p>This method changes the <code>region</code> config property for this border region. This is\nonly valid if this component is in a <code>border</code> layout (<code><a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a></code>).</p>\n\n<p><strong>Defined in override Ext.layout.container.border.Region.</strong></p>\n","params":[{"tagname":"params","type":"String","name":"region","doc":"<p>The new <code>region</code> value (<code>\"north\"</code>, <code>\"south\"</code>, <code>\"east\"</code> or\n<code>\"west\"</code>).</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The previous value of the <code>region</code> property.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["collapse","expand","fireEventArgs","getOwningBorderLayout","updateCollapseTool"],"readonly":null,"required":null,"template":null,"id":"method-setRegion","owner":"Ext.Component","overrides":null,"short_doc":"This method changes the region config property for this border region. ...","html_type":null},{"tagname":"method","name":"setScrollX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5562}],"doc":"<p>Sets the \"x\" scroll position for this component.  Only applicable for\n<a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> components</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-setScrollX","owner":"Ext.Component","overrides":null,"short_doc":"Sets the \"x\" scroll position for this component. ...","html_type":null},{"tagname":"method","name":"setScrollY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5577}],"doc":"<p>Sets the \"y\" scroll position for this component.  Only applicable for\n<a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a> components</p>\n","params":[{"tagname":"params","type":"Number","name":"y","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollable"],"readonly":null,"required":null,"template":null,"id":"method-setScrollY","owner":"Ext.Component","overrides":null,"short_doc":"Sets the \"y\" scroll position for this component. ...","html_type":null},{"tagname":"method","name":"setScrollable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":400}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.Component-cfg-scrollable\" rel=\"Ext.Component-cfg-scrollable\" class=\"docClass\">scrollable</a>.</p>\n","params":[{"tagname":null,"type":"Boolean/String/Object","name":"scrollable","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setScrollable","owner":"Ext.Component","overrides":null,"short_doc":"Sets the value of scrollable. ...","html_type":null},{"tagname":"method","name":"setSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":194}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-session\" rel=\"Ext.mixin.Bindable-cfg-session\" class=\"docClass\">session</a>.</p>\n","params":[{"tagname":null,"type":"Boolean/Object/Ext.data.Session","name":"session","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSession","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of session. ...","html_type":null},{"tagname":"method","name":"setSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5592}],"doc":"<p>Sets the width and height of this Component. This method fires the <a href=\"#!/api/Ext.Component-event-resize\" rel=\"Ext.Component-event-resize\" class=\"docClass\">resize</a> event.\nThis method can accept either width and height as separate arguments, or you can pass\na size object like <code>{ width:10, height:20 }</code>.</p>\n","params":[{"tagname":"params","type":"Number/String/Object","name":"width","doc":"<p>The new width to set. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new width in pixels.</li>\n<li>A String used to set the CSS width style.</li>\n<li>A size object in the format <code>{width: widthValue, height: heightValue}</code>.</li>\n<li><code>undefined</code> to leave the width unchanged.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new height to set (not required if a size object is passed\nas the first arg). This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new height in pixels.</li>\n<li>A String used to set the CSS height style. Animation may <strong>not</strong> be used.</li>\n<li><code>undefined</code> to leave the height unchanged.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isVisible","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setSize","owner":"Ext.Component","overrides":null,"short_doc":"Sets the width and height of this Component. ...","html_type":null},{"tagname":"method","name":"setStateful","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":15}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.state.Stateful-cfg-stateful\" rel=\"Ext.state.Stateful-cfg-stateful\" class=\"docClass\">stateful</a>.</p>\n","params":[{"tagname":null,"type":"Boolean/Object","name":"stateful","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setStateful","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Sets the value of stateful. ...","html_type":null},{"tagname":"method","name":"setStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5669}],"doc":"<p>Sets the style for this Component's primary element.</p>\n\n<p>Styles should be a valid DOM element style property.\n<a href=\"http://www.w3schools.com/jsref/dom_obj_style.asp\">Valid style property names</a>\n(<em>along with the supported CSS version for each</em>)</p>\n\n<pre><code>var name = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'component',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    html: 'Phineas Flynn'\n});\n\n// two-param syntax\nname.setStyle('color', 'white');\n\n// single-param syntax\nname.setStyle({\n    fontWeight: 'bold',\n    backgroundColor: 'gray',\n    padding: '10px'\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"property","doc":"<p>The style property to be set, or an object of\nmultiple styles.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"value","doc":"<p>The value to apply to the given property, or null if an\nobject was passed.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setStyle","owner":"Ext.Component","overrides":null,"short_doc":"Sets the style for this Component's primary element. ...","html_type":null},{"tagname":"method","name":"setTabIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":445}],"doc":"<p>Set the tabIndex property for this Focusable. If the focusEl\nis available, set tabIndex attribute on it, too.</p>\n","params":[{"tagname":"params","type":"Number","name":"newTabIndex","doc":"<p>new tabIndex to set</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"focusEl","doc":"<p>(private)</p>\n","html_type":"HTMLElement","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFocusEl","isDisabled"],"readonly":null,"required":null,"template":null,"id":"method-setTabIndex","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Set the tabIndex property for this Focusable. ...","html_type":null},{"tagname":"method","name":"setTwoWayBindable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":229}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-twoWayBindable\" rel=\"Ext.mixin.Bindable-cfg-twoWayBindable\" class=\"docClass\">twoWayBindable</a>.</p>\n","params":[{"tagname":null,"type":"String/String[]/Object","name":"twoWayBindable","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setTwoWayBindable","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of twoWayBindable. ...","html_type":null},{"tagname":"method","name":"setUI","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5706}],"doc":"<p>Sets the UI for the component. This will remove any existing UIs on the component.\nIt will also loop through any <code>uiCls</code> set on the component and rename them so they include\nthe new UI.</p>\n","params":[{"tagname":"params","type":"String","name":"ui","doc":"<p>The new UI for the component.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","addClsWithUI","addUIToElement","removeCls","removeClsWithUI","removeUIFromElement","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-setUI","owner":"Ext.Component","overrides":null,"short_doc":"Sets the UI for the component. ...","html_type":null},{"tagname":"method","name":"setUserCls","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":3927}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"cls","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":3927,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setUserCls","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setValidation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":32}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.form.field.Field-cfg-validation\" rel=\"Ext.form.field.Field-cfg-validation\" class=\"docClass\">validation</a>.</p>\n","params":[{"tagname":null,"type":"Boolean/String","name":"validation","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setValidation","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Sets the value of validation. ...","html_type":null},{"tagname":"method","name":"setValidationField","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":547}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"value","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"record","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-setValidationField","owner":"Ext.form.field.Field","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":374}],"doc":"<p>Sets the value(s) of all checkboxes in the group. The expected format is an Object\nof name-value pairs corresponding to the names of the checkboxes in the group. Each pair\ncan have either a single or multiple values:</p>\n\n<ul>\n<li>A single Boolean or String value will be passed to the <code>setValue</code> method of the checkbox\nwith that name. See the rules in <a href=\"#!/api/Ext.form.field.Checkbox-method-setValue\" rel=\"Ext.form.field.Checkbox-method-setValue\" class=\"docClass\">Ext.form.field.Checkbox.setValue</a>\nfor accepted values.</li>\n<li>An Array of String values will be matched against the\n<a href=\"#!/api/Ext.form.field.Checkbox-cfg-inputValue\" rel=\"Ext.form.field.Checkbox-cfg-inputValue\" class=\"docClass\">inputValue</a> of checkboxes in the group\nwith that name; those checkboxes whose inputValue exists in the array will be\nchecked and others will be unchecked.</li>\n</ul>\n\n\n<p>If a checkbox's name is not in the mapping at all, it will be unchecked.</p>\n\n<p>An example:</p>\n\n<pre><code>var myCheckboxGroup = new <a href=\"#!/api/Ext.form.CheckboxGroup\" rel=\"Ext.form.CheckboxGroup\" class=\"docClass\">Ext.form.CheckboxGroup</a>({\n    columns: 3,\n    items: [{\n        name: 'cb1',\n        boxLabel: 'Single 1'\n    }, {\n        name: 'cb2',\n        boxLabel: 'Single 2'\n    }, {\n        name: 'cb3',\n        boxLabel: 'Single 3'\n    }, {\n        name: 'cbGroup',\n        boxLabel: 'Grouped 1'\n        inputValue: 'value1'\n    }, {\n        name: 'cbGroup',\n        boxLabel: 'Grouped 2'\n        inputValue: 'value2'\n    }, {\n        name: 'cbGroup',\n        boxLabel: 'Grouped 3'\n        inputValue: 'value3'\n    }]\n});\n\nmyCheckboxGroup.setValue({\n    cb1: true,\n    cb3: false,\n    cbGroup: ['value1', 'value3']\n});\n</code></pre>\n\n<p>The above code will cause the checkbox named 'cb1' to be checked, as well as the first\nand third checkboxes named 'cbGroup'. The other three checkboxes will be unchecked.</p>\n","params":[{"tagname":"params","type":"Object","name":"value","doc":"<p>The mapping of checkbox names to values.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.form.CheckboxGroup","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.form.CheckboxGroup\" rel=\"Ext.form.CheckboxGroup\" class=\"docClass\">Ext.form.CheckboxGroup</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-change\" rel=\"Ext.form.CheckboxGroup-event-change\" class=\"docClass\">change</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-dirtychange\" rel=\"Ext.form.CheckboxGroup-event-dirtychange\" class=\"docClass\">dirtychange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-errorchange\" rel=\"Ext.form.CheckboxGroup-event-errorchange\" class=\"docClass\">errorchange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["batchChanges","getBoxes"],"readonly":null,"required":null,"template":null,"id":"method-setValue","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"setValue","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-setValue\" rel=\"Ext.form.field.Field-method-setValue\" class=\"docClass\">Ext.form.field.Field.setValue</a>"}],"short_doc":"Sets the value(s) of all checkboxes in the group. ...","html_type":null},{"tagname":"method","name":"setViewModel","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":248}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Bindable-cfg-viewModel\" rel=\"Ext.mixin.Bindable-cfg-viewModel\" class=\"docClass\">viewModel</a>.</p>\n","params":[{"tagname":null,"type":"String/Object/Ext.app.ViewModel","name":"viewModel","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setViewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Sets the value of viewModel. ...","html_type":null},{"tagname":"method","name":"setVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5765}],"doc":"<p>Convenience function to hide or show this component by Boolean.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"visible","doc":"<p><code>true</code> to show, <code>false</code> to hide.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setVisible","owner":"Ext.Component","overrides":null,"short_doc":"Convenience function to hide or show this component by Boolean. ...","html_type":null},{"tagname":"method","name":"setWeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/layout/container/border/Region.js","linenr":176}],"doc":"<p>Sets the <code>weight</code> config property for this component. This is only valid if this\ncomponent is in a <code>border</code> layout (<code><a href=\"#!/api/Ext.layout.container.Border\" rel=\"Ext.layout.container.Border\" class=\"docClass\">Ext.layout.container.Border</a></code>).</p>\n\n<p><strong>Defined in override Ext.layout.container.border.Region.</strong></p>\n","params":[{"tagname":"params","type":"Number","name":"weight","doc":"<p>The new <code>weight</code> value.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The previous value of the <code>weight</code> property.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs","getOwningBorderContainer"],"readonly":null,"required":null,"template":null,"id":"method-setWeight","owner":"Ext.Component","overrides":null,"short_doc":"Sets the weight config property for this component. ...","html_type":null},{"tagname":"method","name":"setWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5785}],"doc":"<p>Sets the width of the component. This method fires the <a href=\"#!/api/Ext.Component-event-resize\" rel=\"Ext.Component-event-resize\" class=\"docClass\">resize</a> event.</p>\n","params":[{"tagname":"params","type":"Number","name":"width","doc":"<p>The new width to set. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new width in pixels.</li>\n<li>A String used to set the CSS width style.</li>\n<li><code>undefined</code> to leave the width unchanged.</li>\n<li><code>null</code> to clear the width.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setSize"],"readonly":null,"required":null,"template":null,"id":"method-setWidth","owner":"Ext.Component","overrides":null,"short_doc":"Sets the width of the component. ...","html_type":null},{"tagname":"method","name":"setX","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6340}],"doc":"<p>Sets the X position of the DOM element based on page coordinates.</p>\n","params":[{"tagname":null,"type":"Object","name":"x","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6340,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setX","owner":"Ext.Component","overrides":[{"name":"setX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setX\" rel=\"Ext.util.Positionable-method-setX\" class=\"docClass\">Ext.util.Positionable.setX</a>"}],"short_doc":"Sets the X position of the DOM element based on page coordinates. ...","html_type":null},{"tagname":"method","name":"setXY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6344}],"doc":"<p>Sets the position of the DOM element in page coordinates.</p>\n","params":[{"tagname":null,"type":"Object","name":"xy","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6344,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setXY","owner":"Ext.Component","overrides":[{"name":"setXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">Ext.util.Positionable.setXY</a>"}],"short_doc":"Sets the position of the DOM element in page coordinates. ...","html_type":null},{"tagname":"method","name":"setY","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6348}],"doc":"<p>Sets the Y position of the DOM element based on page coordinates.</p>\n","params":[{"tagname":null,"type":"Object","name":"y","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6348,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setY","owner":"Ext.Component","overrides":[{"name":"setY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setY\" rel=\"Ext.util.Positionable-method-setY\" class=\"docClass\">Ext.util.Positionable.setY</a>"}],"short_doc":"Sets the Y position of the DOM element based on page coordinates. ...","html_type":null},{"tagname":"method","name":"setZIndex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":451}],"doc":"<p>z-index is managed by the zIndexManager and may be overwritten at any time.\nReturns the next z-index to be used.</p>\n\n<p>If this is a Container, then it will have rebased any managed floating Components,\nand so the next available z-index will be approximately 10000 above that.</p>\n","params":[{"tagname":null,"type":"Object","name":"index","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setZIndex","owner":"Ext.util.Floating","overrides":null,"short_doc":"z-index is managed by the zIndexManager and may be overwritten at any time. ...","html_type":null},{"tagname":"method","name":"setupFramingTpl","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1448}],"doc":"<p>Inject a reference to the function which applies the render template\ninto the framing template. The framing template wraps the content.</p>\n","params":[{"tagname":null,"type":"Object","name":"frameTpl","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setupFramingTpl","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Inject a reference to the function which applies the render template\ninto the framing template. ...","html_type":null},{"tagname":"method","name":"show","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5801}],"doc":"<p>Shows this Component, rendering it first if <a href=\"#!/api/Ext.Component-cfg-autoRender\" rel=\"Ext.Component-cfg-autoRender\" class=\"docClass\">autoRender</a> or <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>\nare <code>true</code>.</p>\n\n<p>After being shown, a <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a> Component (such as a <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>),\nis activated it and brought to the front of its <a href=\"#!/api/Ext.Component-property-zIndexManager\" rel=\"Ext.Component-property-zIndexManager\" class=\"docClass\">z-index stack</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.dom.Element","name":"animateTarget","doc":"<p><strong>only valid for <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>\nComponents such as <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Window</a>s or <a href=\"#!/api/Ext.tip.ToolTip\" rel=\"Ext.tip.ToolTip\" class=\"docClass\">ToolTip</a>s,\nor regular Components which have been configured with <code>floating: true</code>.</strong> The target\nfrom which the Component should animate from while opening.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":"null","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>A callback function to call after the Component is displayed.\nOnly necessary if animation was specified.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the callback is executed.\nDefaults to this Component.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-afterrender\" rel=\"Ext.Component-event-afterrender\" class=\"docClass\">afterrender</a>","<a href=\"#!/api/Ext.Component-event-beforerender\" rel=\"Ext.Component-event-beforerender\" class=\"docClass\">beforerender</a>","<a href=\"#!/api/Ext.Component-event-beforeshow\" rel=\"Ext.Component-event-beforeshow\" class=\"docClass\">beforeshow</a>","<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>","<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a>","tofront"],"method_calls":["beforeShow","doAutoRender","fireEvent","getInherited","initHierarchyEvents","isHierarchicallyHidden","isVisible","onFloatShow","onShowVeto","toFront"],"readonly":null,"required":null,"template":null,"id":"method-show","owner":"Ext.Component","overrides":null,"short_doc":"Shows this Component, rendering it first if autoRender or floating\nare true. ...","html_type":null},{"tagname":"method","name":"showAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5905}],"doc":"<p>Displays component at specific xy position.\nA floating component (like a menu) is positioned relative to its ownerCt if any.\nUseful for popping up a context menu:</p>\n\n<pre><code>listeners: {\n    itemcontextmenu: function(view, record, item, index, event, options) {\n        <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.menu.Menu\" rel=\"Ext.menu.Menu\" class=\"docClass\">Ext.menu.Menu</a>', {\n            width: 100,\n            height: 100,\n            margin: '0 0 10 0',\n            items: [{\n                text: 'regular item 1'\n            },{\n                text: 'regular item 2'\n            },{\n                text: 'regular item 3'\n            }]\n        }).showAt(event.getXY());\n    }\n}\n</code></pre>\n","params":[{"tagname":"params","type":"Number/Number[]","name":"x","doc":"<p>The new x position or array of <code>[x,y]</code>.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The new y position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True to animate the Component into its new position.\nYou may also pass an animation configuration.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-afterrender\" rel=\"Ext.Component-event-afterrender\" class=\"docClass\">afterrender</a>","<a href=\"#!/api/Ext.Component-event-beforerender\" rel=\"Ext.Component-event-beforerender\" class=\"docClass\">beforerender</a>","<a href=\"#!/api/Ext.Component-event-beforeshow\" rel=\"Ext.Component-event-beforeshow\" class=\"docClass\">beforeshow</a>","<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>","<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a>","tofront"],"method_calls":["setPagePosition","setPosition","show"],"readonly":null,"required":null,"template":null,"id":"method-showAt","owner":"Ext.Component","overrides":null,"short_doc":"Displays component at specific xy position. ...","html_type":null},{"tagname":"method","name":"showBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5955}],"doc":"<p>Shows this component by the specified <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a> or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a>. Used when this component is <a href=\"#!/api/Ext.Component-cfg-floating\" rel=\"Ext.Component-cfg-floating\" class=\"docClass\">floating</a>.</p>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.dom.Element","name":"component","doc":"<p>The <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> to show the component by.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"position","doc":"<p>Alignment position as used by\n<a href=\"#!/api/Ext.util.Positionable-method-getAlignToXY\" rel=\"Ext.util.Positionable-method-getAlignToXY\" class=\"docClass\">Ext.util.Positionable.getAlignToXY</a>. Defaults to <code><a href=\"#!/api/Ext.Component-cfg-defaultAlign\" rel=\"Ext.Component-cfg-defaultAlign\" class=\"docClass\">defaultAlign</a></code>.\nSee <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> for possible values.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offset","doc":"<p>Alignment offsets as used by\n<a href=\"#!/api/Ext.util.Positionable-method-getAlignToXY\" rel=\"Ext.util.Positionable-method-getAlignToXY\" class=\"docClass\">Ext.util.Positionable.getAlignToXY</a>. See <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> for possible values.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-afterrender\" rel=\"Ext.Component-event-afterrender\" class=\"docClass\">afterrender</a>","<a href=\"#!/api/Ext.Component-event-beforerender\" rel=\"Ext.Component-event-beforerender\" class=\"docClass\">beforerender</a>","<a href=\"#!/api/Ext.Component-event-beforeshow\" rel=\"Ext.Component-event-beforeshow\" class=\"docClass\">beforeshow</a>","<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>","<a href=\"#!/api/Ext.Component-event-render\" rel=\"Ext.Component-event-render\" class=\"docClass\">render</a>","tofront"],"method_calls":["show"],"readonly":null,"required":null,"template":null,"id":"method-showBy","owner":"Ext.Component","overrides":null,"short_doc":"Shows this component by the specified Component or\nElement. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"stopAnimation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":340}],"doc":"<p>Stops any running effects and clears this object's internal effects queue if it contains\nany additional effects that haven't started yet.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-stopAnimation","owner":"Ext.util.Animate","overrides":null,"short_doc":"Stops any running effects and clears this object's internal effects queue if it contains\nany additional effects that ...","html_type":null},{"tagname":"method","name":"stopFx","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":331}],"doc":"<p>Stops any running effects and clears this object's internal effects queue if it contains\nany additional effects that haven't started yet.</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-stopAnimation\" rel=\"Ext.util.Animate-method-stopAnimation\" class=\"docClass\">stopAnimation</a></p>\n","version":"4.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-stopFx","owner":"Ext.util.Animate","overrides":null,"short_doc":"Stops any running effects and clears this object's internal effects queue if it contains\nany additional effects that ...","html_type":null},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-suspendEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends the firing of all events. ...","html_type":null},{"tagname":"method","name":"suspendLayouts","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5987}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":5987,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendLayouts","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"syncFx","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Animate.js","linenr":352}],"doc":"<p>Ensures that all effects queued after syncFx is called on this object are run concurrently.\nThis is the opposite of <a href=\"#!/api/Ext.util.Animate-method-sequenceFx\" rel=\"Ext.util.Animate-method-sequenceFx\" class=\"docClass\">sequenceFx</a>.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-syncFx","owner":"Ext.util.Animate","overrides":null,"short_doc":"Ensures that all effects queued after syncFx is called on this object are run concurrently. ...","html_type":null},{"tagname":"method","name":"syncHidden","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":423}],"doc":"<p>synchronizes the hidden state of this component with the state of its hierarchy</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["afterrender","beforehide","beforerender","beforeshow","move","render","tofront"],"method_calls":["hide","isHierarchicallyHidden","show"],"readonly":null,"required":null,"template":null,"id":"method-syncHidden","owner":"Ext.util.Floating","overrides":null,"short_doc":"synchronizes the hidden state of this component with the state of its hierarchy ...","html_type":null},{"tagname":"method","name":"syncKeyboardMode","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":1061}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-syncKeyboardMode","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"toBack","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":602}],"doc":"<p>Sends this Component to the back of (lower z-index than) any other visible windows</p>\n","params":[],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-toBack","owner":"Ext.util.Floating","overrides":null,"short_doc":"Sends this Component to the back of (lower z-index than) any other visible windows ...","html_type":null},{"tagname":"method","name":"toFront","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":528}],"doc":"<p>Brings this floating Component to the front of any other visible, floating Components\nmanaged by the same <a href=\"#!/api/Ext.ZIndexManager\" rel=\"Ext.ZIndexManager\" class=\"docClass\">ZIndexManager</a></p>\n\n<p>If this Component is modal, inserts the modal mask just below this Component\nin the z-index stack.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"preventFocus","doc":"<p>Specify <code>true</code> to prevent the Component\nfrom being focused.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["tofront"],"method_calls":["fireEvent"],"readonly":null,"required":null,"template":null,"id":"method-toFront","owner":"Ext.util.Floating","overrides":null,"short_doc":"Brings this floating Component to the front of any other visible, floating Components\nmanaged by the same ZIndexManag...","html_type":null},{"tagname":"method","name":"toggleCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":5999}],"doc":"<p>Toggles the specified CSS class on this component (removes it if it already exists,\notherwise adds it).</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to toggle.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"state","doc":"<p>If specified as <code>true</code>, causes the class to be added. If\nspecified as <code>false</code>, causes the class to be removed.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>Returns the Component to allow method chaining.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasCls"],"readonly":null,"required":null,"template":null,"id":"method-toggleCls","owner":"Ext.Component","overrides":null,"short_doc":"Toggles the specified CSS class on this component (removes it if it already exists,\notherwise adds it). ...","html_type":null},{"tagname":"method","name":"toggleInvalidCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":1113}],"doc":"<p>Add/remove invalid class(es)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"hasError","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-toggleInvalidCls","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Add/remove invalid class(es) ...","html_type":null},{"tagname":"method","name":"translatePoints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":881}],"doc":"<p>Translates the passed page coordinates into left/top css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The page y, required if x is not an array</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object with left and top properties. e.g.\n{left: (value), top: (value)}</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["translateXY"],"readonly":null,"required":null,"template":null,"id":"method-translatePoints","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Translates the passed page coordinates into left/top css values for the element ...","html_type":null},{"tagname":"method","name":"translateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":897}],"doc":"<p>Translates the passed page coordinates into x and y css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The page y, required if x is not an array</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object with x and y properties. e.g.\n{x: (value), y: (value)}</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-translateXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Translates the passed page coordinates into x and y css values for the element ...","html_type":null},{"tagname":"method","name":"trimLabelSeparator","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":580}],"doc":"<p>Returns the trimmed label by slicing off the label separator character. Can be overridden.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>The trimmed field label, or empty string if not defined</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-trimLabelSeparator","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Returns the trimmed label by slicing off the label separator character. ...","html_type":null},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-un","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeListener. ...","html_type":null},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unitizeBox","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6016},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/rtl/Component.js","linenr":71}],"doc":"<p><strong>Overridden in Ext.rtl.Component.</strong></p>\n","params":[{"tagname":null,"type":"Object","name":"box","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6016,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unitizeBox","owner":"Ext.Component","overrides":null,"short_doc":"Overridden in Ext.rtl.Component. ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"unmask","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6020}],"doc":"<p>Removes the mask applied by <a href=\"#!/api/Ext.Component-method-mask\" rel=\"Ext.Component-method-mask\" class=\"docClass\">mask</a></p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getMaskTarget","setMasked"],"readonly":null,"required":null,"template":null,"id":"method-unmask","owner":"Ext.Component","overrides":null,"short_doc":"Removes the mask applied by mask ...","html_type":null},{"tagname":"method","name":"unregisterFloatingItem","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6029}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"cmp","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6029,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unregisterFloatingItem","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"unsetActiveError","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":1014}],"doc":"<p>Clears the active error message(s). Note that this only clears the error message element's\ntext and attributes, you'll have to call doComponentLayout to actually update the field's\nlayout to match. If the field extends <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a> you should call\n<a href=\"#!/api/Ext.form.field.Base-method-clearInvalid\" rel=\"Ext.form.field.Base-method-clearInvalid\" class=\"docClass\">clearInvalid</a> instead.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.form.Labelable-event-errorchange\" rel=\"Ext.form.Labelable-event-errorchange\" class=\"docClass\">errorchange</a>"],"method_calls":["getActionEl","hasActiveError","renderActiveError","restoreDisplay","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-unsetActiveError","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Clears the active error message(s). ...","html_type":null},{"tagname":"method","name":"up","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6037}],"doc":"<p>Navigates up the ownership hierarchy searching for an ancestor Container which matches\nany passed selector or component.</p>\n\n<p><em>Important.</em> There is not a universal upwards navigation pointer. There are several upwards\nrelationships such as the <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">button</a> which activates\na <a href=\"#!/api/Ext.button.Button-cfg-menu\" rel=\"Ext.button.Button-cfg-menu\" class=\"docClass\">menu</a>, or the <a href=\"#!/api/Ext.menu.Item\" rel=\"Ext.menu.Item\" class=\"docClass\">menu item</a>\nwhich activated a <a href=\"#!/api/Ext.menu.Item-cfg-menu\" rel=\"Ext.menu.Item-cfg-menu\" class=\"docClass\">submenu</a>, or the\n<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">column header</a> which activated the column menu.</p>\n\n<p>These differences are abstracted away by this method.</p>\n\n<p>Example:</p>\n\n<pre><code>var owningTabPanel = grid.up('tabpanel');\n</code></pre>\n","params":[{"tagname":"params","type":"String/Ext.Component","name":"selector","doc":"<p>The selector component or actual component to test.\nIf not passed the immediate owner/activator is returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String/Number/Ext.Component","name":"limit","doc":"<p>This may be a selector upon which to stop\nthe upward scan, or a limit of the number of steps, or Component reference to stop on.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.container.Container","name":"return","doc":"<p>The matching ancestor Container (or <code>undefined</code> if no match\nwas found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRefOwner"],"readonly":null,"required":null,"template":null,"id":"method-up","owner":"Ext.Component","overrides":null,"short_doc":"Navigates up the ownership hierarchy searching for an ancestor Container which matches\nany passed selector or component. ...","html_type":null},{"tagname":"method","name":"update","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6104}],"doc":"<p>Update the content area of a component.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"htmlOrData","doc":"<p>If this component has been configured with a\ntemplate via the tpl config then it will use this argument as data to populate the\ntemplate. If this component was not configured with a template, the components\ncontent area will be updated via <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> update.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"loadScripts","doc":"<p>Only legitimate when using the <code>html</code>\nconfiguration. Causes embedded script tags to be executed. Inline source will be executed\nwith this Component as the scope (<code>this</code> reference).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>Only legitimate when using the <code>html</code> configuration.\nCallback to execute when scripts have finished loading.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scriptScope","doc":"<p>The scope (<code>this</code> reference) in which to\nexecute <em>inline</em> script elements content. Scripts with a <code>src</code> attribute cannot\nbe executed with this scope.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"`this`","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSizeModel","getTargetEl","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-update","owner":"Ext.Component","overrides":null,"short_doc":"Update the content area of a component. ...","html_type":null},{"tagname":"method","name":"updateActions","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":2103}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"actions","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":2103,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-updateActions","owner":"Ext.container.Container","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateActiveCounter","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":502}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"activeCounter","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":502,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-updateActiveCounter","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateAlwaysOnTop","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Floating.js","linenr":519}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"alwaysOnTop","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":519,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-updateAlwaysOnTop","owner":"Ext.util.Floating","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6191}],"doc":"<p>Sets the current box measurements of the component's underlying element.</p>\n","params":[{"tagname":"params","type":"Object","name":"box","doc":"<p>An object in the format {x, y, width, height}</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Component","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.Component-event-move\" rel=\"Ext.Component-event-move\" class=\"docClass\">move</a>"],"method_calls":["setPagePosition","setSize"],"readonly":null,"required":null,"template":null,"id":"method-updateBox","owner":"Ext.Component","overrides":null,"short_doc":"Sets the current box measurements of the component's underlying element. ...","html_type":null},{"tagname":"method","name":"updateFrame","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Renderable.js","linenr":1462}],"doc":"<p>Updates the frame elements to match new framing. The current <code>frameBody</code> is\npreserved by transplanting it into the new frame. All other frame <code>childEls</code>\nare destroyed and recreated if needed by the new frame. This method cannot\ntransition from framed to non-framed or vise-versa or between table and div\nbased framing.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getChildEls","getFrameInfo","getFrameRenderData","getFrameTpl"],"readonly":null,"required":null,"template":null,"id":"method-updateFrame","owner":"Ext.util.Renderable","overrides":null,"short_doc":"Updates the frame elements to match new framing. ...","html_type":null},{"tagname":"method","name":"updateLabel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldContainer.js","linenr":269}],"doc":"<p>Updates the content of the labelEl if it is rendered</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getFieldLabel","setFieldLabel"],"readonly":null,"required":null,"template":null,"id":"method-updateLabel","owner":"Ext.form.FieldContainer","overrides":null,"short_doc":"Updates the content of the labelEl if it is rendered ...","html_type":null},{"tagname":"method","name":"updateLayout","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6206}],"doc":"<p>Updates this component's layout. If this update affects this components <a href=\"#!/api/Ext.Component-property-ownerCt\" rel=\"Ext.Component-property-ownerCt\" class=\"docClass\">ownerCt</a>,\nthat component's <code>updateLayout</code> method will be called to perform the layout instead.\nOtherwise, just this component (and its child items) will layout.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>An object with layout options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Boolean","name":"defer","doc":"<p><code>true</code> if this layout should be deferred.</p>\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"isRoot","doc":"<p><code>true</code> if this layout should be the root of the layout.</p>\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isLayoutRoot","isLayoutSuspended"],"readonly":null,"required":null,"template":null,"id":"method-updateLayout","owner":"Ext.Component","overrides":null,"short_doc":"Updates this component's layout. ...","html_type":null},{"tagname":"method","name":"updateMaxHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6251}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"maxHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldMaxHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6251,"fires":[],"method_calls":["changeConstraint"],"readonly":null,"required":null,"template":null,"id":"method-updateMaxHeight","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateMaxWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6255}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"maxWidth","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldMaxWidth","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6255,"fires":[],"method_calls":["changeConstraint"],"readonly":null,"required":null,"template":null,"id":"method-updateMaxWidth","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateMinHeight","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6259}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"minHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldMinHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6259,"fires":[],"method_calls":["changeConstraint"],"readonly":null,"required":null,"template":null,"id":"method-updateMinHeight","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateMinWidth","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6263}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"minWidth","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldMinWidth","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6263,"fires":[],"method_calls":["changeConstraint"],"readonly":null,"required":null,"template":null,"id":"method-updateMinWidth","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateSession","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":860}],"doc":"<p>Updates the session config.</p>\n","params":[{"tagname":"params","type":"Ext.data.Session","name":"session","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getInherited"],"readonly":null,"required":null,"template":null,"id":"method-updateSession","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Updates the session config. ...","html_type":null},{"tagname":"method","name":"updateTouchAction","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":6267}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"touchAction","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":6267,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-updateTouchAction","owner":"Ext.Component","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateValidation","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":647}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"validation","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"oldValidation","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":647,"fires":["errorchange","<a href=\"#!/api/Ext.form.field.Field-event-validitychange\" rel=\"Ext.form.field.Field-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["validate"],"readonly":null,"required":null,"template":null,"id":"method-updateValidation","owner":"Ext.form.field.Field","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateViewModel","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Bindable.js","linenr":876}],"doc":"<p>Updates the viewModel config.</p>\n","params":[{"tagname":"params","type":"Ext.app.ViewModel","name":"viewModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.app.ViewModel","name":"oldViewModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getController","getInherited"],"readonly":null,"required":null,"template":null,"id":"method-updateViewModel","owner":"Ext.mixin.Bindable","overrides":null,"short_doc":"Updates the viewModel config. ...","html_type":null},{"tagname":"method","name":"validate","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/CheckboxGroup.js","linenr":528}],"doc":"<p>Returns whether or not the field value is currently valid by <a href=\"#!/api/Ext.form.CheckboxGroup-method-getErrors\" rel=\"Ext.form.CheckboxGroup-method-getErrors\" class=\"docClass\">validating</a>\nthe field's current value, and fires the <a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a> event if the field's\nvalidity has changed since the last validation.\n<strong>Note</strong>: <a href=\"#!/api/Ext.form.CheckboxGroup-cfg-disabled\" rel=\"Ext.form.CheckboxGroup-cfg-disabled\" class=\"docClass\">disabled</a> fields are always treated as valid.</p>\n\n<p>Custom implementations of this method are allowed to have side-effects such as triggering\nerror message display. To validate without side-effects, use <a href=\"#!/api/Ext.form.CheckboxGroup-method-isValid\" rel=\"Ext.form.CheckboxGroup-method-isValid\" class=\"docClass\">isValid</a>.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>True if the value is valid, else false</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":528,"fires":["<a href=\"#!/api/Ext.form.CheckboxGroup-event-errorchange\" rel=\"Ext.form.CheckboxGroup-event-errorchange\" class=\"docClass\">errorchange</a>","<a href=\"#!/api/Ext.form.CheckboxGroup-event-validitychange\" rel=\"Ext.form.CheckboxGroup-event-validitychange\" class=\"docClass\">validitychange</a>"],"method_calls":["fireEvent","getErrors","setActiveError","unsetActiveError","updateLayout"],"readonly":null,"required":null,"template":null,"id":"method-validate","owner":"Ext.form.CheckboxGroup","overrides":[{"name":"validate","owner":"Ext.form.field.Field","link":"<a href=\"#!/api/Ext.form.field.Field-method-validate\" rel=\"Ext.form.field.Field-method-validate\" class=\"docClass\">Ext.form.field.Field.validate</a>"}],"short_doc":"Returns whether or not the field value is currently valid by validating\nthe field's current value, and fires the vali...","html_type":null},{"tagname":"method","name":"visitPostOrder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":133}],"doc":"<p>Traverses the tree rooted at this node in post-order mode, calling the passed function\non the nodes at each level. That is the function is called upon each node <strong>after</strong> being\ncalled on its children).</p>\n\n<p>This method is used at each level down the cascade. Currently\n<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a>s and <a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">TreeModel</a>s are queryable.</p>\n\n<p>If you have tree-structured data, you can make your nodes queryable, and use ComponentQuery\non them.</p>\n","params":[{"tagname":"params","type":"Object","name":"selector","doc":"<p>A ComponentQuery selector used to filter candidate nodes before\ncalling the function. An empty string matches any node.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call. Return <code>false</code> to abort the traverse.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Object","name":"node","doc":"<p>The node being visited.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null}]},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The context (<code>this</code> reference) in which the function is executed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"extraArgs","doc":"<p>A set of arguments to be appended to the function's argument list\nto pass down extra data known to the caller <strong>after</strong> the node being visited.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getQueryRoot"],"readonly":null,"required":null,"template":null,"id":"method-visitPostOrder","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Traverses the tree rooted at this node in post-order mode, calling the passed function\non the nodes at each level. ...","html_type":null},{"tagname":"method","name":"visitPreOrder","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Queryable.js","linenr":110}],"doc":"<p>Traverses the tree rooted at this node in pre-order mode, calling the passed function\non the nodes at each level. That is the function is called upon each node <strong>before</strong>\nbeing called on its children).</p>\n\n<p>This method is used at each level down the cascade. Currently\n<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a>s and <a href=\"#!/api/Ext.data.TreeModel\" rel=\"Ext.data.TreeModel\" class=\"docClass\">TreeModel</a>s are queryable.</p>\n\n<p>If you have tree-structured data, you can make your nodes queryable, and use ComponentQuery\non them.</p>\n","params":[{"tagname":"params","type":"Object","name":"selector","doc":"<p>A ComponentQuery selector used to filter candidate nodes before\ncalling the function. An empty string matches any node.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call. Return <code>false</code> to abort the traverse.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Object","name":"node","doc":"<p>The node being visited.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null}]},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The context (<code>this</code> reference) in which the function is executed.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"extraArgs","doc":"<p>A set of arguments to be appended to the function's argument list\nto pass down extra data known to the caller <strong>after</strong> the node being visited.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getQueryRoot"],"readonly":null,"required":null,"template":null,"id":"method-visitPreOrder","owner":"Ext.mixin.Queryable","overrides":null,"short_doc":"Traverses the tree rooted at this node in pre-order mode, calling the passed function\non the nodes at each level. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.Base","overrides":null,"short_doc":"Create a new instance of this Class. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"event","name":"activate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1965}],"doc":"<p>Fires after a Component has been visually activated.</p>\n\n<p><strong>Note</strong> This event is only fired if this Component is a child of a\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> that uses <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> as it's layout\nor this Component is a floating Component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-activate","owner":"Ext.Component","overrides":null,"short_doc":"Fires after a Component has been visually activated. ...","html_type":null},{"tagname":"event","name":"add","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":825}],"doc":"<p>Fires after any <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> is added or inserted into the container.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component that was added</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the component was added to the container's items\ncollection</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-add","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires after any Ext.Component is added or inserted into the container. ...","html_type":null},{"tagname":"event","name":"added","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1995}],"doc":"<p>Fires after a Component had been added to a Container.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.container.Container","name":"container","doc":"<p>Parent Container</p>\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"pos","doc":"<p>position of Component</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-added","owner":"Ext.Component","overrides":null,"short_doc":"Fires after a Component had been added to a Container. ...","html_type":null},{"tagname":"event","name":"afterlayout","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":835}],"doc":"<p>Fires when the components in this container are arranged by the associated layout manager.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.layout.container.Container","name":"layout","doc":"<p>The ContainerLayout implementation for this\ncontainer</p>\n","html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-afterlayout","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires when the components in this container are arranged by the associated layout manager. ...","html_type":null},{"tagname":"event","name":"afterlayoutanimation","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1946}],"doc":"<p>This event first after a component's layout has been updated by a layout that\nincluded animation (e.g., a <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">panel</a> in an\n<a href=\"#!/api/Ext.layout.container.Accordion\" rel=\"Ext.layout.container.Accordion\" class=\"docClass\">accordion</a> layout).</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-afterlayoutanimation","owner":"Ext.Component","overrides":null,"short_doc":"This event first after a component's layout has been updated by a layout that\nincluded animation (e.g., a panel in an...","html_type":null},{"tagname":"event","name":"afterrender","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2073}],"doc":"<p>Fires after the component rendering is finished.</p>\n\n<p>The <code>afterrender</code> event is fired after this Component has been <a href=\"#!/api/Ext.Component-property-rendered\" rel=\"Ext.Component-property-rendered\" class=\"docClass\">rendered</a>,\nbeen post-processed by any <code>afterRender</code> method defined for the Component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-afterrender","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component rendering is finished. ...","html_type":null},{"tagname":"event","name":"beforeactivate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1955}],"doc":"<p>Fires before a Component has been visually activated. Returning <code>false</code> from an event\nlistener can prevent the activate from occurring.</p>\n\n<p><strong>Note</strong> This event is only fired if this Component is a child of a\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> that uses <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> as it's layout.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeactivate","owner":"Ext.Component","overrides":null,"short_doc":"Fires before a Component has been visually activated. ...","html_type":null},{"tagname":"event","name":"beforeadd","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":844}],"doc":"<p>Fires before any <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> is added or inserted into the container.\nA handler can return false to cancel the add.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component being added</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index at which the component will be added to the container's items\ncollection</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeadd","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires before any Ext.Component is added or inserted into the container. ...","html_type":null},{"tagname":"event","name":"beforedeactivate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1975}],"doc":"<p>Fires before a Component has been visually deactivated. Returning <code>false</code> from an event\nlistener can prevent the deactivate from occurring.</p>\n\n<p><strong>Note</strong> This event is only fired if this Component is a child of a\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> that uses <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> as it's layout.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforedeactivate","owner":"Ext.Component","overrides":null,"short_doc":"Fires before a Component has been visually deactivated. ...","html_type":null},{"tagname":"event","name":"beforedestroy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2095}],"doc":"<p>Fires before the component is destroyed.</p>\n\n<p><strong>Note:</strong> This event should not be used to try to veto the destruction sequence by returning\n <code>false</code>, even though this is often permitted in other \"before\" events. Doing so will have\nunpredictable side-effects and can result in partially destroyed objects. Instead look to\nother events like beforeclose that occur prior to\nthe call to the destroy method.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforedestroy","owner":"Ext.Component","overrides":null,"short_doc":"Fires before the component is destroyed. ...","html_type":null},{"tagname":"event","name":"beforehide","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2034}],"doc":"<p>Fires before the component is hidden when calling the <a href=\"#!/api/Ext.Component-method-hide\" rel=\"Ext.Component-method-hide\" class=\"docClass\">hide</a>\nmethod. Return <code>false</code> from an event handler to stop the hide.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforehide","owner":"Ext.Component","overrides":null,"short_doc":"Fires before the component is hidden when calling the hide\nmethod. ...","html_type":null},{"tagname":"event","name":"beforeremove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":855}],"doc":"<p>Fires before any <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> is removed from the container.  A handler can return\nfalse to cancel the remove.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component being removed</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeremove","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires before any Ext.Component is removed from the container. ...","html_type":null},{"tagname":"event","name":"beforerender","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2058}],"doc":"<p>Fires before the component is <a href=\"#!/api/Ext.Component-property-rendered\" rel=\"Ext.Component-property-rendered\" class=\"docClass\">rendered</a>. Return <code>false</code> from an event handler\nto stop the <a href=\"#!/api/Ext.Component-method-render\" rel=\"Ext.Component-method-render\" class=\"docClass\">render</a>.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforerender","owner":"Ext.Component","overrides":null,"short_doc":"Fires before the component is rendered. ...","html_type":null},{"tagname":"event","name":"beforeshow","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2018}],"doc":"<p>Fires before the component is shown when calling the <a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a>\nmethod. Return <code>false</code> from an event handler to stop the show.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeshow","owner":"Ext.Component","overrides":null,"short_doc":"Fires before the component is shown when calling the show\nmethod. ...","html_type":null},{"tagname":"event","name":"beforestaterestore","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":117}],"doc":"<p>Fires before the state of the object is restored. Return false from an event handler to stop\nthe restore.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values returned from the StateProvider. If this\nevent is not vetoed, then the state object is passed to <em><code>applyState</code></em>. By default,\nthat simply copies property values into this object. The method maybe overriden to\nprovide custom state restoration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforestaterestore","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Fires before the state of the object is restored. ...","html_type":null},{"tagname":"event","name":"beforestatesave","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":137}],"doc":"<p>Fires before the state of the object is saved to the configured state provider.\nReturn false to stop the save.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values. This is determined by calling\n<em><code>getState()</code></em> on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default,\n<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> has a null implementation.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforestatesave","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Fires before the state of the object is saved to the configured state provider. ...","html_type":null},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":88}],"doc":"<p>Fires when this Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> loses focus.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The blur event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-blur","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Fires when this Component's focusEl loses focus. ...","html_type":null},{"tagname":"event","name":"boxready","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2083}],"doc":"<p>Fires <em>one time</em> - after the component has been laid out for the first time at its initial\nsize.</p>\n\n<p>This event does not fire on components that use <a href=\"#!/api/Ext.Component-cfg-liquidLayout\" rel=\"Ext.Component-cfg-liquidLayout\" class=\"docClass\">liquidLayout</a>, such as\n<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Buttons</a> and <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Form Fields</a>.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"width","doc":"<p>The initial width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"height","doc":"<p>The initial height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-boxready","owner":"Ext.Component","overrides":null,"short_doc":"Fires one time - after the component has been laid out for the first time at its initial\nsize. ...","html_type":null},{"tagname":"event","name":"change","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":113}],"doc":"<p>Fires when the value of a field is changed. The value of a field is\nchecked for changes when the field's <a href=\"#!/api/Ext.form.field.Field-method-setValue\" rel=\"Ext.form.field.Field-method-setValue\" class=\"docClass\">setValue</a> method\nis called and when any of the events listed in\n<a href=\"#!/api/Ext.form.field.Base-cfg-checkChangeEvents\" rel=\"Ext.form.field.Base-cfg-checkChangeEvents\" class=\"docClass\">checkChangeEvents</a> are fired.</p>\n","params":[{"tagname":"params","type":"Ext.form.field.Field","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"newValue","doc":"<p>The new value</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"oldValue","doc":"<p>The original value</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-change","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Fires when the value of a field is changed. ...","html_type":null},{"tagname":"event","name":"childmove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":872}],"doc":"<p>Fires after any <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> has changed its ordinal position within the container.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component that was moved</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"prevIndex","doc":"<p>The previous ordinal position of the Component</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"newIndex","doc":"<p>The new ordinal position of the Component</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-childmove","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires after any Ext.Component has changed its ordinal position within the container. ...","html_type":null},{"tagname":"event","name":"deactivate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":1985}],"doc":"<p>Fires after a Component has been visually deactivated.</p>\n\n<p><strong>Note</strong> This event is only fired if this Component is a child of a\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a> that uses <a href=\"#!/api/Ext.layout.container.Card\" rel=\"Ext.layout.container.Card\" class=\"docClass\">Ext.layout.container.Card</a> as it's layout\nor this Component is a floating Component.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-deactivate","owner":"Ext.Component","overrides":null,"short_doc":"Fires after a Component has been visually deactivated. ...","html_type":null},{"tagname":"event","name":"destroy","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2109}],"doc":"<p>Fires after the component is <a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">destroy</a>ed.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-destroy","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is destroyed. ...","html_type":null},{"tagname":"event","name":"dirtychange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":131}],"doc":"<p>Fires when a change in the field's <a href=\"#!/api/Ext.form.field.Field-method-isDirty\" rel=\"Ext.form.field.Field-method-isDirty\" class=\"docClass\">isDirty</a> state is detected.</p>\n","params":[{"tagname":"params","type":"Ext.form.field.Field","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isDirty","doc":"<p>Whether or not the field is now dirty</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-dirtychange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Fires when a change in the field's isDirty state is detected. ...","html_type":null},{"tagname":"event","name":"disable","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2004}],"doc":"<p>Fires after the component is disabled.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-disable","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is disabled. ...","html_type":null},{"tagname":"event","name":"enable","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2011}],"doc":"<p>Fires after the component is enabled.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-enable","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is enabled. ...","html_type":null},{"tagname":"event","name":"errorchange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/Labelable.js","linenr":531}],"doc":"<p>Fires when the active error message is changed via <a href=\"#!/api/Ext.form.Labelable-method-setActiveError\" rel=\"Ext.form.Labelable-method-setActiveError\" class=\"docClass\">setActiveError</a>.</p>\n","params":[{"tagname":"params","type":"Ext.form.Labelable","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"error","doc":"<p>The active error message</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-errorchange","owner":"Ext.form.Labelable","overrides":null,"short_doc":"Fires when the active error message is changed via setActiveError. ...","html_type":null},{"tagname":"event","name":"fielderrorchange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":86}],"doc":"<p>Fires when the active error message is changed for any one of the <a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a>\ninstances within this container.</p>\n","params":[{"tagname":"params","type":"Ext.form.FieldAncestor","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.FieldAncestor\" rel=\"Ext.form.FieldAncestor\" class=\"docClass\">Ext.form.FieldAncestor</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.form.Labelable","name":"field","doc":"<p>The Labelable instance whose active error was changed</p>\n","html_type":"<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"error","doc":"<p>The active error message</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-fielderrorchange","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Fires when the active error message is changed for any one of the Ext.form.Labelable\ninstances within this container. ...","html_type":null},{"tagname":"event","name":"fieldvaliditychange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/FieldAncestor.js","linenr":77}],"doc":"<p>Fires when the validity state of any one of the <a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a> instances\nwithin this container changes.</p>\n","params":[{"tagname":"params","type":"Ext.form.FieldAncestor","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.FieldAncestor\" rel=\"Ext.form.FieldAncestor\" class=\"docClass\">Ext.form.FieldAncestor</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.form.Labelable","name":"field","doc":"<p>The Field instance whose validity changed</p>\n","html_type":"<a href=\"#!/api/Ext.form.Labelable\" rel=\"Ext.form.Labelable\" class=\"docClass\">Ext.form.Labelable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"isValid","doc":"<p>The field's new validity state</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-fieldvaliditychange","owner":"Ext.form.FieldAncestor","overrides":null,"short_doc":"Fires when the validity state of any one of the Ext.form.field.Field instances\nwithin this container changes. ...","html_type":null},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":81}],"doc":"<p>Fires when this Component's <a href=\"#!/api/Ext.mixin.Focusable-property-focusEl\" rel=\"Ext.mixin.Focusable-property-focusEl\" class=\"docClass\">focusEl</a> receives focus.</p>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Widget","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.Widget\" rel=\"Ext.Widget\" class=\"docClass\">Ext.Widget</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focus event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focus","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Fires when this Component's focusEl receives focus. ...","html_type":null},{"tagname":"event","name":"focusenter","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":95}],"doc":"<p>Fires when focus enters this Component's hierarchy.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focusenter event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focusenter","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Fires when focus enters this Component's hierarchy. ...","html_type":null},{"tagname":"event","name":"focusleave","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Focusable.js","linenr":102}],"doc":"<p>Fires when focus leaves this Component's hierarchy.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The focusleave event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focusleave","owner":"Ext.mixin.Focusable","overrides":null,"short_doc":"Fires when focus leaves this Component's hierarchy. ...","html_type":null},{"tagname":"event","name":"hide","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2042}],"doc":"<p>Fires after the component is hidden. Fires after the component is hidden when calling\nthe <a href=\"#!/api/Ext.Component-method-hide\" rel=\"Ext.Component-method-hide\" class=\"docClass\">hide</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-hide","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is hidden. ...","html_type":null},{"tagname":"event","name":"move","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2131}],"doc":"<p>Fires after the component is moved.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"x","doc":"<p>The new x position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The new y position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-move","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is moved. ...","html_type":null},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/container/Container.js","linenr":864}],"doc":"<p>Fires after any <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> is removed from the container.</p>\n","params":[{"tagname":"params","type":"Ext.container.Container","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Component","name":"component","doc":"<p>The component that was removed</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"2.3.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-remove","owner":"Ext.container.Container","overrides":null,"short_doc":"Fires after any Ext.Component is removed from the container. ...","html_type":null},{"tagname":"event","name":"removed","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2050}],"doc":"<p>Fires when a component is removed from an <a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a></p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.container.Container","name":"ownerCt","doc":"<p>Container which holds the component</p>\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"3.4.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-removed","owner":"Ext.Component","overrides":null,"short_doc":"Fires when a component is removed from an Ext.container.Container ...","html_type":null},{"tagname":"event","name":"render","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2066}],"doc":"<p>Fires after the component markup is <a href=\"#!/api/Ext.Component-property-rendered\" rel=\"Ext.Component-property-rendered\" class=\"docClass\">rendered</a>.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-render","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component markup is rendered. ...","html_type":null},{"tagname":"event","name":"resize","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2116}],"doc":"<p>Fires after the component is resized. Note that this does <em>not</em> fire when the component\nis first laid out at its initial size. To hook that point in the life cycle, use the\n<a href=\"#!/api/Ext.Component-event-boxready\" rel=\"Ext.Component-event-boxready\" class=\"docClass\">boxready</a> event.</p>\n\n<p>This event does not fire on components that use <a href=\"#!/api/Ext.Component-cfg-liquidLayout\" rel=\"Ext.Component-cfg-liquidLayout\" class=\"docClass\">liquidLayout</a>, such as\n<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Buttons</a> and <a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Form Fields</a>.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"width","doc":"<p>The new width that was set.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"height","doc":"<p>The new height that was set.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"oldWidth","doc":"<p>The previous width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"oldHeight","doc":"<p>The previous height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-resize","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is resized. ...","html_type":null},{"tagname":"event","name":"show","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Component.js","linenr":2026}],"doc":"<p>Fires after the component is shown when calling the <a href=\"#!/api/Ext.Component-method-show\" rel=\"Ext.Component-method-show\" class=\"docClass\">show</a>\nmethod.</p>\n","params":[{"tagname":"params","type":"Ext.Component","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"1.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-show","owner":"Ext.Component","overrides":null,"short_doc":"Fires after the component is shown when calling the show\nmethod. ...","html_type":null},{"tagname":"event","name":"staterestore","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":128}],"doc":"<p>Fires after the state of the object is restored.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values returned from the StateProvider.\nThis is passed to <em><code>applyState</code></em>. By default, that simply copies property values into this\nobject. The method maybe overridden to provide custom state restoration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-staterestore","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Fires after the state of the object is restored. ...","html_type":null},{"tagname":"event","name":"statesave","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/state/Stateful.js","linenr":148}],"doc":"<p>Fires after the state of the object is saved to the configured state provider.</p>\n","params":[{"tagname":"params","type":"Ext.state.Stateful","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"state","doc":"<p>The hash of state values. This is determined by calling\n<em><code>getState()</code></em> on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default,\n<a href=\"#!/api/Ext.state.Stateful\" rel=\"Ext.state.Stateful\" class=\"docClass\">Ext.state.Stateful</a> has a null implementation.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-statesave","owner":"Ext.state.Stateful","overrides":null,"short_doc":"Fires after the state of the object is saved to the configured state provider. ...","html_type":null},{"tagname":"event","name":"validitychange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/form/field/Field.js","linenr":124}],"doc":"<p>Fires when a change in the field's validity is detected.</p>\n","params":[{"tagname":"params","type":"Ext.form.field.Field","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.form.field.Field\" rel=\"Ext.form.field.Field\" class=\"docClass\">Ext.form.field.Field</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isValid","doc":"<p>Whether or not the field is now valid</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-validitychange","owner":"Ext.form.field.Field","overrides":null,"short_doc":"Fires when a change in the field's validity is detected. ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.form.CheckboxGroup","component":true,"short_doc":"A field container which has a specialized layout for arranging\nExt.form.field.Checkbox controls into columns, and pro...","deprecated":null}