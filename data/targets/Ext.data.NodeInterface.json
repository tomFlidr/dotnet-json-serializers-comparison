{"tagname":"class","name":"Ext.data.NodeInterface","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1}],"doc":"<p>This class is used as a set of methods that are applied to the prototype of a\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> to decorate it with a Node API. This means that models\nused in conjunction with a tree will have all of the tree related methods available\non the model. In general, this class will not be used directly by the developer.</p>\n\n<p>This class also creates extra <a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">fields</a> on the model, if they do\nnot exist, to help maintain the tree state and UI. These fields are documented as\nconfig options.</p>\n\n<p>The data fields used to render a tree node are: <a href=\"#!/api/Ext.data.NodeInterface-cfg-text\" rel=\"Ext.data.NodeInterface-cfg-text\" class=\"docClass\">text</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a>,\n<a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a>.  Once a node is loaded to the tree store\nyou can use <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">get()</a> to fetch the value of a given field\nname (provided there is not a convenience accessor on the Node for that field).</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>(); // not required when using <a href=\"#!/api/Ext-method-application\" rel=\"Ext-method-application\" class=\"docClass\">Ext.application</a>()\n\nvar root = {\n    expanded: true,\n    children: [{\n        text: \"Leaf node (&lt;i&gt;no folder/arrow icon&lt;/i&gt;)\",\n        leaf: true,\n        qtitle: 'Sample Tip Title',\n        qtip: 'Tip body'\n    }, {\n        text: \"Parent node expanded\",\n        expanded: true,\n        children: [{\n            text: \"Expanded leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Expanded leaf node 2\",\n            leaf: true\n        }]\n    }, {\n        text: \"Parent node collapsed\",\n        children: [{\n            text: \"Collapsed leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Collapsed leaf node 2\",\n            leaf: true\n        }]\n    }]\n};\n\nvar tree = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>', {\n    title: 'TreePanel',\n    width: 260,\n    height: 200,\n    root: root,\n    rootVisible: false,\n    renderTo: document.body,\n    bbar: ['The first node ', {\n        text: 'is a leaf?',\n        handler: function() {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Is Leaf?', firstChild.isLeaf());\n        }\n    }, {\n        text: 'has text?',\n        handler: function() {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Has Text:', firstChild.get('text'));\n        }\n    }]\n});\n</code></pre>\n\n<p>The following configs have methods used to set the value / state of the node at\nruntime:</p>\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a> / <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-hasChildNodes\" rel=\"Ext.data.NodeInterface-method-hasChildNodes\" class=\"docClass\">hasChildNodes</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertChild\" rel=\"Ext.data.NodeInterface-method-insertChild\" class=\"docClass\">insertChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-remove\" rel=\"Ext.data.NodeInterface-method-remove\" class=\"docClass\">remove</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeAll\" rel=\"Ext.data.NodeInterface-method-removeAll\" class=\"docClass\">removeAll</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeChild\" rel=\"Ext.data.NodeInterface-method-removeChild\" class=\"docClass\">removeChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-replaceChild\" rel=\"Ext.data.NodeInterface-method-replaceChild\" class=\"docClass\">replaceChild</a></li>\n</ul>\n\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expandChildren\" rel=\"Ext.data.NodeInterface-method-expandChildren\" class=\"docClass\">expandChildren</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapse\" rel=\"Ext.data.NodeInterface-method-collapse\" class=\"docClass\">collapse</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapseChildren\" rel=\"Ext.data.NodeInterface-method-collapseChildren\" class=\"docClass\">collapseChildren</a></li>\n</ul>\n\n\n<p>The remaining configs may be set using <a href=\"#!/api/Ext.data.Model-method-set\" rel=\"Ext.data.Model-method-set\" class=\"docClass\">set()</a>.</p>\n\n<pre><code>node.set('text', 'Changed Text'); // example showing how to change the node label\n</code></pre>\n\n<p>The <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a> use QuickTips and\nrequires initializing <a href=\"#!/api/Ext.tip.QuickTipManager\" rel=\"Ext.tip.QuickTipManager\" class=\"docClass\">Ext.tip.QuickTipManager</a> unless the application is\ncreated using <a href=\"#!/api/Ext-method-application\" rel=\"Ext-method-application\" class=\"docClass\">Ext.application</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>();\n</code></pre>\n\n<p>For additional information and examples see the description for\n<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>.</p>\n","aliases":{"widget":null,"request":null},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.data.field.Boolean","Ext.data.field.Integer","Ext.data.field.String","Ext.data.writer.Json","Ext.mixin.Observable"],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"cfg","name":"allowDrag","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":210}],"doc":"<p>Set to false to deny dragging of this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-allowDrag","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Set to false to deny dragging of this node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"allowDrop","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":202}],"doc":"<p>Set to false to deny dropping on this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-allowDrop","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Set to false to deny dropping on this node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"checked","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":130}],"doc":"<p>Set to true or false to show a checkbox alongside this node.</p>\n\n<p>To fetch an array of checked nodes use <a href=\"#!/api/Ext.tree.Panel-method-getChecked\" rel=\"Ext.tree.Panel-method-getChecked\" class=\"docClass\">getChecked()</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"null","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-checked","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Set to true or false to show a checkbox alongside this node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"children","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":263}],"doc":"<p>Array of child nodes.</p>\n\n<p><strong>Note:</strong> By default the child nodes root is <code>children</code>, but can be set using the\nreader <a href=\"#!/api/Ext.data.reader.Reader-cfg-rootProperty\" rel=\"Ext.data.reader.Reader-cfg-rootProperty\" class=\"docClass\">rootProperty</a> config on the\n<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore's</a> <a href=\"#!/api/Ext.data.TreeStore-cfg-proxy\" rel=\"Ext.data.TreeStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-children","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Array of child nodes. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"tagname":"cfg","name":"cls","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":146}],"doc":"<p>CSS class to apply to this node.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-cls","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"depth","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":329}],"doc":"<p>The number of parents this node has. A root node has depth 0, a child of it depth 1, and\nso on...</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-getDepth\" rel=\"Ext.data.NodeInterface-method-getDepth\" class=\"docClass\">getDepth</a>.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-depth","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"The number of parents this node has. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"expandable","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":123}],"doc":"<p>False to prevent expanding/collapsing of this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpandable\" rel=\"Ext.data.NodeInterface-method-isExpandable\" class=\"docClass\">isExpandable</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-expandable","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"False to prevent expanding/collapsing of this node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"expanded","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":113}],"doc":"<p>True if the node is expanded.</p>\n\n<p>When the tree is asynchronously remote loaded, expanding a collapsed node loads\nthe children of that node (if the node has not already been loaded previously).</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpanded\" rel=\"Ext.data.NodeInterface-method-isExpanded\" class=\"docClass\">isExpanded</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-expanded","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if the node is expanded. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"glyph","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":162}],"doc":"<p>A numeric unicode character code to use as the icon.  The default font-family\nfor glyphs can be set globally using\n<a href=\"#!/api/Ext.app.Application-cfg-glyphFontFamily\" rel=\"Ext.app.Application-cfg-glyphFontFamily\" class=\"docClass\">glyphFontFamily</a> application\nconfig or the <a href=\"#!/api/Ext-method-setGlyphFontFamily\" rel=\"Ext-method-setGlyphFontFamily\" class=\"docClass\">Ext.setGlyphFontFamily()</a> method.\nIt is initially set to <code>'Pictos'</code>.</p>\n\n<p>The following shows how to set the glyph using the font icons provided in the\nSDK (assuming the font-family has been configured globally):</p>\n\n<pre><code>// assumes the glyphFontFamily is \"Pictos\"\nglyph: 'x48'       // the \"home\" icon (H character)\n\n// assumes the glyphFontFamily is \"Pictos\"\nglyph: 72          // The \"home\" icon (H character)\n\n// assumes the glyphFontFamily is \"Pictos\"\nglyph: 'H'         // the \"home\" icon\n</code></pre>\n\n<p>Alternatively, this config option accepts a string with the charCode and\nfont-family separated by the <code>@</code> symbol.</p>\n\n<pre><code>// using Font Awesome\nglyph: 'xf015@FontAwesome'     // the \"home\" icon\n\n// using Pictos\nglyph: 'H@Pictos'              // the \"home\" icon\n</code></pre>\n\n<p>Depending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:</p>\n\n<ul>\n<li><a href=\"http://fortawesome.github.io/Font-Awesome/cheatsheet/\">Font Awesome icons</a></li>\n<li><a href=\"../guides/core_concepts/font_ext.html\">Pictos icons</a></li>\n<li><a href=\"../guides/core_concepts/theming.html\">Theming Guide</a></li>\n</ul>\n\n","params":null,"return":null,"type":"Number/String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-glyph","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A numeric unicode character code to use as the icon. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"href","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":218}],"doc":"<p>A URL for a link that's created when this config is specified.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-hrefTarget\" rel=\"Ext.data.NodeInterface-cfg-hrefTarget\" class=\"docClass\">hrefTarget</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-href","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A URL for a link that's created when this config is specified. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"hrefTarget","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":225}],"doc":"<p>Target for link. Only applicable when <a href=\"#!/api/Ext.data.NodeInterface-cfg-href\" rel=\"Ext.data.NodeInterface-cfg-href\" class=\"docClass\">href</a> is also specified.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-hrefTarget","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Target for link. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"icon","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":157}],"doc":"<p>Path to an image to use as an icon.</p>\n\n<p>For instructions on how you can use icon fonts including those distributed in\nthe SDK see <a href=\"#!/api/Ext.data.NodeInterface-cfg-iconCls\" rel=\"Ext.data.NodeInterface-cfg-iconCls\" class=\"docClass\">iconCls</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-icon","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Path to an image to use as an icon. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"iconCls","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":151}],"doc":"<p>One or more space separated CSS classes to be applied to the icon element.<br/>\nThe CSS rule(s) applied should specify a background image to be used as the\nicon.</p>\n\n<p>An example of specifying a custom icon class would be something like:</p>\n\n<pre><code>// specify the property in the config for the class:\niconCls: 'my-home-icon'\n\n// css rule specifying the background image to be used as the icon image:\n.my-home-icon {\n    background-image: url(../images/my-home-icon.gif) !important;\n}\n</code></pre>\n\n<p>In addition to specifying your own classes, you can use the font icons\nprovided in the SDK using the following syntax:</p>\n\n<pre><code>// using Font Awesome\niconCls: 'x-fa fa-home'\n\n// using Pictos\niconCls: 'pictos pictos-home'\n</code></pre>\n\n<p>Depending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:</p>\n\n<ul>\n<li><a href=\"http://fortawesome.github.io/Font-Awesome/cheatsheet/\">Font Awesome icons</a></li>\n<li><a href=\"../guides/core_concepts/font_ext.html\">Pictos icons</a></li>\n<li><a href=\"../guides/core_concepts/theming.html\">Theming Guide</a></li>\n</ul>\n\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-iconCls","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"One or more space separated CSS classes to be applied to the icon element. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"index","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":320}],"doc":"<p>The position of the node inside its parent. When parent has 4 children and the node is third\namongst them, index will be 2.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-indexOf\" rel=\"Ext.data.NodeInterface-method-indexOf\" class=\"docClass\">indexOf</a> and <a href=\"#!/api/Ext.data.NodeInterface-method-indexOfId\" rel=\"Ext.data.NodeInterface-method-indexOfId\" class=\"docClass\">indexOfId</a>.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-index","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"The position of the node inside its parent. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"isFirst","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":304}],"doc":"<p>True if this is the first node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isFirst\" rel=\"Ext.data.NodeInterface-method-isFirst\" class=\"docClass\">isFirst</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-isFirst","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if this is the first node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"isLast","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":296}],"doc":"<p>True if this is the last node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLast\" rel=\"Ext.data.NodeInterface-method-isLast\" class=\"docClass\">isLast</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-isLast","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if this is the last node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"leaf","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":138}],"doc":"<p>Set to true to indicate that this child can have no children. The expand icon/arrow will\nthen not be rendered for this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isLeaf\" rel=\"Ext.data.NodeInterface-method-isLeaf\" class=\"docClass\">isLeaf</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-leaf","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Set to true to indicate that this child can have no children. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"loaded","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":272}],"doc":"<p>True if the node has finished loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoaded\" rel=\"Ext.data.NodeInterface-method-isLoaded\" class=\"docClass\">isLoaded</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-loaded","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if the node has finished loading. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"loading","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":280}],"doc":"<p>True if the node is currently loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoading\" rel=\"Ext.data.NodeInterface-method-isLoading\" class=\"docClass\">isLoading</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-loading","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if the node is currently loading. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"parentId","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":312}],"doc":"<p>ID of parent node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-property-parentNode\" rel=\"Ext.data.NodeInterface-property-parentNode\" class=\"docClass\">parentNode</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-parentId","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"ID of parent node. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"qshowDelay","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":246}],"doc":"<p>Tooltip showDelay.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-qshowDelay","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Tooltip showDelay. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"cfg","name":"qtip","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":230}],"doc":"<p>Tooltip text to show on this node.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-qtip","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Tooltip text to show on this node. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"qtitle","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":238}],"doc":"<p>Tooltip title.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-qtitle","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Tooltip title. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"cfg","name":"root","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":288}],"doc":"<p>True if this is the root node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isRoot\" rel=\"Ext.data.NodeInterface-method-isRoot\" class=\"docClass\">isRoot</a>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-root","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"True if this is the root node. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"text","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":254}],"doc":"<p>The text to show on node label (<em>html tags are accepted</em>).\nThe default text for the root node is <code>ROOT</code>.  All other nodes default to ''.</p>\n\n<p><strong>Note:</strong> By default the node label is <code>text</code>, but can be set using the tree's\n<a href=\"#!/api/Ext.tree.Panel-cfg-displayField\" rel=\"Ext.tree.Panel-cfg-displayField\" class=\"docClass\">displayField</a> config.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-text","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"The text to show on node label (html tags are accepted). ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1230}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"childNodes","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":365}],"doc":"<p>An array of this nodes children.  Array will be empty if this node has no children.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface[]","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-childNodes","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"An array of this nodes children. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"firstChild","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":360}],"doc":"<p>A reference to this node's first child node. <code>null</code> if this node has no children.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-firstChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A reference to this node's first child node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":483}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Node, or subclass\nthereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isNode","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Node, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"lastChild","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":355}],"doc":"<p>A reference to this node's last child node. <code>null</code> if this node has no children.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-lastChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A reference to this node's last child node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"nextSibling","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":338}],"doc":"<p>A reference to this node's next sibling node. <code>null</code> if this node does not have a next\nsibling.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-nextSibling","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A reference to this node's next sibling node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"parentNode","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":350}],"doc":"<p>A reference to this node's parent node. <code>null</code> if this node is the root node.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-parentNode","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A reference to this node's parent node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"previousSibling","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":344}],"doc":"<p>A reference to this node's previous sibling node. <code>null</code> if this node does not have a\nprevious sibling.</p>\n","params":null,"return":null,"type":"Ext.data.NodeInterface","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-previousSibling","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"A reference to this node's previous sibling node. ...","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"appendChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":798}],"doc":"<p>Inserts node(s) as the last child node of this node.</p>\n\n<p>If the node was previously a child node of another parent node, it will be\nremoved from that node first.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface/Ext.data.NodeInterface[]/Object","name":"node","doc":"<p>The node\nor Array of nodes to append</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>True to suppress firing of\nevents.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"commit","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The appended node if single append, or null\nif an array was passed</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["appendChild","callTreeStore","createNode","fireBubbledEvent","getId","getTreeStore","isLeaf","isLoaded","set","setFirstChild","setLastChild","triggerUIUpdate"],"readonly":null,"required":null,"template":null,"id":"method-appendChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Inserts node(s) as the last child node of this node. ...","html_type":null},{"tagname":"method","name":"bubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1721}],"doc":"<p>Bubbles up the tree from this node, calling the specified function with each\nnode. The arguments to the function will be the args provided or the current\nnode. If the function returns false at any point, the bubble is stopped.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (this reference) in which the function\nis executed. Defaults to the current Node.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>The args to call the function with. Defaults to passing\nthe current Node.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-bubble","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Bubbles up the tree from this node, calling the specified function with each\nnode. ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"cascade","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1743}],"doc":"<p>Cascades down the tree from this node, calling the specified functions with each\nnode. The arguments to the function will be the args provided or the current\nnode. If the <code>before</code> function returns false at any point, the cascade is\nstopped on that branch.</p>\n\n<p>Note that the 3 argument form passing <code>fn, scope, args</code> is still supported.\nThe <code>fn</code> function is as before, called <em>before</em> cascading down into child nodes.\nIf it returns <code>false</code>, the child nodes are not traversed.</p>\n","params":[{"tagname":"params","type":"Object/Function","name":"spec","doc":"<p>An object containing <code>before</code> and <code>after</code>\nfunctions, scope and an argument list or simply the <code>before</code> function.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Function","name":"before","doc":"<p>A function to call on a node <em>before</em>\ncascading down into child nodes. If it returns <code>false</code>, the child nodes\nare not traversed.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","properties":null},{"tagname":"params","type":"Function","name":"after","doc":"<p>A function to call on a node <em>after</em>\ncascading down into child nodes.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (this reference) in which the\nfunctions are executed. Defaults to the current Node.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>The args to call the function with. Defaults\nto passing the current Node.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null}]},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If <code>spec</code> is the <code>before</code> function instead of\nan object, this argument is the <code>this</code> pointer.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>If <code>spec</code> is the <code>before</code> function instead of\nan object, this argument is the <code>args</code> to pass.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"after","doc":"<p>If <code>spec</code> is the <code>before</code> function instead of\nan object, this argument is the <code>after</code> function to call.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-cascade","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Cascades down the tree from this node, calling the specified functions with each\nnode. ...","html_type":null},{"tagname":"method","name":"clear","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1208}],"doc":"<p>Clears the node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"erase","doc":"<p>True to erase the node using the configured\nproxy.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"resetChildren","doc":"<p>True to reset child nodes</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clear","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Clears the node. ...","html_type":null},{"tagname":"method","name":"collapse","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2264}],"doc":"<p>Collapse this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","doc":"<p>True to recursively collapse all the children</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to execute once the collapse completes</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to run the callback in</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","fireBubbledEvent","getTreeStore","isExpanded","isLeaf","set"],"readonly":null,"required":null,"template":null,"id":"method-collapse","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Collapse this node. ...","html_type":null},{"tagname":"method","name":"collapseChildren","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2388}],"doc":"<p>Collapse all the children of this node.</p>\n","params":[{"tagname":"params","type":"Function","name":"recursive","doc":"<p>True to recursively collapse all the children</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to execute once all the children are\ncollapsed</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to run the callback in</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-collapseChildren","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Collapse all the children of this node. ...","html_type":null},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1871}],"doc":"<p>Returns true if this node is an ancestor (at any point) of the passed node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-contains","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is an ancestor (at any point) of the passed node. ...","html_type":null},{"tagname":"method","name":"copy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1170}],"doc":"<p>Creates a copy (clone) of this Node.</p>\n","params":[{"tagname":"params","type":"String","name":"newId","doc":"<p>A new id, defaults to this Node's id.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Ext.data.session.Session","name":"session","doc":"<p>The session to which the\nnew record belongs.</p>\n","html_type":"Ext.data.session.Session","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>True to recursively copy all child nodes\ninto the new Node. False to copy without child Nodes.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>A copy of this Node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent"],"readonly":null,"required":null,"template":null,"id":"method-copy","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Creates a copy (clone) of this Node. ...","html_type":null},{"tagname":"method","name":"createNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":612}],"doc":"<p>Ensures that the passed object is an instance of a Record with the NodeInterface\napplied</p>\n","params":[{"tagname":null,"type":"Object","name":"node","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getProxy","getTreeStore"],"readonly":null,"required":null,"template":null,"id":"method-createNode","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Ensures that the passed object is an instance of a Record with the NodeInterface\napplied ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2030}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.Base-property-clearPropertiesOnDestroy\" rel=\"Ext.Base-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["$reap","unlink"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.Base","overrides":[{"name":"destroy","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>"},{"name":"destroy","owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>"},{"name":"destroy","owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>"},{"name":"destroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>"},{"name":"destroy","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>"},{"name":"destroy","owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-method-destroy\" rel=\"Ext.util.AbstractMixedCollection-method-destroy\" class=\"docClass\">Ext.util.AbstractMixedCollection.destroy</a>"},{"name":"destroy","owner":"Ext.app.BaseController","link":"<a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>"},{"name":"destroy","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a>"},{"name":"destroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-method-destroy\" rel=\"Ext.Widget-method-destroy\" class=\"docClass\">Ext.Widget.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"eachChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1800}],"doc":"<p>Iterates the child nodes of this node, calling the specified function\nwith each node. The arguments to the function will be the args\nprovided or the current node. If the function returns false at any\npoint, the iteration stops.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<em>this</em> reference) in which the\nfunction is executed. Defaults to the Node on which eachChild is\ncalled.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>The args to call the function with. Defaults to\npassing the current Node.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-eachChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Iterates the child nodes of this node, calling the specified function\nwith each node. ...","html_type":null},{"tagname":"method","name":"erase","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1288}],"doc":"<p>Destroys the node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callParent","clear","remove"],"readonly":null,"required":null,"template":null,"id":"method-erase","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Destroys the node. ...","html_type":null},{"tagname":"method","name":"expand","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2031}],"doc":"<p>Expand this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","doc":"<p>True to recursively expand all the children</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to execute once the expand completes</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to run the callback in</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","expand","expandChildren","fireBubbledEvent","getTreeStore","isBranchLoaded","isExpanded","isLeaf","isLoading","on"],"readonly":null,"required":null,"template":null,"id":"method-expand","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Expand this node. ...","html_type":null},{"tagname":"method","name":"expandChildren","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2213}],"doc":"<p>Expand all the children of this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"recursive","doc":"<p>True to recursively expand all the children</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to execute once all the children are\nexpanded</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The <code>this</code> pointer for the callback.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"singleExpand","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTreeStore"],"readonly":null,"required":null,"template":null,"id":"method-expandChildren","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Expand all the children of this node. ...","html_type":null},{"tagname":"method","name":"findChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1824}],"doc":"<p>Finds the first child that has the attribute with the specified value.</p>\n","params":[{"tagname":"params","type":"String","name":"attribute","doc":"<p>The attribute name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to search for</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>True to search through nodes deeper than the\nimmediate children</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The found child or null if none was found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findChildBy","get"],"readonly":null,"required":null,"template":null,"id":"method-findChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Finds the first child that has the attribute with the specified value. ...","html_type":null},{"tagname":"method","name":"findChildBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1838}],"doc":"<p>Finds the first child by a custom function. The child matches if the function\npassed returns true.</p>\n","params":[{"tagname":"params","type":"Function","name":"fn","doc":"<p>A function which must return true if the passed Node is the\nrequired Node.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (this reference) in which the function is\nexecuted. Defaults to the Node being tested.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>True to search through nodes deeper than the\nimmediate children</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The found child or null if none was found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-findChildBy","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Finds the first child by a custom function. ...","html_type":null},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2433}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name,\nplus the <code>options</code> object passed to\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns <code>false</code> if any of the handlers return <code>false</code>\notherwise it returns <code>true</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireBubbledEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireEvent","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires the specified event with the passed parameters (minus the event name,\nplus the options object passed to\naddList...","html_type":null},{"tagname":"method","name":"getChildAt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1637}],"doc":"<p>Returns the child node at the specified index.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getChildAt","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns the child node at the specified index. ...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getDepth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1713}],"doc":"<p>Returns depth of this node (the root node has a depth of 0)</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-getDepth","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns depth of this node (the root node has a depth of 0) ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getOwnerTree","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":997}],"doc":"<p>Returns the tree this node is in.</p>\n","params":[],"return":{"type":"Ext.tree.Panel","name":"return","doc":"<p>The tree panel which owns this node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTreeStore"],"readonly":null,"required":null,"template":null,"id":"method-getOwnerTree","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns the tree this node is in. ...","html_type":null},{"tagname":"method","name":"getPath","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1690}],"doc":"<p>Gets the hierarchical path from the root of the current node.</p>\n","params":[{"tagname":"params","type":"String","name":"field","doc":"<p>The field to construct the path from. Defaults to the\nmodel idProperty.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"separator","doc":"<p>A separator to use.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'/'","optional":true,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The node path</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-getPath","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Gets the hierarchical path from the root of the current node. ...","html_type":null},{"tagname":"method","name":"getTreeStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1007}],"doc":"<p>Returns the <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a> which owns this node.</p>\n","params":[],"return":{"type":"Ext.data.TreeStore","name":"return","doc":"<p>The TreeStore which owns this node.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTreeStore","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns the Ext.data.TreeStore which owns this node. ...","html_type":null},{"tagname":"method","name":"hasChildNodes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":766}],"doc":"<p>Returns true if this node has one or more child nodes, else false.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isLeaf"],"readonly":null,"required":null,"template":null,"id":"method-hasChildNodes","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node has one or more child nodes, else false. ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1662}],"doc":"<p>Returns the index of a child node</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"child","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The index of the child node or -1 if it was not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-indexOf","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns the index of a child node ...","html_type":null},{"tagname":"method","name":"indexOfId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1671}],"doc":"<p>Returns the index of a child node that matches the id</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the node to find</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The index of the node or -1 if it was not found</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-indexOfId","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns the index of a child node that matches the id ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"insertBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1318}],"doc":"<p>Inserts the first node before the second node in this nodes childNodes\ncollection.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface/Ext.data.NodeInterface[]/Object","name":"node","doc":"<p>The node\nto insert</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The node to insert before (if null the\nnode is appended)</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The inserted node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["appendChild","callTreeStore","createNode","fireBubbledEvent","getId","getTreeStore","indexOf","isLoaded","set","setFirstChild","triggerUIUpdate"],"readonly":null,"required":null,"template":null,"id":"method-insertBefore","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Inserts the first node before the second node in this nodes childNodes\ncollection. ...","html_type":null},{"tagname":"method","name":"insertChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1477}],"doc":"<p>Inserts a node into this node.</p>\n","params":[{"tagname":"params","type":"Number","name":"index","doc":"<p>The zero-based index to insert the node at</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface/Object","name":"node","doc":"<p>The node to insert</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The node you just inserted</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["appendChild","insertBefore"],"readonly":null,"required":null,"template":null,"id":"method-insertChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Inserts a node into this node. ...","html_type":null},{"tagname":"method","name":"isAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1880}],"doc":"<p>Returns true if the passed node is an ancestor (at any point) of this node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isAncestor","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if the passed node is an ancestor (at any point) of this node. ...","html_type":null},{"tagname":"method","name":"isBranchLoaded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1969}],"doc":"<p>Returns true if this node is a branch node, and the entire branch is fully\nloaded.</p>\n\n<p>Using this method, it is possible to ascertain whether an\n<code>expandAll()</code> call (<em>classic toolkit TreePanel method</em>) will have\naccess to all descendant nodes without incurring a store load.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["cascade","isLeaf","isLoaded"],"readonly":null,"required":null,"template":null,"id":"method-isBranchLoaded","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is a branch node, and the entire branch is fully\nloaded. ...","html_type":null},{"tagname":"method","name":"isExpandable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":774}],"doc":"<p>Returns true if this node has one or more child nodes, or if the <code>expandable</code>\nnode attribute is explicitly specified as true, otherwise returns false.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get","hasChildNodes","isLeaf","isLoaded"],"readonly":null,"required":null,"template":null,"id":"method-isExpandable","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node has one or more child nodes, or if the expandable\nnode attribute is explicitly specified as...","html_type":null},{"tagname":"method","name":"isExpanded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1953}],"doc":"<p>Returns <code>true</code> if this node is expanded.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isExpanded","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is expanded. ...","html_type":null},{"tagname":"method","name":"isFirst","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":758}],"doc":"<p>Returns true if this node is the first child of its parent</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isFirst","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is the first child of its parent ...","html_type":null},{"tagname":"method","name":"isLast","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":750}],"doc":"<p>Returns true if this node is the last child of its parent</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isLast","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is the last child of its parent ...","html_type":null},{"tagname":"method","name":"isLastVisible","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1494}],"doc":"<p>Used by <a href=\"#!/api/Ext.tree.Column-method-initTemplateRendererData\" rel=\"Ext.tree.Column-method-initTemplateRendererData\" class=\"docClass\">Ext.tree.Column.initTemplateRendererData</a> to determine whether\na node is the last <em>visible</em>\nsibling.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getTreeStore"],"readonly":null,"required":null,"template":null,"id":"method-isLastVisible","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Used by Ext.tree.Column.initTemplateRendererData to determine whether\na node is the last visible\nsibling. ...","html_type":null},{"tagname":"method","name":"isLeaf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":676}],"doc":"<p>Returns true if this node is a leaf</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isLeaf","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is a leaf ...","html_type":null},{"tagname":"method","name":"isLoaded","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1961}],"doc":"<p>Returns true if this node is loaded</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isLoaded","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is loaded ...","html_type":null},{"tagname":"method","name":"isLoading","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1994}],"doc":"<p>Returns true if this node is loading</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["get"],"readonly":null,"required":null,"template":null,"id":"method-isLoading","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is loading ...","html_type":null},{"tagname":"method","name":"isRoot","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2002}],"doc":"<p>Returns true if this node is the root node</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isRoot","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is the root node ...","html_type":null},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2010}],"doc":"<p>Returns true if this node is visible. Note that visibility refers to\nthe structure of the tree, the <a href=\"#!/api/Ext.tree.Panel-cfg-rootVisible\" rel=\"Ext.tree.Panel-cfg-rootVisible\" class=\"docClass\">Ext.tree.Panel.rootVisible</a>\nconfiguration is not taken into account here. If this method is called\non the root node, it will always be visible.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isVisible","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Returns true if this node is visible. ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"onChildNodesAvailable","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2131}],"doc":"<p>Called as a callback from the <a href=\"#!/api/Ext.data.TreeStore-method-onBeforeNodeExpand\" rel=\"Ext.data.TreeStore-method-onBeforeNodeExpand\" class=\"docClass\">Ext.data.TreeStore.onBeforeNodeExpand</a> when\nthe child nodes needed by <a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a> have been loaded and appended.</p>\n","params":[{"tagname":null,"type":"Object","name":"records","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"recursive","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"callback","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","expandChildren","fireBubbledEvent","getTreeStore","set"],"readonly":null,"required":null,"template":null,"id":"method-onChildNodesAvailable","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Called as a callback from the Ext.data.TreeStore.onBeforeNodeExpand when\nthe child nodes needed by expand have been l...","html_type":null},{"tagname":"method","name":"onRegisterTreeNode","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":370}],"doc":"<p>Implement this method in a tree record subclass if it needs to track whenever it is\nregistered with a <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeStore","name":"treeStore","doc":"<p>The TreeStore to which the node is being registered.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onRegisterTreeNode","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Implement this method in a tree record subclass if it needs to track whenever it is\nregistered with a TreeStore. ...","html_type":null},{"tagname":"method","name":"onUnregisterTreeNode","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":378}],"doc":"<p>Implement this method in a tree record subclass if it needs to track whenever it is\nunregistered from a <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.TreeStore","name":"treeStore","doc":"<p>The TreeStore from which the node is being\nunregistered.</p>\n","html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":true,"id":"method-onUnregisterTreeNode","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Implement this method in a tree record subclass if it needs to track whenever it is\nunregistered from a TreeStore. ...","html_type":null},{"tagname":"method","name":"remove","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1524}],"doc":"<p>Removes this node from its parent.</p>\n\n<p><strong>If</strong> the node is not phantom (only added in the client side), then it may be\nmarked for removal.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to\n<a href=\"#!/api/Ext.data.ProxyStore-cfg-trackRemoved\" rel=\"Ext.data.ProxyStore-cfg-trackRemoved\" class=\"docClass\">track removed</a> then the node will be\nadded to the stack of nodes due to be removed the next time the store is\nsynced with the server.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to\n<a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">auto synchronize</a> then the synchronize\nrequest will be initiated immediately.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"erase","doc":"<p>True to erase the node using the configured\nproxy. This is only needed when the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a>\nis not taking care of synchronization operations.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["erase"],"readonly":null,"required":null,"template":null,"id":"method-remove","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Removes this node from its parent. ...","html_type":null},{"tagname":"method","name":"removeAll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1561}],"doc":"<p>Removes all child nodes from this node.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"erase","doc":"<p>True to erase the node using the configured\nproxy.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"fromParent","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","fireBubbledEvent","getTreeStore","triggerUIUpdate"],"readonly":null,"required":null,"template":null,"id":"method-removeAll","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Removes all child nodes from this node. ...","html_type":null},{"tagname":"method","name":"removeChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1021}],"doc":"<p>Removes a child node from this node.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The node to remove</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"erase","doc":"<p>True to erase the record using the\nconfigured proxy.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The removed node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","fireBubbledEvent","getId","getTreeStore","indexOf","setFirstChild","setLastChild","triggerUIUpdate"],"readonly":null,"required":null,"template":null,"id":"method-removeChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Removes a child node from this node. ...","html_type":null},{"tagname":"method","name":"replaceChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1646}],"doc":"<p>Replaces one child node in this node with another.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"newChild","doc":"<p>The replacement node</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldChild","doc":"<p>The node to replace</p>\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvents","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.NodeInterface","name":"return","doc":"<p>The replaced node</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["insertBefore","removeChild"],"readonly":null,"required":null,"template":null,"id":"method-replaceChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Replaces one child node in this node with another. ...","html_type":null},{"tagname":"method","name":"serialize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2485}],"doc":"<p>Creates an object representation of this node including its children.</p>\n","params":[{"tagname":null,"type":"Object","name":"writerParam","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-serialize","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Creates an object representation of this node including its children. ...","html_type":null},{"tagname":"method","name":"setCollapsed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":2355}],"doc":"<p>Sets the node into the collapsed state without affecting the UI.</p>\n\n<p>This is called when a node is collapsed with the recursive flag. All the\ndescendant nodes will have been removed from the store, but descendant non-leaf\nnodes still need to be set to the collapsed state without affecting the UI.</p>\n","params":[{"tagname":null,"type":"Object","name":"recursive","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireBubbledEvent","isLeaf"],"readonly":null,"required":null,"template":null,"id":"method-setCollapsed","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Sets the node into the collapsed state without affecting the UI. ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setFirstChild","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":684}],"doc":"<p>Sets the first child of this node</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setFirstChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Sets the first child of this node ...","html_type":null},{"tagname":"method","name":"setLastChild","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":693}],"doc":"<p>Sets the last child of this node</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLastChild","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Sets the last child of this node ...","html_type":null},{"tagname":"method","name":"sort","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":1899}],"doc":"<p>Sorts this nodes children using the supplied sort function.</p>\n","params":[{"tagname":"params","type":"Function","name":"sortFn","doc":"<p>A function which, when passed two Nodes, returns -1,\n0 or 1 depending upon required sort order.</p>\n\n<p>It omitted, the node is sorted according to the existing sorters in the owning\n<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"recursive","doc":"<p>True to apply this sort recursively</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"suppressEvent","doc":"<p>True to not fire a sort event.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["callTreeStore","fireBubbledEvent","getTreeStore","setFirstChild","setLastChild"],"readonly":null,"required":null,"template":null,"id":"method-sort","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Sorts this nodes children using the supplied sort function. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"updateInfo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":702}],"doc":"<p>Updates general data of this node like isFirst, isLast, depth. This\nmethod is internally called after a node is moved. This shouldn't\nhave to be called by the developer unless they are creating custom\nTree plugins.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"commit","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"info","doc":"<p>The info to update. May contain any of the following</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Object","name":"isFirst","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Object","name":"isLast","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Object","name":"index","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Object","name":"depth","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Object","name":"parentId","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null}]}],"return":{"type":"String[]","name":"return","doc":"<p>The names of any persistent fields that were modified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["set"],"readonly":null,"required":null,"template":null,"id":"method-updateInfo","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Updates general data of this node like isFirst, isLast, depth. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.Base","overrides":null,"short_doc":"Create a new instance of this Class. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"decorate","autodetected":{"inheritdoc":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":388}],"doc":"<p>This method decorates a Model class such that it implements the interface of\na tree node. That is, it adds a set of methods, events, properties and fields\non every record.</p>\n","params":[{"tagname":"params","type":"Ext.Class/Ext.data.Model","name":"modelClass","doc":"<p>The Model class or an instance of\nthe Model class you want to decorate. In either case, this method decorates\nthe class so all instances of that type will have the new capabilities.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":["getPrototypeBody"],"readonly":null,"required":null,"template":null,"id":"static-method-decorate","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"This method decorates a Model class such that it implements the interface of\na tree node. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"getPrototypeBody","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":448}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":null,"linenr":448,"fires":null,"method_calls":["_parseCls","addCls","appendChild","callJoined","callParent","callTreeStore","cascade","clear","createNode","erase","expand","expandChildren","findChildBy","fireBubbledEvent","get","getId","getProxy","getTreeStore","hasChildNodes","indexOf","insertBefore","isBranchLoaded","isExpanded","isLeaf","isLoaded","isLoading","isRoot","on","remove","removeChild","removeCls","replaceCls","set","setFirstChild","setLastChild","triggerUIUpdate"],"readonly":null,"required":null,"template":null,"id":"static-method-getPrototypeBody","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"event","name":"append","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":506}],"doc":"<p>Fires when a new child node is appended</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The newly appended node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index of the newly appended node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-append","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when a new child node is appended ...","html_type":null},{"tagname":"event","name":"beforeappend","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":548}],"doc":"<p>Fires before a new child is appended, return false to cancel the append.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be appended</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeappend","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before a new child is appended, return false to cancel the append. ...","html_type":null},{"tagname":"event","name":"beforecollapse","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":598}],"doc":"<p>Fires before this node is collapsed.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The collapsing node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforecollapse","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before this node is collapsed. ...","html_type":null},{"tagname":"event","name":"beforeexpand","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":593}],"doc":"<p>Fires before this node is expanded.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The expanding node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeexpand","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before this node is expanded. ...","html_type":null},{"tagname":"event","name":"beforeinsert","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":575}],"doc":"<p>Fires before a new child is inserted, return false to cancel the insert.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be inserted</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The child node the node is being\ninserted before</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeinsert","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before a new child is inserted, return false to cancel the insert. ...","html_type":null},{"tagname":"event","name":"beforemove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":565}],"doc":"<p>Fires before this node is moved to a new location in the tree. Return false\nto cancel the move.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldParent","doc":"<p>The parent of this node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"newParent","doc":"<p>The new parent this node is moving\nto</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index it is being moved to</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforemove","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before this node is moved to a new location in the tree. ...","html_type":null},{"tagname":"event","name":"beforeremove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":554}],"doc":"<p>Fires before a child is removed, return false to cancel the remove.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node to be removed</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can\nbe moved to another position in the tree. (a side effect of calling\n<a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that\nalready has a parentNode)</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-beforeremove","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires before a child is removed, return false to cancel the remove. ...","html_type":null},{"tagname":"event","name":"collapse","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":588}],"doc":"<p>Fires when this node is collapsed.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The collapsing node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-collapse","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when this node is collapsed. ...","html_type":null},{"tagname":"event","name":"expand","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":583}],"doc":"<p>Fires when this node is expanded.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>The expanding node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-expand","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when this node is expanded. ...","html_type":null},{"tagname":"event","name":"insert","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":540}],"doc":"<p>Fires when a new child node is inserted.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The child node inserted</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"refNode","doc":"<p>The child node the node was inserted\nbefore</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-insert","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when a new child node is inserted. ...","html_type":null},{"tagname":"event","name":"move","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":532}],"doc":"<p>Fires when this node is moved to a new location in the tree</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"oldParent","doc":"<p>The old parent of this node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"newParent","doc":"<p>The new parent of this node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"index","doc":"<p>The index it was moved to</p>\n\n\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-move","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when this node is moved to a new location in the tree ...","html_type":null},{"tagname":"event","name":"remove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":513}],"doc":"<p>Fires when a child node is removed</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"node","doc":"<p>The removed node</p>\n\n\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isMove","doc":"<p><code>true</code> if the child node is being removed so it can\nbe moved to another position in the tree.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"context","doc":"<p>An object providing information about where the\nremoved node came from. It contains the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"parentNode","doc":"<p>The node from which the\nremoved node was removed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"previousSibling","doc":"<p>The removed node's\nformer previous sibling.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","properties":null},{"tagname":"params","type":"Ext.data.NodeInterface","name":"nextSibling","doc":"<p>The removed node's former\nnext sibling. (a side effect of calling\n<a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that\nalready has a parentNode)</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","properties":null}]},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-remove","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when a child node is removed ...","html_type":null},{"tagname":"event","name":"sort","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/NodeInterface.js","linenr":603}],"doc":"<p>Fires when this node's childNodes are sorted.</p>\n","params":[{"tagname":"params","type":"Ext.data.NodeInterface","name":"this","doc":"<p>This node.</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.data.NodeInterface[]","name":"childNodes","doc":"<p>The childNodes of this node.</p>\n\n","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-sort","owner":"Ext.data.NodeInterface","overrides":null,"short_doc":"Fires when this node's childNodes are sorted. ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.data.NodeInterface","component":false,"short_doc":"This class is used as a set of methods that are applied to the prototype of a\nModel to decorate it with a Node API. ...","deprecated":null}