{"tagname":"class","name":"Ext.dom.Element","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1},{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7790}],"doc":"<p>Encapsulates a DOM element, adding simple DOM manipulation facilities, normalizing for browser\ndifferences.</p>\n\n<p><strong>Note:</strong> The events included in this Class are the ones we've found to be the most commonly\nused. Many events are not listed here due to the expedient rate of change across browsers.\nFor a more comprehensive list, please visit the following resources:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Events\">Mozilla Event Reference Guide</a></li>\n<li><a href=\"http://www.w3.org/TR/pointerevents/\">W3 Pointer Events</a></li>\n<li><a href=\"http://www.w3.org/TR/touch-events/\">W3 Touch Events</a></li>\n<li><a href=\"http://www.w3.org/TR/DOM-Level-2-Events/\">W3 DOM 2 Events</a></li>\n<li><a href=\"http://www.w3.org/TR/DOM-Level-3-Events/\">W3 DOM 3 Events</a></li>\n</ul>\n\n\n<h2>Usage</h2>\n\n<pre><code>// by id\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"my-div\");\n\n// by DOM element reference\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(myDivElement);\n</code></pre>\n\n<h2>Selecting Descendant Elements</h2>\n\n<p><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances can be used to select descendant nodes using CSS selectors.\nThere are 3 methods that can be used for this purpose, each with a slightly different\ntwist:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext.dom.Element-method-query\" rel=\"Ext.dom.Element-method-query\" class=\"docClass\">query</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-selectNode\" rel=\"Ext.dom.Element-method-selectNode\" class=\"docClass\">selectNode</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-select\" rel=\"Ext.dom.Element-method-select\" class=\"docClass\">select</a></li>\n</ul>\n\n\n<p>These methods can accept any valid CSS selector since they all use\n<a href=\"http://www.w3.org/TR/css3-selectors/\">querySelectorAll</a> under the hood. The primary\ndifference between these three methods is their return type:</p>\n\n<p>To get an array of HTMLElement instances matching the selector '.foo' use the query\nmethod:</p>\n\n<pre><code>element.query('.foo');\n</code></pre>\n\n<p>This can easily be transformed into an array of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances by setting\nthe <code>asDom</code> parameter to <code>false</code>:</p>\n\n<pre><code>element.query('.foo', false);\n</code></pre>\n\n<p>If the desired result is only the first matching HTMLElement use the selectNode method:</p>\n\n<pre><code>element.selectNode('.foo');\n</code></pre>\n\n<p>Once again, the dom node can be wrapped in an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> by setting the <code>asDom</code>\nparameter to <code>false</code>:</p>\n\n<pre><code>element.selectNode('.foo', false);\n</code></pre>\n\n<p>The <code>select</code> method is used when the desired return type is a <a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">CompositeElementLite</a> or a <a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">CompositeElement</a>.  These are collections of elements that can be operated on as a\ngroup using any of the methods of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.  The only difference between the two\nis that CompositeElementLite is a collection of HTMLElement instances, while\nCompositeElement is a collection of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances.  To retrieve a\nCompositeElementLite that represents a collection of HTMLElements for selector '.foo':</p>\n\n<pre><code>element.select('.foo');\n</code></pre>\n\n<p>For a <a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">CompositeElement</a> simply pass <code>true</code> as the\n<code>composite</code> parameter:</p>\n\n<pre><code>element.select('.foo', true);\n</code></pre>\n\n<p>The query selection methods can be used even if you don't have a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> to\nstart with For example to select an array of all HTMLElements in the document that match the\nselector '.foo', simply wrap the document object in an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instance using\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>(document).query('.foo');\n</code></pre>\n\n<h1>Animations</h1>\n\n<p>When an element is manipulated, by default there is no animation.</p>\n\n<pre><code>var el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"my-div\");\n\n// no animation\nel.setWidth(100);\n</code></pre>\n\n<p>specified as boolean (true) for default animation effects.</p>\n\n<pre><code>// default animation\nel.setWidth(100, true);\n</code></pre>\n\n<p>To configure the effects, an object literal with animation options to use as the Element\nanimation configuration object can also be specified. Note that the supported Element animation\nconfiguration options are a subset of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> animation options specific to Fx\neffects. The supported Element animation configuration options are:</p>\n\n<pre><code>Option    Default   Description\n--------- --------  ---------------------------------------------\nduration  350       The duration of the animation in milliseconds\neasing    easeOut   The easing method\ncallback  none      A function to execute when the anim completes\nscope     this      The scope (this) of the callback function\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>// Element animation options object\nvar opt = {\n    duration: 1000,\n    easing: 'elasticIn',\n    callback: this.foo,\n    scope: this\n};\n// animation with some options set\nel.setWidth(100, opt);\n</code></pre>\n\n<p>The Element animation object being used for the animation will be set on the options object\nas \"anim\", which allows you to stop or manipulate the animation. Here is an example:</p>\n\n<pre><code>// using the \"anim\" property to get the Anim object\nif(opt.anim.isAnimated()){\n    opt.anim.stop();\n}\n</code></pre>\n","aliases":{"widget":null,"request":null},"alternateClassNames":["Ext.Element"],"extends":"Ext.Base","mixins":["Ext.util.Positionable","Ext.mixin.Observable"],"requires":[],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1230}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"_positionTopLeft","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":9}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"['position', 'top', 'left']","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":9,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-_positionTopLeft","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"clippedCls","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":14}],"doc":"<p>Hardware acceleration due to the transform:translateZ(0) flickering\nwhen painting clipped elements. This class allows that to be turned off\nwhile elements are in a clipped state.</p>\n","params":null,"return":null,"type":"String","throws":null,"default":"Ext.baseCSSPrefix + 'clipped'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clippedCls","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Hardware acceleration due to the transform:translateZ(0) flickering\nwhen painting clipped elements. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"component","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":346}],"doc":"<p>A reference to the <code>Component</code> that owns this element. This is <code>null</code> if there\nis no direct owner.</p>\n","params":null,"return":null,"type":"Ext.Component","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-component","owner":"Ext.dom.Element","overrides":null,"short_doc":"A reference to the Component that owns this element. ...","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"dom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":664}],"doc":"<p>The DOM element</p>\n","params":null,"return":null,"type":"HTMLElement","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-dom","owner":"Ext.dom.Element","overrides":null,"short_doc":null,"html_type":"HTMLElement"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-hasListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"id","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5159}],"doc":"<p>The DOM element ID</p>\n","params":null,"return":null,"type":"String","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-id","owner":"Ext.dom.Element","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"maxRippleDiameter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":817}],"doc":"<p>Determines the maximum size for all ripples</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"75","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-maxRippleDiameter","owner":"Ext.dom.Element","overrides":null,"short_doc":"Determines the maximum size for all ripples ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":7}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'positionable'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":7,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinId","owner":"Ext.util.Positionable","overrides":[{"name":"mixinId","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-property-mixinId\" rel=\"Ext.util.Floating-property-mixinId\" class=\"docClass\">Ext.util.Floating.mixinId</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":971}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":971,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-privates","owner":"Ext.util.Positionable","overrides":[{"name":"privates","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-property-privates\" rel=\"Ext.util.Floating-property-privates\" class=\"docClass\">Ext.util.Floating.privates</a>"}],"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"CLIP","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":746}],"doc":"<p>Visibility mode constant for use with <a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a>.\nUse CSS <code>clip</code> property to reduce element's dimensions to 0px by 0px, effectively\nmaking it hidden while not being truly invisible. This is useful when an element\nneeds to be published to the Assistive Technologies such as screen readers.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"4","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-CLIP","owner":"Ext.dom.Element","overrides":null,"short_doc":"Visibility mode constant for use with setVisibilityMode. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"DISPLAY","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":728}],"doc":"<p>Visibility mode constant for use with <a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a>.\nUse the CSS 'display' property to hide the element.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"2","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-DISPLAY","owner":"Ext.dom.Element","overrides":null,"short_doc":"Visibility mode constant for use with setVisibilityMode. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"OFFSETS","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":737}],"doc":"<p>Visibility mode constant for use with <a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a>.\nUse CSS absolute positioning and top/left offsets to hide the element.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"3","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-OFFSETS","owner":"Ext.dom.Element","overrides":null,"short_doc":"Visibility mode constant for use with setVisibilityMode. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"OPACITY","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":757}],"doc":"<p>Visibility mode constant for use with <a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a>.\nUse CSS <code>opacity</code> property to reduce element's opacity to 0</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"5","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-OPACITY","owner":"Ext.dom.Element","overrides":null,"short_doc":"Visibility mode constant for use with setVisibilityMode. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"VISIBILITY","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":715}],"doc":"<p>Visibility mode constant for use with <a href=\"#!/api/Ext.dom.Element-method-setVisibilityMode\" rel=\"Ext.dom.Element-method-setVisibilityMode\" class=\"docClass\">setVisibilityMode</a>.\nUse the CSS 'visibility' property to hide the element.</p>\n\n<p>Note that in this mode, <a href=\"#!/api/Ext.dom.Element-method-isVisible\" rel=\"Ext.dom.Element-method-isVisible\" class=\"docClass\">isVisible</a> may return true\nfor an element even though it actually has a parent element that is hidden. For this\nreason, and in most cases, using the <a href=\"#!/api/Ext.dom.Element-static-property-OFFSETS\" rel=\"Ext.dom.Element-static-property-OFFSETS\" class=\"docClass\">OFFSETS</a> mode is a better choice.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"1","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-VISIBILITY","owner":"Ext.dom.Element","overrides":null,"short_doc":"Visibility mode constant for use with setVisibilityMode. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"cache","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":699}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-cache","owner":"Ext.dom.Element","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"editableSelector","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":707}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'input,textarea,[contenteditable=\"true\"]'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-editableSelector","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"minKeyboardHeight","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":766}],"doc":"<p>This property indicates a minimum threshold of vertical resize movement for\nvirtual keyboard detection.</p>\n\n<p>On some mobile browsers the framework needs to keep track of whether window\nresize events were triggered by the opening or closing of a virtual keyboard\nso that it can prevent unnecessary re-layout of the viewport.  It does this\nby detecting resize events in the horizontal direction that occur immediately\nafter an editable element is focused or blurred.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"100","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-minKeyboardHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"This property indicates a minimum threshold of vertical resize movement for\nvirtual keyboard detection. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"useDelegatedEvents","autodetected":{"inheritdoc":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":784}],"doc":"<p>True to globally disable the delegated event system.  The results of\nsetting this to false are unpredictable since the Gesture publisher relies\non delegated events in order to work correctly.  Disabling delegated events\nmay cause Gestures to function incorrectly or to stop working completely.\nUse at your own risk!</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-useDelegatedEvents","owner":"Ext.dom.Element","overrides":null,"short_doc":"True to globally disable the delegated event system. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"validNodeTypes","autodetected":{"inheritdoc":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":797}],"doc":"<p>The list of valid nodeTypes that are allowed to be wrapped</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{1: 1, 9: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-validNodeTypes","owner":"Ext.dom.Element","overrides":null,"short_doc":"The list of valid nodeTypes that are allowed to be wrapped ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"method","name":"constructor","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":606}],"doc":"<p>Creates new Element directly by passing an id or the HTMLElement.  This\nconstructor should not be called directly.  Always use <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get()</a>\nor <a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext#fly()</a> instead.</p>\n\n<p>In older versions of Ext JS and Sencha Touch this constructor checked to see if\nthere was already an instance of this element in the cache and if so, returned\nthe same instance. As of version 5 this behavior has been removed in order to\navoid a redundant cache lookup since the most common path is for the Element\nconstructor to be called from <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get()</a>, which has already\nchecked for a cache entry.</p>\n\n<p>Correct way of creating a new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or retrieving it from the cache):</p>\n\n<pre><code>var el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('foo'); // by id\n\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(document.getElementById('foo')); // by DOM reference\n</code></pre>\n\n<p>Incorrect way of creating a new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n\n<pre><code>var el = new <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>('foo');\n</code></pre>\n\n<p>For quick and easy access to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> methods use a flyweight:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('foo').addCls('foo-hovered');\n</code></pre>\n\n<p>This simply attaches the DOM node with id='foo' to the global flyweight Element\ninstance to avoid allocating an extra <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instance.  If, however,\nthe Element instance has already been cached by a previous call to <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(),\nthen <a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>() will return the cached Element instance.  For more info see\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement","name":"dom","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["generateAutoId"],"readonly":null,"required":null,"template":null,"id":"method-constructor","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates new Element directly by passing an id or the HTMLElement. ...","html_type":null},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Adds declarative listeners as nested arrays of listener objects. ...","html_type":null},{"tagname":"method","name":"_getPublisher","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6962}],"doc":"<p>Returns the publisher for a given event</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"noTranslate","doc":"<p><code>true</code> if the event is a non translated event</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.event.publisher.Publisher","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.event.publisher.Publisher\" rel=\"Ext.event.publisher.Publisher\" class=\"docClass\">Ext.event.publisher.Publisher</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-_getPublisher","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the publisher for a given event ...","html_type":null},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onAfter. ...","html_type":null},{"tagname":"method","name":"addAnimation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8133}],"doc":"<p>Starts a custom animation on this Element.</p>\n\n<p>The following properties may be specified in <code>from</code>, <code>to</code>, and <code>keyframe</code> objects:</p>\n\n<ul>\n<li><code>x</code> - The page X position in pixels.</li>\n<li><code>y</code> - The page Y position in pixels</li>\n<li><code>left</code> - The element's CSS <code>left</code> value. Units must be supplied.</li>\n<li><code>top</code> - The element's CSS <code>top</code> value. Units must be supplied.</li>\n<li><code>width</code> - The element's CSS <code>width</code> value. Units must be supplied.</li>\n<li><code>height</code> - The element's CSS <code>height</code> value. Units must be supplied.</li>\n<li><code>scrollLeft</code> - The element's <code>scrollLeft</code> value.</li>\n<li><code>scrollTop</code> - The element's <code>scrollTop</code> value.</li>\n<li><code>opacity</code> - The element's <code>opacity</code> value (between <code>0</code> and <code>1</code>).</li>\n</ul>\n\n\n<p><strong>Be aware</strong> that animating an Element which is being used by an Ext Component\nwithout in some way informing the Component about the changed element state will\nresult in incorrect Component behaviour. This is because the Component will be\nusing the old state of the element. To avoid this problem, it is now possible\nto directly animate certain properties of Components.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>Configuration for <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>.\nNote that the <a href=\"#!/api/Ext.fx.Anim-cfg-to\" rel=\"Ext.fx.Anim-cfg-to\" class=\"docClass\">to</a> config is required.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.fx.Anim","name":"return","doc":"<p>The new animation.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["anim"],"readonly":null,"required":null,"template":null,"id":"method-addAnimation","owner":"Ext.dom.Element","overrides":null,"short_doc":"Starts a custom animation on this Element. ...","html_type":null},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onBefore. ...","html_type":null},{"tagname":"method","name":"addCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1870}],"doc":"<p>Adds the given CSS class(es) to this Element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"names","doc":"<p>The CSS classes to add separated by space,\nor an array of classes</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>Prefix to prepend to each class. The separator <code>-</code> will be\nappended to the prefix.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"suffix","doc":"<p>Suffix to append to each class. The separator <code>-</code> will be\nprepended to the suffix.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["replaceCls"],"readonly":null,"required":null,"template":null,"id":"method-addCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Adds the given CSS class(es) to this Element. ...","html_type":null},{"tagname":"method","name":"addClsOnClick","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1884}],"doc":"<p>Sets up event handlers to add and remove a css class when the mouse is down and then up\non this element (a click effect)</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class to add</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"testFn","doc":"<p>A test function to execute before adding the class. The passed\nparameter will be the Element instance. If this functions returns false, the class\nwill not be added.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to execute the testFn in.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","on","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-addClsOnClick","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets up event handlers to add and remove a css class when the mouse is down and then up\non this element (a click effect) ...","html_type":null},{"tagname":"method","name":"addClsOnFocus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1919}],"doc":"<p>Sets up event handlers to add and remove a css class when this element has the focus</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class to add</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"testFn","doc":"<p>A test function to execute before adding the class. The passed\nparameter will be the Element instance. If this functions returns false, the class\nwill not be added.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to execute the testFn in.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","on","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-addClsOnFocus","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets up event handlers to add and remove a css class when this element has the focus ...","html_type":null},{"tagname":"method","name":"addClsOnOver","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1950}],"doc":"<p>Sets up event handlers to add and remove a css class when the mouse is over this element</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The class to add</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"testFn","doc":"<p>A test function to execute before adding the class. The passed\nparameter will be the Element instance. If this functions returns false, the class\nwill not be added.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope to execute the testFn in.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","hover","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-addClsOnOver","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets up event handlers to add and remove a css class when the mouse is over this element ...","html_type":null},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"addKeyListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7937}],"doc":"<p>Convenience method for constructing a KeyMap</p>\n","params":[{"tagname":"params","type":"String/Number/Number[]/Object","name":"key","doc":"<p>Either a string with the keys to listen for,\nthe numeric key code, array of key codes or an object with the following options:</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Number/Array","name":"key","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"shift","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"ctrl","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"alt","doc":"\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The function to call</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the specified function\nis executed. Defaults to this Element.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.KeyMap","name":"return","doc":"<p>The KeyMap created</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addKeyListener","owner":"Ext.dom.Element","overrides":null,"short_doc":"Convenience method for constructing a KeyMap ...","html_type":null},{"tagname":"method","name":"addKeyMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7976}],"doc":"<p>Creates a KeyMap for this element</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>The KeyMap config. See <a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a> for more details</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.KeyMap","name":"return","doc":"<p>The KeyMap created</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.KeyMap\" rel=\"Ext.util.KeyMap\" class=\"docClass\">Ext.util.KeyMap</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addKeyMap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates a KeyMap for this element ...","html_type":null},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener"],"readonly":null,"required":null,"template":null,"id":"method-addListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addManagedListener"],"readonly":null,"required":null,"template":null,"id":"method-addManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o...","html_type":null},{"tagname":"method","name":"adjustDirect2DDimension","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7987}],"doc":"<p>Returns the fractional portion of this element's measurement in the given dimension.\n(IE9+ only)</p>\n","params":[{"tagname":null,"type":"Object","name":"dimension","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-adjustDirect2DDimension","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the fractional portion of this element's measurement in the given dimension. ...","html_type":null},{"tagname":"method","name":"adjustForConstraints","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":176}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"xy","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"parent","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConstrainVector"],"readonly":null,"required":null,"template":null,"id":"method-adjustForConstraints","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"afterAnimate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8027}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-afterAnimate","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"afterSetPosition","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":19}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":19,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-afterSetPosition","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"alignTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":190}],"doc":"<p>Aligns the element with another element relative to the specified anchor points. If\nthe other element is the document it aligns it to the viewport. The position\nparameter is optional, and can be specified in any one of the following formats:</p>\n\n<ul>\n<li><strong>Blank</strong>: Defaults to aligning the element's top-left corner to the target's\nbottom-left corner (\"tl-bl\").</li>\n<li><strong>Two anchors</strong>: If two values from the table below are passed separated by a dash,\nthe first value is used as the element's anchor point, and the second value is\nused as the target's anchor point.</li>\n<li><strong>Two edge/offset descriptors:</strong> An edge/offset descriptor is an edge initial\n(<code>t</code>/<code>r</code>/<code>b</code>/<code>l</code>) followed by a percentage along that side. This describes a\npoint to align with a similar point in the target. So <code>'t0-b0'</code> would be\nthe same as <code>'tl-bl'</code>, <code>'l0-r50'</code> would place the top left corner of this item\nhalfway down the right edge of the target item. This allows more flexibility\nand also describes which two edges are considered adjacent when positioning a tip pointer.</li>\n</ul>\n\n\n<p>Following are all of the supported predefined anchor positions:</p>\n\n<pre><code> Value  Description\n -----  -----------------------------\n tl     The top left corner\n t      The center of the top edge\n tr     The top right corner\n l      The center of the left edge\n c      The center\n r      The center of the right edge\n bl     The bottom left corner\n b      The center of the bottom edge\n br     The bottom right corner\n</code></pre>\n\n<p>You can put a '?' at the end of the alignment string to constrain the positioned element\nto the <a href=\"#!/api/Ext.container.Viewport\" rel=\"Ext.container.Viewport\" class=\"docClass\">Viewport</a>. The element will attempt to align as specified, but\nthe position will be adjusted to constrain to the viewport if necessary. Note that\nthe element being aligned might be swapped to align to a different position than that\nspecified in order to enforce the viewport constraints.</p>\n\n<p>Example Usage:</p>\n\n<pre><code>// align el to other-el using the default positioning\n// (\"tl-bl\", non-constrained)\nel.alignTo(\"other-el\");\n\n// align the top left corner of el with the top right corner of other-el\n// (constrained to viewport)\nel.alignTo(\"other-el\", \"tl-tr?\");\n\n// align the bottom right corner of el with the center left edge of other-el\nel.alignTo(\"other-el\", \"br-l?\");\n\n// align the center of el with the bottom left corner of other-el and\n// adjust the x position by -6 pixels (and the y position by 0)\nel.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n\n// align the 25% point on the bottom edge of this el\n// with the 75% point on the top edge of other-el.\nel.alignTo(\"other-el\", 'b25-t75');\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"element","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"position","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]\nElement animation config object</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"animate","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAlignToXY","setXY"],"readonly":null,"required":null,"template":null,"id":"method-alignTo","owner":"Ext.util.Positionable","overrides":[{"name":"alignTo","owner":"Ext.util.Floating","link":"<a href=\"#!/api/Ext.util.Floating-method-alignTo\" rel=\"Ext.util.Floating-method-alignTo\" class=\"docClass\">Ext.util.Floating.alignTo</a>"}],"short_doc":"Aligns the element with another element relative to the specified anchor points. ...","html_type":null},{"tagname":"method","name":"anchorAnimX","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8038}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"anchor","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-anchorAnimX","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"anchorTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":18}],"doc":"<p>Anchors an element to another element and realigns it when the window is resized.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"anchorToEl","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"alignment","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean/Number","name":"monitorScroll","doc":"<p>True to monitor body scroll and\nreposition. If this parameter is a number, it is used as the buffer delay in\nmilliseconds.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":"50","optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to call after the animation finishes</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAnchor","removeAnchor"],"readonly":null,"required":null,"template":null,"id":"method-anchorTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Anchors an element to another element and realigns it when the window is resized. ...","html_type":null},{"tagname":"method","name":"anim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8047}],"doc":"<p>process the passed fx configuration.</p>\n","params":[{"tagname":null,"type":"Object","name":"config","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["stopAnimation"],"readonly":null,"required":null,"template":null,"id":"method-anim","owner":"Ext.dom.Element","overrides":null,"short_doc":"process the passed fx configuration. ...","html_type":null},{"tagname":"method","name":"animate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8119}],"doc":"<p>Calls <code><a href=\"#!/api/Ext.dom.Element-method-addAnimation\" rel=\"Ext.dom.Element-method-addAnimation\" class=\"docClass\">addAnimation</a></code> and returns this Element (for call chaining). For\ndetails, see <code><a href=\"#!/api/Ext.dom.Element-method-addAnimation\" rel=\"Ext.dom.Element-method-addAnimation\" class=\"docClass\">addAnimation</a></code>.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>Configuration for <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>.\nNote that the <a href=\"#!/api/Ext.fx.Anim-cfg-to\" rel=\"Ext.fx.Anim-cfg-to\" class=\"docClass\">to</a> config is required.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addAnimation"],"readonly":null,"required":null,"template":null,"id":"method-animate","owner":"Ext.dom.Element","overrides":null,"short_doc":"Calls addAnimation and returns this Element (for call chaining). ...","html_type":null},{"tagname":"method","name":"appendChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2041}],"doc":"<p>Appends the passed element(s) to this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The id or element to insert\nor a DomHelper config</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return the raw DOM element instead\nof <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The inserted <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createChild"],"readonly":null,"required":null,"template":null,"id":"method-appendChild","owner":"Ext.dom.Element","overrides":null,"short_doc":"Appends the passed element(s) to this element ...","html_type":null},{"tagname":"method","name":"appendTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2080}],"doc":"<p>Appends this element to the passed element.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The new parent element.\nThe id of the node, a DOM Node or an existing Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-appendTo","owner":"Ext.dom.Element","overrides":null,"short_doc":"Appends this element to the passed element. ...","html_type":null},{"tagname":"method","name":"applyStyles","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2092}],"doc":"<p>More flexible version of <a href=\"#!/api/Ext.dom.Element-method-setStyle\" rel=\"Ext.dom.Element-method-setStyle\" class=\"docClass\">setStyle</a> for setting style properties.</p>\n\n<p>Styles in object form should be a valid DOM element style property.\n<a href=\"http://www.w3schools.com/jsref/dom_obj_style.asp\">Valid style property names</a>\n(<em>along with the supported CSS version for each</em>)</p>\n\n<pre><code>// &lt;div id=\"my-el\"&gt;Phineas Flynn&lt;/div&gt;\n\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('my-el');\n\nel.applyStyles('color: white;');\n\nel.applyStyles({\n    fontWeight: 'bold',\n    backgroundColor: 'gray',\n    padding: '10px'\n});\n\nel.applyStyles(function () {\n    if (name.initialConfig.html === 'Phineas Flynn') {\n        return 'font-style: italic;';\n        // OR return { fontStyle: 'italic' };\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object/Function","name":"styles","doc":"<p>A style specification string, e.g.\n\"width:100px\", or object in the form <code>{width:\"100px\"}</code>, or a function which returns\nsuch a specification.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setStyle"],"readonly":null,"required":null,"template":null,"id":"method-applyStyles","owner":"Ext.dom.Element","overrides":null,"short_doc":"More flexible version of setStyle for setting style properties. ...","html_type":null},{"tagname":"method","name":"beforeAnimate","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8200}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-beforeAnimate","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"blur","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2141}],"doc":"<p>Tries to blur the element. Any exceptions are caught and ignored.</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["focus"],"readonly":null,"required":null,"template":null,"id":"method-blur","owner":"Ext.dom.Element","overrides":null,"short_doc":"Tries to blur the element. ...","html_type":null},{"tagname":"method","name":"boxWrap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8211}],"doc":"<p>Wraps the specified element with a special 9 element markup/CSS block that renders\nby default as a gray container with a gradient background, rounded corners\nand a 4-way shadow.</p>\n\n<p>This special markup is used throughout Ext when box wrapping elements\n(<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>, <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a> when\n<a href=\"#!/api/Ext.panel.Panel-cfg-frame\" rel=\"Ext.panel.Panel-cfg-frame\" class=\"docClass\">frame=true</a>, <a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>).\nThe markup is of this form:</p>\n\n<pre><code>&lt;div class=\"{0}-tl\"&gt;&lt;div class=\"{0}-tr\"&gt;&lt;div class=\"{0}-tc\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;div class=\"{0}-ml\"&gt;&lt;div class=\"{0}-mr\"&gt;&lt;div class=\"{0}-mc\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n&lt;div class=\"{0}-bl\"&gt;&lt;div class=\"{0}-br\"&gt;&lt;div class=\"{0}-bc\"&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Example usage:</p>\n\n<pre><code>// Basic box wrap\n<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"foo\").boxWrap();\n\n// You can also add a custom class and use CSS inheritance rules to customize\n// the box look.\n// 'x-box-blue' is a built-in alternative -- look at the related CSS definitions\n// as an example for how to create a custom box wrap style.\n<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"foo\").boxWrap().addCls(\"x-box-blue\");\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"cls","doc":"<p>A base CSS class to apply to the containing wrapper\nelement. Note that there are a number of CSS rules that are dependent on this name\nto make the overall effect work, so if you supply an alternate base class, make sure\nyou also supply all of the necessary rules.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'x-box'","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The outermost wrapping element of the created box structure.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["insertHtml"],"readonly":null,"required":null,"template":null,"id":"method-boxWrap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Wraps the specified element with a special 9 element markup/CSS block that renders\nby default as a gray container wit...","html_type":null},{"tagname":"method","name":"cacheScrollValues","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2166}],"doc":"<p>When an element is moved around in the DOM, or is hidden using <code>display:none</code>, it loses\nlayout, and therefore all scroll positions of all descendant elements are lost.</p>\n\n<p>This function caches them, and returns a function, which when run will restore the cached\npositions. In the following example, the Panel is moved from one Container to another\nwhich will cause it to lose all scroll positions:</p>\n\n<pre><code>var restoreScroll = myPanel.el.cacheScrollValues();\nmyOtherContainer.add(myPanel);\nrestoreScroll();\n</code></pre>\n","params":[],"return":{"type":"Function","name":"return","doc":"<p>A function which will restore all descendant elements of this Element\nto their scroll positions recorded when this function was executed. Be aware that the\nreturned function is a closure which has captured the scope of <code>cacheScrollValues</code>, so\ntake care to dereference it as soon as not needed - if is it is a <code>var</code> it will drop out\nof scope, and the reference will be freed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":null,"id":"method-cacheScrollValues","owner":"Ext.dom.Element","overrides":null,"short_doc":"When an element is moved around in the DOM, or is hidden using display:none, it loses\nlayout, and therefore all scrol...","html_type":null},{"tagname":"method","name":"calculateAnchorXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":264}],"doc":"<p>Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Number","name":"extraX","doc":"<p>value to be added to the x coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"extraY","doc":"<p>value to be added to the y coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-calculateAnchorXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values. ...","html_type":null},{"tagname":"method","name":"calculateConstrainedPosition","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":472}],"doc":"<p>Calculates the new [x,y] position to move this Positionable into a constrain region.</p>\n\n<p>By default, this Positionable is constrained to be within the container it was added to,\nor the element it was rendered to.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>An alternative constraint may be passed.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Ext.util.Region","name":"constrainTo","doc":"<p>The Element\nor <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this Component is to be constrained.\nDefaults to the element into which this Positionable was rendered, or this Component's\n<a href=\"#!/api/Ext.Component-cfg-constrainTo\" rel=\"Ext.Component-cfg-constrainTo\" class=\"docClass\">Ext.Component.constrainTo</a>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedPosition","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to coerce into constraints instead of using this Positionable's current position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>The proposedPosition is local <em>(relative to floatParent\nif a floating Component)</em></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedSize","doc":"<p>A proposed <code>[width, height]</code> size to use when calculating\nconstraints instead of using this Positionable's current size.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, the new <code>[X, Y]</code> position\nwithin constraints if possible, giving priority to keeping the top and left edge\nin the constrain region. Otherwise, <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getPosition","reverseTranslateXY"],"readonly":null,"required":null,"template":null,"id":"method-calculateConstrainedPosition","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Calculates the new [x,y] position to move this Positionable into a constrain region. ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"o","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"center","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2217}],"doc":"<p>Centers the Element in either the viewport, or another Element.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"centerIn","doc":"<p>element in\nwhich to center the element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["alignTo"],"readonly":null,"required":null,"template":null,"id":"method-center","owner":"Ext.dom.Element","overrides":null,"short_doc":"Centers the Element in either the viewport, or another Element. ...","html_type":null},{"tagname":"method","name":"child","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2229}],"doc":"<p>Selects a single <em>direct</em> child based on the passed CSS selector (the selector\nshould not contain an id).</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return the DOM node instead of\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or DOM node\nif <code>returnDom</code> is <code>true</code>)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["selectNode"],"readonly":null,"required":null,"template":null,"id":"method-child","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects a single direct child based on the passed CSS selector (the selector\nshould not contain an id). ...","html_type":null},{"tagname":"method","name":"clean","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8257}],"doc":"<p>Removes Empty, or whitespace filled text nodes. Combines adjacent text nodes.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"forceReclean","doc":"<p>By default the element keeps track if it has been\ncleaned already so you can call this over and over. However, if you update the element\nand need to force a re-clean, you can pass true.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-clean","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes Empty, or whitespace filled text nodes. ...","html_type":null},{"tagname":"method","name":"clearClip","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":1093}],"doc":"<p>Clears any clipping applied to this component by <a href=\"#!/api/Ext.util.Positionable-method-clipTo\" rel=\"Ext.util.Positionable-method-clipTo\" class=\"docClass\">clipTo</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clearClip","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Clears any clipping applied to this component by clipTo. ...","html_type":null},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1394}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearManagedListeners"],"readonly":null,"required":null,"template":null,"id":"method-clearListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all managed listeners for this object. ...","html_type":null},{"tagname":"method","name":"clearOpacity","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8382}],"doc":"<p>Clears any opacity settings from this element. Required in some cases for IE.</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setOpacity"],"readonly":null,"required":null,"template":null,"id":"method-clearOpacity","owner":"Ext.dom.Element","overrides":null,"short_doc":"Clears any opacity settings from this element. ...","html_type":null},{"tagname":"method","name":"clearPositioning","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8332}],"doc":"<p>Clears positioning back to the default when the document was loaded.</p>\n","params":[{"tagname":"params","type":"String","name":"value","doc":"<p>The value to use for the left, right, top, bottom.\nYou could use 'auto'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"''","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setStyle"],"readonly":null,"required":null,"template":null,"id":"method-clearPositioning","owner":"Ext.dom.Element","overrides":null,"short_doc":"Clears positioning back to the default when the document was loaded. ...","html_type":null},{"tagname":"method","name":"clip","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8390}],"doc":"<p>Store the current overflow setting and clip overflow on the element - use <a href=\"#!/api/Ext.dom.Element-method-unclip\" rel=\"Ext.dom.Element-method-unclip\" class=\"docClass\">unclip</a>\nto remove</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","getStyle","setStyle"],"readonly":null,"required":null,"template":null,"id":"method-clip","owner":"Ext.dom.Element","overrides":null,"short_doc":"Store the current overflow setting and clip overflow on the element - use unclip\nto remove ...","html_type":null},{"tagname":"method","name":"clipTo","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":972}],"doc":"<p>Clips this Component/Element to fit within the passed element's or component's view area</p>\n","params":[{"tagname":"params","type":"Ext.Component/Ext.Element/Ext.util.Region","name":"clippingEl","doc":"<p>The Component or element\nor Region which should clip this element even if this element is outside the bounds\nof that region.</p>\n","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"sides","doc":"<p>The sides to clip 1=top, 2=right, 4=bottom, 8=left.</p>\n\n<p>This is to support components being clipped to their logical owner, such as a grid row\neditor when the row being edited scrolls out of sight. The editor should be clipped\nat the edge of the scrolling element.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clipTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Clips this Component/Element to fit within the passed element's or component's view area ...","html_type":null},{"tagname":"method","name":"clone","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2255}],"doc":"<p>Clone this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p><code>true</code> if the children of the node should also be cloned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return the DOM node instead of\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The newly cloned <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or DOM node\nif <code>returnDom</code> is <code>true</code>).</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-clone","owner":"Ext.dom.Element","overrides":null,"short_doc":"Clone this element. ...","html_type":null},{"tagname":"method","name":"collect","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2673}],"doc":"<p>Removes the element from the cache and removes listeners.\nUsed for cleaning up orphaned elements after they have been removed from the dom.\nSimilar to <a href=\"#!/api/Ext.dom.Element-method-destroy\" rel=\"Ext.dom.Element-method-destroy\" class=\"docClass\">destroy</a> except it assumes the element has already been\nremoved from the dom.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-collect","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes the element from the cache and removes listeners. ...","html_type":null},{"tagname":"method","name":"constrainBox","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":854}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"box","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["calculateConstrainedPosition"],"readonly":null,"required":null,"template":null,"id":"method-constrainBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"contains","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2308}],"doc":"<p>Returns <code>true</code> if this element is an ancestor of the passed element, or is\nthe element.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"element","doc":"<p>The dom element,\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>, or id (string) of the dom element to check.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if this element is an ancestor of el or the el itself, else false</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isAncestor"],"readonly":null,"required":null,"template":null,"id":"method-contains","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element is an ancestor of the passed element, or is\nthe element. ...","html_type":null},{"tagname":"method","name":"convertPositionSpec","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":291}],"doc":"<p>This function converts a legacy alignment string such as 't-b' into a\npair of edge, offset objects which describe the alignment points of\nthe two regions.</p>\n\n<p>So tl-br becomes {myEdge:'t', offset:0}, {otherEdge:'b', offset:100}</p>\n\n<p>This not only allows more flexibility in the alignment possibilities,\nbut it also resolves any ambiguity as to chich two edges are desired\nto be adjacent if an anchor pointer is required.</p>\n","params":[{"tagname":null,"type":"Object","name":"posSpec","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-convertPositionSpec","owner":"Ext.util.Positionable","overrides":null,"short_doc":"This function converts a legacy alignment string such as 't-b' into a\npair of edge, offset objects which describe the...","html_type":null},{"tagname":"method","name":"createChild","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2285}],"doc":"<p>Creates the passed DomHelper config and appends it to this element or optionally\ninserts it before the passed child element.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>DomHelper element config object.  If no tag is specified\n(e.g., {tag:'input'}) then a div will be automatically generated with the specified\nattributes.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"insertBefore","doc":"<p>a child element of this element</p>\n","html_type":"HTMLElement","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>true to return the dom node instead of creating\nan Element</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The new child element (or HTMLElement if\n<em>returnDom</em> is <em>true</em>)</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-createChild","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates the passed DomHelper config and appends it to this element or optionally\ninserts it before the passed child e...","html_type":null},{"tagname":"method","name":"createProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8351}],"doc":"<p>Creates a proxy element of this element</p>\n","params":[{"tagname":"params","type":"String/Object","name":"config","doc":"<p>The class name of the proxy element or a DomHelper config\nobject</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/HTMLElement","name":"renderTo","doc":"<p>The element or element id to render the proxy to.\nDefaults to: document.body.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"matchBox","doc":"<p>True to align and size the proxy to this element now.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The new proxy element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBox"],"readonly":null,"required":null,"template":null,"id":"method-createProxy","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates a proxy element of this element ...","html_type":null},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"beginEnd","doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2329}],"doc":"<p>Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listeners.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["collect","destroyAllRipples"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.dom.Element","overrides":[{"name":"destroy","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>"},{"name":"destroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"}],"short_doc":"Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listen...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"disableShadow","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2397}],"doc":"<p>Disables the shadow element created by <a href=\"#!/api/Ext.dom.Element-method-enableShadow\" rel=\"Ext.dom.Element-method-enableShadow\" class=\"docClass\">enableShadow</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-disableShadow","owner":"Ext.dom.Element","overrides":null,"short_doc":"Disables the shadow element created by enableShadow. ...","html_type":null},{"tagname":"method","name":"disableShim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2410}],"doc":"<p>Disables the shim element created by <a href=\"#!/api/Ext.dom.Element-method-enableShim\" rel=\"Ext.dom.Element-method-enableShim\" class=\"docClass\">enableShim</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-disableShim","owner":"Ext.dom.Element","overrides":null,"short_doc":"Disables the shim element created by enableShim. ...","html_type":null},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":857}],"doc":"<p>Continue to fire event.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleParent"],"readonly":null,"required":null,"template":null,"id":"method-doFireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Continue to fire event. ...","html_type":null},{"tagname":"method","name":"doReplaceWith","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2423}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"element","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-doReplaceWith","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"doScrollIntoView","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2432}],"doc":"<p>A scrollIntoView implementation for scrollIntoView/rtlScrollIntoView to call\nafter current scrollX has been determined.</p>\n","params":[{"tagname":null,"type":"Object","name":"container","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"hscroll","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"animate","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"highlight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"getScrollX","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scrollTo","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScrollIntoViewXY"],"readonly":null,"required":null,"template":null,"id":"method-doScrollIntoView","owner":"Ext.dom.Element","overrides":null,"short_doc":"A scrollIntoView implementation for scrollIntoView/rtlScrollIntoView to call\nafter current scrollX has been determined. ...","html_type":null},{"tagname":"method","name":"down","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2476}],"doc":"<p>Selects a single child at any depth below this element based on the passed\nCSS selector (the selector should not contain an id).</p>\n\n<p>Use <a href=\"#!/api/Ext.dom.Element-method-getById\" rel=\"Ext.dom.Element-method-getById\" class=\"docClass\">getById</a> if you need to get a reference to a child element via id.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return the DOM node instead of\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or DOM node\nif <code>returnDom</code> is <code>true</code>)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["selectNode"],"readonly":null,"required":null,"template":null,"id":"method-down","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects a single child at any depth below this element based on the passed\nCSS selector (the selector should not cont...","html_type":null},{"tagname":"method","name":"empty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8305}],"doc":"<p>Empties this element. Removes all child nodes.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-empty","owner":"Ext.dom.Element","overrides":null,"short_doc":"Empties this element. ...","html_type":null},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-enableBubble","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...","html_type":null},{"tagname":"method","name":"enableDisplayMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8471}],"doc":"<p>Convenience method for setVisibilityMode(Element.DISPLAY).</p>\n","params":[{"tagname":"params","type":"String","name":"display","doc":"<p>What to set display to when visible</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","setVisibilityMode"],"readonly":null,"required":null,"template":null,"id":"method-enableDisplayMode","owner":"Ext.dom.Element","overrides":null,"short_doc":"Convenience method for setVisibilityMode(Element.DISPLAY). ...","html_type":null},{"tagname":"method","name":"enableShadow","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2492}],"doc":"<p>Enables a shadow element that will always display behind this element</p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Configuration options for the shadow</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Number","name":"offset","doc":"<p>Number of pixels to offset the shadow</p>\n","default":"4","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"mode","doc":"<p>The shadow display mode.  Supports the following\noptions:</p>\n\n<pre><code>- `'sides'`: Shadow displays on both sides and bottom only\n- `'frame'`: Shadow displays equally on all four sides\n- `'drop'`: Traditional bottom-right drop shadow\n- `'bottom'`: Shadow is offset to the bottom\n</code></pre>\n","default":"'sides'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"animate","doc":"<p><code>true</code> to animate the shadow while\nthe element is animating.  By default the shadow will be hidden during animation.</p>\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]},{"tagname":"params","type":"Boolean","name":"isVisible","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isVisible"],"readonly":null,"required":null,"template":null,"id":"method-enableShadow","owner":"Ext.dom.Element","overrides":null,"short_doc":"Enables a shadow element that will always display behind this element ...","html_type":null},{"tagname":"method","name":"enableShim","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2536}],"doc":"<p>Enables an iframe shim for this element to keep windowed objects from\nshowing through.  The position, size, and visibility of the shim will be\nautomatically synchronized as the position, size, and visibility of this\nElement are changed.</p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Configuration options for the shim</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"isVisible","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Shim","name":"return","doc":"<p>The new Shim</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Shim\" rel=\"Ext.dom.Shim\" class=\"docClass\">Ext.dom.Shim</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isVisible"],"readonly":null,"required":null,"template":null,"id":"method-enableShim","owner":"Ext.dom.Element","overrides":null,"short_doc":"Enables an iframe shim for this element to keep windowed objects from\nshowing through. ...","html_type":null},{"tagname":"method","name":"fadeIn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8488}],"doc":"<p>Fade an element in (from transparent to opaque). The ending opacity can be specified\nusing the <code>opacity</code> config option. Usage:</p>\n\n<pre><code>// default: fade in from opacity 0 to 100%\nel.fadeIn();\n\n// custom: fade in from opacity 0 to 75% over 2 seconds\nel.fadeIn({ opacity: .75, duration: 2000});\n\n// common config options shown with default values\nel.fadeIn({\n    opacity: 1, //can be any value between 0 and 1 (e.g. .5)\n    easing: 'easeOut',\n    duration: 500\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate"],"readonly":null,"required":null,"template":null,"id":"method-fadeIn","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fade an element in (from transparent to opaque). ...","html_type":null},{"tagname":"method","name":"fadeOut","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8537}],"doc":"<p>Fade an element out (from opaque to transparent). The ending opacity can be specified\nusing the <code>opacity</code> config option. Note that IE may require <code>useDisplay: true</code> in order\nto redisplay correctly. Usage:</p>\n\n<pre><code>// default: fade out from the element's current opacity to 0\nel.fadeOut();\n\n// custom: fade out from the element's current opacity to 25% over 2 seconds\nel.fadeOut({ opacity: .25, duration: 2000});\n\n// common config options shown with default values\nel.fadeOut({\n    opacity: 0, //can be any value between 0 and 1 (e.g. .5)\n    easing: 'easeOut',\n    duration: 500,\n    remove: false,\n    useDisplay: false\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate"],"readonly":null,"required":null,"template":null,"id":"method-fadeOut","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fade an element out (from opaque to transparent). ...","html_type":null},{"tagname":"method","name":"findParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2575}],"doc":"<p>Looks at this node and then at parent nodes for a match of the passed simple selector.</p>\n","params":[{"tagname":"params","type":"String","name":"simpleSelector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a>\nfor information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","doc":"<p>The max depth to search as a number or an element which causes the upward traversal\nto stop and is <strong>not</strong> considered for inclusion as the result.\n(defaults to 50 || document.documentElement)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnEl","doc":"<p>True to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> object instead of\nDOM node</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The matching DOM node (or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>returnEl</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-findParent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Looks at this node and then at parent nodes for a match of the passed simple selector. ...","html_type":null},{"tagname":"method","name":"findParentNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2617}],"doc":"<p>Looks at parent nodes for a match of the passed simple selector.</p>\n","params":[{"tagname":"params","type":"String","name":"simpleSelector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a>\nfor information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","doc":"<p>The max depth to search as a number or an element which causes the upward traversal\nto stop and is <strong>not</strong> considered for inclusion as the result.\n(defaults to 50 || document.documentElement)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnEl","doc":"<p>True to return a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> object instead of\nDOM node</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The matching DOM node (or\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>returnEl</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-findParentNode","owner":"Ext.dom.Element","overrides":null,"short_doc":"Looks at parent nodes for a match of the passed simple selector. ...","html_type":null},{"tagname":"method","name":"findTabbableElements","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6613}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"options","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isTabbable"],"readonly":null,"required":null,"template":null,"id":"method-findTabbableElements","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'before'","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList...","html_type":null},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doFireEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameter list. ...","html_type":null},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"first","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2636}],"doc":"<p>Gets the first child, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Find the next sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return a raw DOM node instead of\nan <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The first child or null</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["matchNode"],"readonly":null,"required":null,"template":null,"id":"method-first","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the first child, skipping text nodes ...","html_type":null},{"tagname":"method","name":"fixDisplay","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8595}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_getDisplay","isStyle","setStyle"],"readonly":null,"required":null,"template":null,"id":"method-fixDisplay","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"focus","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2648}],"doc":"<p>Try to focus the element either immediately or after a timeout\nif <code>defer</code> argument is specified.</p>\n","params":[{"tagname":"params","type":"Number","name":"defer","doc":"<p>Milliseconds to defer the focus</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"HTMLElement","name":"dom","doc":"<p>(private)</p>\n","html_type":"HTMLElement","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-focus","owner":"Ext.dom.Element","overrides":null,"short_doc":"Try to focus the element either immediately or after a timeout\nif defer argument is specified. ...","html_type":null},{"tagname":"method","name":"focusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10751}],"doc":"<p>Checks whether this element can be focused.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p>True if the element is focusable</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.dom.Element-method-isFocusable\" rel=\"Ext.dom.Element-method-isFocusable\" class=\"docClass\">isFocusable</a> instead</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-focusable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks whether this element can be focused. ...","html_type":null},{"tagname":"method","name":"frame","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8611}],"doc":"<p>Shows a ripple of exploding, attenuating borders to draw attention to an Element. Usage:</p>\n\n<pre><code>// default: a single light blue ripple\nel.frame();\n\n// custom: 3 red ripples lasting 3 seconds total\nel.frame(\"#ff0000\", 3, { duration: 3000 });\n\n// common config options shown with default values\nel.frame(\"#C3DAF9\", 1, {\n    duration: 1000 // duration of each individual ripple.\n    // Note: Easing is not configurable and will be ignored if included\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"color","doc":"<p>The hex color value for the border.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'#C3DAF9'","optional":true,"properties":null},{"tagname":"params","type":"Number","name":"count","doc":"<p>The number of ripples to display.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":"1","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"obj","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> config options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","end"],"readonly":null,"required":null,"template":null,"id":"method-frame","owner":"Ext.dom.Element","overrides":null,"short_doc":"Shows a ripple of exploding, attenuating borders to draw attention to an Element. ...","html_type":null},{"tagname":"method","name":"getAlignToRegion","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":322}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"alignToEl","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"posSpec","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"offset","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"minHeight","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":322,"fires":[],"method_calls":["convertPositionSpec","getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAlignToRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getAlignToXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":307}],"doc":"<p>Gets the x,y coordinates to align this element with another element. See\n<a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for more info on the supported position values.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"alignToEl","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"position","doc":"<p>The position to align to</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"\"tl-bl?\"","optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"offsets","doc":"<p>Offset the positioning by [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y]</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAlignToRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAlignToXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Gets the x,y coordinates to align this element with another element. ...","html_type":null},{"tagname":"method","name":"getAnchor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":61}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":61,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnchor","owner":"Ext.util.Positionable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getAnchorToXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":26}],"doc":"<p>Gets the x,y coordinates of an element specified by the anchor position on the\nelement.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"el","doc":"<p>The element</p>\n\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.Component-method-alignTo\" rel=\"Ext.Component-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAnchorToXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Gets the x,y coordinates of an element specified by the anchor position on the\nelement. ...","html_type":null},{"tagname":"method","name":"getAnchorXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":375}],"doc":"<p>Gets the x,y coordinates specified by the anchor position on the element.</p>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'tl'","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"size","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getAnchorXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Gets the x,y coordinates specified by the anchor position on the element. ...","html_type":null},{"tagname":"method","name":"getAttribute","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2715}],"doc":"<p>Returns the value of an attribute from the element's underlying DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The attribute name.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"namespace","doc":"<p>The namespace in which to look for the attribute.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The attribute value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAttribute","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the value of an attribute from the element's underlying DOM node. ...","html_type":null},{"tagname":"method","name":"getAttributeNS","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10628}],"doc":"<p>Returns the value of a namespaced attribute from the element's underlying\nDOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"namespace","doc":"<p>The namespace in which to look for the attribute</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"name","doc":"<p>The attribute name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The attribute value</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-getAttribute\" rel=\"Ext.dom.Element-method-getAttribute\" class=\"docClass\">getAttribute</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAttribute"],"readonly":null,"required":null,"template":null,"id":"method-getAttributeNS","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the value of a namespaced attribute from the element's underlying\nDOM node. ...","html_type":null},{"tagname":"method","name":"getAttributes","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2729}],"doc":"<p>Returns an object containing a map of all attributes of this element's DOM node.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>Key/value pairs of attribute names and their values.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAttributes","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns an object containing a map of all attributes of this element's DOM node. ...","html_type":null},{"tagname":"method","name":"getBorderPadding","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":44}],"doc":"<p>Returns the size of the element's borders and padding.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>an object with the following numeric properties\n- beforeX\n- afterX\n- beforeY\n- afterY</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getBorderPadding","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the size of the element's borders and padding. ...","html_type":null},{"tagname":"method","name":"getBorderWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2803}],"doc":"<p>Gets the width of the border(s) for the specified side(s)</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Can be t, l, r, b or any combination of those to add\nmultiple values. For example, passing <code>'lr'</code> would get the border <strong>l</strong>eft\nwidth + the border <strong>r</strong>ight width.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The width of the sides passed added together</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addStyles"],"readonly":null,"required":null,"template":null,"id":"method-getBorderWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the width of the border(s) for the specified side(s) ...","html_type":null},{"tagname":"method","name":"getBorders","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2789}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getBorders","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getBottom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2748}],"doc":"<p>Gets the bottom Y coordinate of the element (element Y position + element height)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinate</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getHeight","getLocalY","getY"],"readonly":null,"required":null,"template":null,"id":"method-getBottom","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the bottom Y coordinate of the element (element Y position + element height) ...","html_type":null},{"tagname":"method","name":"getBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":408}],"doc":"<p>Return an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">setBox</a> to set another Element's size/location to match this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentBox","doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object in the format</p>\n","properties":[{"tagname":"return","type":"Number","name":"x","doc":"<p>The element's X position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"y","doc":"<p>The element's Y position.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"width","doc":"<p>The element's width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"<p>The element's height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"bottom","doc":"<p>The element's lower bound.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"right","doc":"<p>The element's rightmost bound.</p>\n\n<p>The returned object may also be addressed as an Array where index 0 contains the X\nposition and index 1 contains the Y position. The result may also be used for\n<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">setXY</a></p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBorderPadding","getHeight","getLocalXY","getWidth","getXY"],"readonly":null,"required":null,"template":null,"id":"method-getBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Return an object defining the area of this Element which can be passed to\nsetBox to set another Element's size/locati...","html_type":null},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","params":[],"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleTarget"],"readonly":null,"required":null,"template":null,"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Gets the bubbling parent for an Observable ...","html_type":null},{"tagname":"method","name":"getById","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2758}],"doc":"<p>Returns a child element of this element given its <code>id</code>.</p>\n","params":[{"tagname":"params","type":"String","name":"id","doc":"<p>The id of the desired child element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p>True to return the DOM element, false to return a\nwrapped Element object.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The child element (or HTMLElement if\n<em>asDom</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getById","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns a child element of this element given its id. ...","html_type":null},{"tagname":"method","name":"getCenterXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10641}],"doc":"<p>Calculates the x, y to center this element on the screen</p>\n","params":[],"return":{"type":"Number[]","name":"return","doc":"<p>The x, y values [x, y]</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.dom.Element-method-getAlignToXY\" rel=\"Ext.dom.Element-method-getAlignToXY\" class=\"docClass\">getAlignToXY</a> instead.\n    el.getAlignToXY(document, 'c-c');</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAlignToXY"],"readonly":null,"required":null,"template":null,"id":"method-getCenterXY","owner":"Ext.dom.Element","overrides":null,"short_doc":"Calculates the x, y to center this element on the screen ...","html_type":null},{"tagname":"method","name":"getClassMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2814}],"doc":"<p>Returns an object holding as properties this element's CSS classes. The object\ncan be modified to effect arbitrary class manipulations that won't immediately\ngo to the DOM. When completed, the DOM node can be updated by calling\n<a href=\"#!/api/Ext.dom.Element-method-setClassMap\" rel=\"Ext.dom.Element-method-setClassMap\" class=\"docClass\">setClassMap</a>. The values of the properties should either\nbe set to truthy values (such as <code>1</code> or <code>true</code>) or removed via <code>delete</code>.</p>\n\n<pre><code> var classes = el.getClassMap();\n\n // Add the 'foo' class:\n classes.foo = 1;\n\n // Remove the 'bar' class:\n delete classes.bar;\n\n // Update the DOM in one step:\n el.setClassMap(classes);\n</code></pre>\n","params":[{"tagname":"params","type":"Boolean","name":"clone","doc":"<p>(private) Pass <code>false</code> to return the underlying\n(readonly) object.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-getClassMap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns an object holding as properties this element's CSS classes. ...","html_type":null},{"tagname":"method","name":"getClientRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":706}],"doc":"<p>Returns a region object that defines the client area of this element.</p>\n\n<p>That is, the area <em>within</em> any scrollbars.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBox"],"readonly":null,"required":null,"template":null,"id":"method-getClientRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns a region object that defines the client area of this element. ...","html_type":null},{"tagname":"method","name":"getColor","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8706}],"doc":"<p>Return the CSS color for the specified CSS attribute. rgb, 3 digit (like <code>#fff</code>)\nand valid values are convert to standard 6 digit hex color.</p>\n","params":[{"tagname":"params","type":"String","name":"attr","doc":"<p>The css attribute</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"defaultValue","doc":"<p>The default value to use when a valid color isn't found</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>defaults to #. Use an empty string when working with\ncolor anims.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getColor","owner":"Ext.dom.Element","overrides":null,"short_doc":"Return the CSS color for the specified CSS attribute. ...","html_type":null},{"tagname":"method","name":"getComputedHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10652}],"doc":"<p>Returns either the offsetHeight or the height of this element based on CSS\nheight adjusted by padding or borders when needed to simulate offsetHeight\nwhen offsets aren't available. This may not work on display:none elements\nif a height has not been set using CSS.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.dom.Element-method-getHeight\" rel=\"Ext.dom.Element-method-getHeight\" class=\"docClass\">getHeight</a> instead</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getComputedHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns either the offsetHeight or the height of this element based on CSS\nheight adjusted by padding or borders when...","html_type":null},{"tagname":"method","name":"getComputedWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10666}],"doc":"<p>Returns either the offsetWidth or the width of this element based on CSS\nwidth adjusted by padding or borders when needed to simulate offsetWidth\nwhen offsets aren't available. This may not work on display:none elements\nif a width has not been set using CSS.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.dom.Element-method-getWidth\" rel=\"Ext.dom.Element-method-getWidth\" class=\"docClass\">getWidth</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getComputedWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns either the offsetWidth or the width of this element based on CSS\nwidth adjusted by padding or borders when ne...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getConstrainRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":547}],"doc":"<p>Returns the content region of this element for purposes of constraining or clipping floating\nchildren.  That is the region within the borders and scrollbars, but not within the padding.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getConstrainRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the content region of this element for purposes of constraining or clipping floating\nchildren. ...","html_type":null},{"tagname":"method","name":"getConstrainVector","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":580}],"doc":"<p>Returns the <code>[X, Y]</code> vector by which this Positionable's element must be translated to make\na best attempt to constrain within the passed constraint. Returns <code>false</code> if the element\ndoes not need to be moved.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>The constraint may either be an existing element into which the element is to be\nconstrained, or a <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this element is to be\nconstrained.</p>\n\n<p>By default, any extra shadow around the element is <strong>not</strong> included in the constrain\ncalculations - the edges of the element are used as the element bounds. To constrain\nthe shadow within the constrain region, set the <code>constrainShadow</code> property on this element\nto <code>true</code>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String/Ext.util.Region","name":"constrainTo","doc":"<p>The\nPositionable, HTMLElement, element id, or Region into which the element is to be\nconstrained.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedPosition","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to produce a vector for instead of using the element's current position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number[]","name":"proposedSize","doc":"<p>A proposed <code>[width, height]</code> size to constrain\ninstead of using the element's current size</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":true,"properties":null}],"return":{"type":"Number[]/Boolean","name":"return","doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, an <code>[X, Y]</code>\nvector by which this element must be translated. Otherwise, <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRegion"],"readonly":null,"required":null,"template":null,"id":"method-getConstrainVector","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the [X, Y] vector by which this Positionable's element must be translated to make\na best attempt to constrain...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getData","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2851}],"doc":"<p>Returns this element's data object. This object holds options that may be\nneeded by an <code><a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>()</code> call when there is no (cached) <code><a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></code>\ninstance tracked.</p>\n\n<p>This method will only return <code>null</code> if this instance has no associated DOM\nnode. If the DOM node does not have a data object, one will be created. To\navoid this creation, use peekData() instead.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"sync","doc":"<p>(private) Pass <code>false</code> to skip synchronization.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["synchronize"],"readonly":null,"required":null,"template":null,"id":"method-getData","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns this element's data object. ...","html_type":null},{"tagname":"method","name":"getHTML","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7040}],"doc":"<p>Returns the <code>innerHTML</code> of an Element or an empty string if the element's\ndom no longer exists.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-getHtml\" rel=\"Ext.dom.Element-method-getHtml\" class=\"docClass\">getHtml</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getHTML","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the innerHTML of an Element or an empty string if the element's\ndom no longer exists. ...","html_type":null},{"tagname":"method","name":"getHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2887}],"doc":"<p>Returns the offset height of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentHeight","doc":"<p><code>true</code> to get the height minus borders and padding.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"preciseHeight","doc":"<p><code>true</code> to get the precise height</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The element's height.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["adjustDirect2DDimension","getBorderWidth","getPadding","isStyle"],"readonly":null,"required":null,"template":null,"id":"method-getHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the offset height of the element. ...","html_type":null},{"tagname":"method","name":"getHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2941}],"doc":"<p>Returns the <code>innerHTML</code> of an Element or an empty string if the element's\ndom no longer exists.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getHtml","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the innerHTML of an Element or an empty string if the element's\ndom no longer exists. ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":2950}],"doc":"<p>Gets the left X coordinate</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of\npage coordinate</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLocalX","getX"],"readonly":null,"required":null,"template":null,"id":"method-getLeft","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the left X coordinate ...","html_type":null},{"tagname":"method","name":"getLoader","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8741}],"doc":"<p>Gets this element's <a href=\"#!/api/Ext.ElementLoader\" rel=\"Ext.ElementLoader\" class=\"docClass\">ElementLoader</a></p>\n","params":[],"return":{"type":"Ext.ElementLoader","name":"return","doc":"<p>The loader</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.ElementLoader\" rel=\"Ext.ElementLoader\" class=\"docClass\">Ext.ElementLoader</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-getLoader","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets this element's ElementLoader ...","html_type":null},{"tagname":"method","name":"getLocalX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":57}],"doc":"<p>Returns the x coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The local x coordinate</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalX","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the x coordinate of this element reletive to its offsetParent. ...","html_type":null},{"tagname":"method","name":"getLocalXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":65}],"doc":"<p>Returns the x and y coordinates of this element relative to its <code>offsetParent</code>.</p>\n","params":[],"return":{"type":"Number[]","name":"return","doc":"<p>The local XY position of the element</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the x and y coordinates of this element relative to its offsetParent. ...","html_type":null},{"tagname":"method","name":"getLocalY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":73}],"doc":"<p>Returns the y coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The local y coordinate</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLocalY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the y coordinate of this element reletive to its offsetParent. ...","html_type":null},{"tagname":"method","name":"getMargin","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3058}],"doc":"<p>Returns an object with properties top, left, right and bottom representing the margins\nof this element unless sides is passed, then it returns the calculated width\nof the sides (see <a href=\"#!/api/Ext.dom.Element-method-getPadding\" rel=\"Ext.dom.Element-method-getPadding\" class=\"docClass\">getPadding</a>).</p>\n","params":[{"tagname":"params","type":"String","name":"sides","doc":"<p>Any combination of 'l', 'r', 't', 'b' to get the sum\nof those sides.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getMargin","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns an object with properties top, left, right and bottom representing the margins\nof this element unless sides i...","html_type":null},{"tagname":"method","name":"getOffsetsTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":676}],"doc":"<p>Returns the offsets of this element from the passed element. The element must both\nbe part of the DOM tree and not have display:none to have page coordinates.</p>\n","params":[{"tagname":"params","type":"Ext.util.Positionable/HTMLElement/String","name":"offsetsTo","doc":"<p>The Positionable,\nHTMLElement, or element id to get get the offsets from.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>The XY page offsets (e.g. <code>[100, -200]</code>)</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-getOffsetsTo","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the offsets of this element from the passed element. ...","html_type":null},{"tagname":"method","name":"getPadding","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3096}],"doc":"<p>Gets the width of the padding(s) for the specified side(s).</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Can be t, l, r, b or any combination of those to add\nmultiple values. For example, passing <code>'lr'</code> would get the padding <strong>l</strong>eft +\nthe padding <strong>r</strong>ight.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The padding of the sides passed added together.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addStyles"],"readonly":null,"required":null,"template":null,"id":"method-getPadding","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the width of the padding(s) for the specified side(s). ...","html_type":null},{"tagname":"method","name":"getPageBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7047}],"doc":"<p>Returns an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">Ext.util.Positionable.setBox</a> to set another Element's size/location\nto match this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"getRegion","doc":"<p>If true an <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a> will be returned</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Ext.util.Region","name":"return","doc":"<p>box An object in the following format:</p>\n\n<pre><code>{\n    left: &lt;Element's X position&gt;,\n    top: &lt;Element's Y position&gt;,\n    width: &lt;Element's width&gt;,\n    height: &lt;Element's height&gt;,\n    bottom: &lt;Element's lower bound&gt;,\n    right: &lt;Element's rightmost bound&gt;\n}\n</code></pre>\n\n<p>The returned object may also be addressed as an Array where index 0 contains\nthe X position and index 1 contains the Y position. So the result may also be\nused for <a href=\"#!/api/Ext.dom.Element-method-setXY\" rel=\"Ext.dom.Element-method-setXY\" class=\"docClass\">setXY</a></p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>use <a href=\"#!/api/Ext.util.Positionable-method-getBox\" rel=\"Ext.util.Positionable-method-getBox\" class=\"docClass\">Ext.util.Positionable.getBox</a> to get a box\nobject, and <a href=\"#!/api/Ext.util.Positionable-method-getRegion\" rel=\"Ext.util.Positionable-method-getRegion\" class=\"docClass\">Ext.util.Positionable.getRegion</a> to get a\n<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-getPageBox","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns an object defining the area of this Element which can be passed to\nExt.util.Positionable.setBox to set anothe...","html_type":null},{"tagname":"method","name":"getPositioning","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8759}],"doc":"<p>Gets an object with all CSS positioning properties. Useful along with\n<code>setPositioning</code> to get snapshot before performing an update and then restoring\nthe element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"autoPx","doc":"<p>true to return pixel values for \"auto\" styles.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getPositioning","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets an object with all CSS positioning properties. ...","html_type":null},{"tagname":"method","name":"getRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":692}],"doc":"<p>Returns a region object that defines the area of this element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentBox","doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"local","doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBox"],"readonly":null,"required":null,"template":null,"id":"method-getRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns a region object that defines the area of this element. ...","html_type":null},{"tagname":"method","name":"getRight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3111}],"doc":"<p>Gets the right X coordinate of the element (element X position + element width)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinates</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLocalX","getWidth","getX"],"readonly":null,"required":null,"template":null,"id":"method-getRight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the right X coordinate of the element (element X position + element width) ...","html_type":null},{"tagname":"method","name":"getScroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3121}],"doc":"<p>Returns the current scroll position of the element.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>An object containing the scroll position in the format\n<code>{left: (scrollLeft), top: (scrollTop)}</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getScroll","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the current scroll position of the element. ...","html_type":null},{"tagname":"method","name":"getScrollIntoViewXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3156}],"doc":"<p>Gets the x and y coordinates needed for scrolling an element into view within\na given container.  These coordinates translate into the scrollLeft and scrollTop\npositions that will need to be set on an ancestor of the element in order to make\nthis element visible within its container.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.Element/Ext.util.Region","name":"container","doc":"<p>The container</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"scrollX","doc":"<p>The container's current scroll position on the x axis</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"scrollY","doc":"<p>The container's current scroll position on the y axis</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"align","doc":"<p>The alignment for the scroll.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"'start'/'center'/'end'","name":"x","doc":"<p>The alignment of the x scroll. If not\nspecified, the minimum will be done to make the element visible. The behavior\nis undefined if the request cannot be honored. If the alignment is suffixed with a ?,\nthe alignment will only take place if the item is not already in the visible area.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"'start'/'center'/'end'","properties":null},{"tagname":"params","type":"'start'/'center'/'end'","name":"y","doc":"<p>The alignment of the x scroll. If not\nspecified, the minimum will be done to make the element visible. The behavior\nis undefined if the request cannot be honored. If the alignment is suffixed with a ?,\nthe alignment will only take place if the item is not already in the visible area.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"'start'/'center'/'end'","properties":null}]}],"return":{"type":"Object","name":"return","doc":"<p>An object with \"x\" and \"y\" properties</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["calcScrollPos","getOffsetsTo"],"readonly":null,"required":null,"template":null,"id":"method-getScrollIntoViewXY","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the x and y coordinates needed for scrolling an element into view within\na given container. ...","html_type":null},{"tagname":"method","name":"getScrollLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3239}],"doc":"<p>Gets the left scroll position</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The left scroll position</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScroll"],"readonly":null,"required":null,"template":null,"id":"method-getScrollLeft","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the left scroll position ...","html_type":null},{"tagname":"method","name":"getScrollTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3254}],"doc":"<p>Gets the top scroll position</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>The top scroll position</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScroll"],"readonly":null,"required":null,"template":null,"id":"method-getScrollTop","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the top scroll position ...","html_type":null},{"tagname":"method","name":"getSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3269}],"doc":"<p>Returns the size of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentSize","doc":"<p><code>true</code> to get the width/size minus borders and padding.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object containing the element's size:</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getHeight","getWidth"],"readonly":null,"required":null,"template":null,"id":"method-getSize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the size of the element. ...","html_type":null},{"tagname":"method","name":"getStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3280}],"doc":"<p>Returns a named style property based on computed/currentStyle (primary) and\ninline-style if primary is not available.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"property","doc":"<p>The style property (or multiple property names\nin an array) whose value is returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"inline","doc":"<p>if <code>true</code> only inline styles will be returned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"String/Object","name":"return","doc":"<p>The current value of the style property for this element\n(or a hash of named style values if multiple property arguments are requested).</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStyle","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns a named style property based on computed/currentStyle (primary) and\ninline-style if primary is not available. ...","html_type":null},{"tagname":"method","name":"getStyleSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10680}],"doc":"<p>Returns the dimensions of the element available to lay content out in.</p>\n\n<p>getStyleSize utilizes prefers style sizing if present, otherwise it chooses\nthe larger of offsetHeight/clientHeight and offsetWidth/clientWidth.\nTo obtain the size excluding scrollbars, use getViewSize.</p>\n\n<p>Sizing of the document body is handled at the adapter level which handles\nspecial cases for IE and strict modes, etc.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>Object describing width and height.</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.dom.Element-method-getSize\" rel=\"Ext.dom.Element-method-getSize\" class=\"docClass\">getSize</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getHeight","getStyle","getWidth"],"readonly":null,"required":null,"template":null,"id":"method-getStyleSize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the dimensions of the element available to lay content out in. ...","html_type":null},{"tagname":"method","name":"getTextSelection","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3389}],"doc":"<p>Returns the selection range of an input element as an array of three values:</p>\n\n<pre><code> [ start, end, direction ]\n</code></pre>\n\n<p>These have the same meaning as the parameters to <code>selectText</code>.</p>\n","params":[],"return":{"type":"Array","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTextSelection","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the selection range of an input element as an array of three values:\n\n [ start, end, direction ]\n\n\nThese have...","html_type":null},{"tagname":"method","name":"getTextWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/TextMetrics.js","linenr":278}],"doc":"<p>Returns the width in pixels of the passed text, or the width of the text in this Element.</p>\n","params":[{"tagname":"params","type":"String","name":"text","doc":"<p>The text to measure. Defaults to the innerHTML of the element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"min","doc":"<p>The minumum value to return.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"max","doc":"<p>The maximum value to return.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The text width in pixels.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTextWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the width in pixels of the passed text, or the width of the text in this Element. ...","html_type":null},{"tagname":"method","name":"getTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3468}],"doc":"<p>Gets the top Y coordinate</p>\n","params":[{"tagname":"params","type":"Boolean","name":"local","doc":"<p>True to get the local css position instead of page\ncoordinates</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLocalY","getY"],"readonly":null,"required":null,"template":null,"id":"method-getTop","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the top Y coordinate ...","html_type":null},{"tagname":"method","name":"getTouchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3478}],"doc":"<p>Returns this element's touch action.  (see <a href=\"#!/api/Ext.dom.Element-method-setTouchAction\" rel=\"Ext.dom.Element-method-setTouchAction\" class=\"docClass\">setTouchAction</a>)</p>\n\n<p>The returned object is shared and should not be mutated.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getTouchAction","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns this element's touch action. ...","html_type":null},{"tagname":"method","name":"getValue","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3489}],"doc":"<p>Returns the value of the <code>value</code> attribute.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"asNumber","doc":"<p><code>true</code> to parse the value as a number.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String/Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getValue","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the value of the value attribute. ...","html_type":null},{"tagname":"method","name":"getViewRegion","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":754}],"doc":"<p>Returns the <strong>content</strong> region of this element. That is the region within the borders\nand padding.</p>\n","params":[],"return":{"type":"Ext.util.Region","name":"return","doc":"<p>A Region containing \"top, left, bottom, right\" member data.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBorderPadding","getHeight","getWidth","getXY"],"readonly":null,"required":null,"template":null,"id":"method-getViewRegion","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Returns the content region of this element. ...","html_type":null},{"tagname":"method","name":"getViewSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3500}],"doc":"<p>Returns the dimensions of the element available to lay content out in.  For\nmost elements this is the clientHeight/clientWidth.  If the element is\nthe document/document.body the window's innerHeight/innerWidth is returned</p>\n\n<p>If the element (or any ancestor element) has CSS style <code>display: none</code>, the\ndimensions will be zero.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>Object describing width and height.</p>\n","properties":[{"tagname":"return","type":"Number","name":"width","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"return","type":"Number","name":"height","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getViewSize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the dimensions of the element available to lay content out in. ...","html_type":null},{"tagname":"method","name":"getViewportTouchScale","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1343}],"doc":"<p>On touch-screen devices there may be an additional level of zooming\nthat occurs when the user performs a pinch or double-tap to zoom\ngesture.  This is separate from and in addition to the\ndevicePixelRatio.  We can detect it by comparing the width\nof the documentElement to window.innerWidth</p>\n","params":[{"tagname":null,"type":"Object","name":"forceRead","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getViewportTouchScale","owner":"Ext.dom.Element","overrides":null,"short_doc":"On touch-screen devices there may be an additional level of zooming\nthat occurs when the user performs a pinch or dou...","html_type":null},{"tagname":"method","name":"getWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3541}],"doc":"<p>Returns the offset width of the element.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"contentWidth","doc":"<p><code>true</code> to get the width minus borders and padding.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"preciseWidth","doc":"<p><code>true</code> to get the precise width</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Number","name":"return","doc":"<p>The element's width.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["adjustDirect2DDimension","getBorderWidth","getPadding","isStyle"],"readonly":null,"required":null,"template":null,"id":"method-getWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the offset width of the element. ...","html_type":null},{"tagname":"method","name":"getX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3604}],"doc":"<p>Gets element X position in page coordinates</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-getX","owner":"Ext.dom.Element","overrides":[{"name":"getX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getX\" rel=\"Ext.util.Positionable-method-getX\" class=\"docClass\">Ext.util.Positionable.getX</a>"}],"short_doc":"Gets element X position in page coordinates ...","html_type":null},{"tagname":"method","name":"getXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3613}],"doc":"<p>Gets element X and Y positions in page coordinates</p>\n","params":[],"return":{"type":"Array","name":"return","doc":"<p>[x, y]</p>\n","properties":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getXY","owner":"Ext.dom.Element","overrides":[{"name":"getXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getXY\" rel=\"Ext.util.Positionable-method-getXY\" class=\"docClass\">Ext.util.Positionable.getXY</a>"}],"short_doc":"Gets element X and Y positions in page coordinates ...","html_type":null},{"tagname":"method","name":"getY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3644}],"doc":"<p>Gets element Y position in page coordinates</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-getY","owner":"Ext.dom.Element","overrides":[{"name":"getY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-getY\" rel=\"Ext.util.Positionable-method-getY\" class=\"docClass\">Ext.util.Positionable.getY</a>"}],"short_doc":"Gets element Y position in page coordinates ...","html_type":null},{"tagname":"method","name":"getZIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3653}],"doc":"<p>Returns this element's z-index</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-getZIndex","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns this element's z-index ...","html_type":null},{"tagname":"method","name":"ghost","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8783}],"doc":"<p>Slides the element while fading it out of view. An anchor point can be optionally passed\nto set the ending point of the effect. Usage:</p>\n\n<pre><code>// default: slide the element downward while fading out\nel.ghost();\n\n// custom: slide the element out to the right with a 2-second duration\nel.ghost('r', { duration: 2000 });\n\n// common config options shown with default values\nel.ghost('b', {\n    easing: 'easeOut',\n    duration: 500\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>One of the valid <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> anchor positions\n(defaults to bottom: 'b')</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","on"],"readonly":null,"required":null,"template":null,"id":"method-ghost","owner":"Ext.dom.Element","overrides":null,"short_doc":"Slides the element while fading it out of view. ...","html_type":null},{"tagname":"method","name":"hasCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3661}],"doc":"<p>Checks if the specified CSS class exists on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The CSS class to check for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the class exists, else <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getClassMap"],"readonly":null,"required":null,"template":null,"id":"method-hasCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks if the specified CSS class exists on this element's DOM node. ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ...","html_type":null},{"tagname":"method","name":"hasUnit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1388}],"doc":"<p>Checks if the passed size has a css unit attached.</p>\n","params":[{"tagname":"params","type":"String","name":"size","doc":"<p>The size.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the size has a css unit.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.2.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasUnit","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks if the passed size has a css unit attached. ...","html_type":null},{"tagname":"method","name":"hide","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8912}],"doc":"<p>Hide this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", \"offsets\", or \"clip\". See <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a>.</p>\n","params":[{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["anim","setVisible"],"readonly":null,"required":null,"template":null,"id":"method-hide","owner":"Ext.dom.Element","overrides":null,"short_doc":"Hide this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", \"offsets\", or \"clip\". ...","html_type":null},{"tagname":"method","name":"highlight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":8932}],"doc":"<p>Highlights the Element by setting a color (applies to the background-color by default,\nbut can be changed using the \"attr\" config option) and then fading back to the original\ncolor. If no original color is available, you should provide the \"endColor\" config option\nwhich will be cleared after the animation. Usage:</p>\n\n<pre><code>// default: highlight background to yellow\nel.highlight();\n\n// custom: highlight foreground text to blue for 2 seconds\nel.highlight(\"0000ff\", { attr: 'color', duration: 2000 });\n\n// common config options shown with default values\nel.highlight(\"ffff9c\", {\n    // can be any valid CSS property (attribute) that supports a color value\n    attr: \"backgroundColor\",\n    endColor: (current color) or \"ffffff\",\n    easing: 'easeIn',\n    duration: 1000\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"color","doc":"<p>The highlight color. Should be a 6 char hex color\nwithout the leading # (defaults to yellow: 'ffff9c')</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","getColor"],"readonly":null,"required":null,"template":null,"id":"method-highlight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Highlights the Element by setting a color (applies to the background-color by default,\nbut can be changed using the \"...","html_type":null},{"tagname":"method","name":"hover","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3681}],"doc":"<p>Sets up event handlers to call the passed functions when the mouse is moved into and\nout of the Element.</p>\n","params":[{"tagname":"params","type":"Function","name":"overFn","doc":"<p>The function to call when the mouse enters the Element.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"outFn","doc":"<p>The function to call when the mouse leaves the Element.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the functions are executed.\nDefaults to the Element's DOM element.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Options for the listener. See\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">the options parameter</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["on"],"readonly":null,"required":null,"template":null,"id":"method-hover","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets up event handlers to call the passed functions when the mouse is moved into and\nout of the Element. ...","html_type":null},{"tagname":"method","name":"indexOf","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3701}],"doc":"<p>Returns the index of the given element in the <code>childNodes</code> of this element. If\nnot present, <code>-1</code> is returned.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"childEl","doc":"<p>The potential child element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"number","name":"return","doc":"<p>The index of <code>childEl</code> in <code>childNodes</code> or <code>-1</code> if not found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-indexOf","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the index of the given element in the childNodes of this element. ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"initDD","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9022}],"doc":"<p>Initializes a <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a> drag drop object for this element.</p>\n","params":[{"tagname":"params","type":"String","name":"group","doc":"<p>The group the DD object is member of</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"config","doc":"<p>The DD config object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"overrides","doc":"<p>An object containing methods to override/implement\non the DD object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dd.DD","name":"return","doc":"<p>The DD object</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initDD","owner":"Ext.dom.Element","overrides":null,"short_doc":"Initializes a Ext.dd.DD drag drop object for this element. ...","html_type":null},{"tagname":"method","name":"initDDProxy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9036}],"doc":"<p>Initializes a <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a> object for this element.</p>\n","params":[{"tagname":"params","type":"String","name":"group","doc":"<p>The group the DDProxy object is member of</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"config","doc":"<p>The DDProxy config object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"overrides","doc":"<p>An object containing methods to override/implement\non the DDProxy object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dd.DDProxy","name":"return","doc":"<p>The DDProxy object</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initDDProxy","owner":"Ext.dom.Element","overrides":null,"short_doc":"Initializes a Ext.dd.DDProxy object for this element. ...","html_type":null},{"tagname":"method","name":"initDDTarget","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9050}],"doc":"<p>Initializes a <a href=\"#!/api/Ext.dd.DDTarget\" rel=\"Ext.dd.DDTarget\" class=\"docClass\">Ext.dd.DDTarget</a> object for this element.</p>\n","params":[{"tagname":"params","type":"String","name":"group","doc":"<p>The group the DDTarget object is member of</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"config","doc":"<p>The DDTarget config object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"overrides","doc":"<p>An object containing methods to override/implement\non the DDTarget object</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dd.DDTarget","name":"return","doc":"<p>The DDTarget object</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dd.DDTarget\" rel=\"Ext.dd.DDTarget\" class=\"docClass\">Ext.dd.DDTarget</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initDDTarget","owner":"Ext.dom.Element","overrides":null,"short_doc":"Initializes a Ext.dd.DDTarget object for this element. ...","html_type":null},{"tagname":"method","name":"insertAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3718}],"doc":"<p>Inserts this element after the passed element in the DOM.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element to insert after.\nThe <code>id</code> of the node, a DOM Node or an existing Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-insertAfter","owner":"Ext.dom.Element","overrides":null,"short_doc":"Inserts this element after the passed element in the DOM. ...","html_type":null},{"tagname":"method","name":"insertBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3731}],"doc":"<p>Inserts this element before the passed element in the DOM.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element before which this element\nwill be inserted. The id of the node, a DOM Node or an existing Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-insertBefore","owner":"Ext.dom.Element","overrides":null,"short_doc":"Inserts this element before the passed element in the DOM. ...","html_type":null},{"tagname":"method","name":"insertFirst","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3744}],"doc":"<p>Inserts (or creates) an element as the first child of this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The id or element to insert\nor a DomHelper config to create and insert</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return the raw DOM element instead\nof <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The new child element (or HTMLElement if\n<em>returnDom</em> is <em>true</em>).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createChild"],"readonly":null,"required":null,"template":null,"id":"method-insertFirst","owner":"Ext.dom.Element","overrides":null,"short_doc":"Inserts (or creates) an element as the first child of this element ...","html_type":null},{"tagname":"method","name":"insertHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3767}],"doc":"<p>Inserts an html fragment into this element</p>\n","params":[{"tagname":"params","type":"String","name":"where","doc":"<p>Where to insert the html in relation to this element - beforeBegin,\nafterBegin, beforeEnd, afterEnd. See <a href=\"#!/api/Ext.dom.Helper-method-insertHtml\" rel=\"Ext.dom.Helper-method-insertHtml\" class=\"docClass\">Ext.dom.Helper.insertHtml</a> for details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"html","doc":"<p>The HTML fragment</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnEl","doc":"<p>True to return an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The inserted node (or nearest related if more than\n1 inserted)</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-insertHtml","owner":"Ext.dom.Element","overrides":null,"short_doc":"Inserts an html fragment into this element ...","html_type":null},{"tagname":"method","name":"insertSibling","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3782}],"doc":"<p>Inserts (or creates) the passed element (or DomHelper config) as a sibling of this\nelement</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object/Array","name":"el","doc":"<p>The id, element to insert\nor a DomHelper config to create and insert <em>or</em> an array of any of those.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"where","doc":"<p>'before' or 'after'</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'before'","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return the raw DOM element instead of\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The inserted <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>). If an array is passed, the last\ninserted element is returned.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-insertSibling","owner":"Ext.dom.Element","overrides":null,"short_doc":"Inserts (or creates) the passed element (or DomHelper config) as a sibling of this\nelement ...","html_type":null},{"tagname":"method","name":"is","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3850}],"doc":"<p>Returns <code>true</code> if this element matches the passed simple selector\n(e.g. 'div.some-class' or 'span:first-child').</p>\n","params":[{"tagname":"params","type":"String/Function","name":"selector","doc":"<p>The simple selector to test or a function\nwhich is passed candidate nodes, and should return <code>true</code> for nodes which match.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this element matches the selector, else <code>false</code>.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-is","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element matches the passed simple selector\n(e.g. ...","html_type":null},{"tagname":"method","name":"isAncestor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3885}],"doc":"<p>Returns <code>true</code> if this element is an ancestor of the passed element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element or id of the element\nto search for in this elements descendants.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isAncestor","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element is an ancestor of the passed element ...","html_type":null},{"tagname":"method","name":"isBorderBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10727}],"doc":"<p>Returns true if this element uses the border-box-sizing model.\nThis method is deprecated as of version 5.0 because border-box sizing\nis forced upon all elements via a style sheet rule, and the browsers\nthat do not support border-box (IE6/7 strict mode) are no longer supported.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>This method is deprecated.  Browsers that do not\nsupport border-box (IE6/7 strict mode) are no longer supported.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isBorderBox","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element uses the border-box-sizing model. ...","html_type":null},{"tagname":"method","name":"isDisplayed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10741}],"doc":"<p>Returns true if display is not \"none\"</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>use element.isStyle('display', 'none');</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["isStyle"],"readonly":null,"required":null,"template":null,"id":"method-isDisplayed","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if display is not \"none\" ...","html_type":null},{"tagname":"method","name":"isFocusable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6150}],"doc":"<p>Checks whether this element can be focused programmatically or by clicking.\nTo check if an element is in the document tab flow, use <a href=\"#!/api/Ext.dom.Element-method-isTabbable\" rel=\"Ext.dom.Element-method-isTabbable\" class=\"docClass\">isTabbable</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"skipVisibility","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the element is focusable</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isVisible"],"readonly":null,"required":null,"template":null,"id":"method-isFocusable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks whether this element can be focused programmatically or by clicking. ...","html_type":null},{"tagname":"method","name":"isInputField","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6194}],"doc":"<p>Returns <code>true</code> if this Element is an input field, or is editable in any way.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if this Element is an input field, or is editable in any way.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isInputField","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this Element is an input field, or is editable in any way. ...","html_type":null},{"tagname":"method","name":"isMasked","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9064}],"doc":"<p>Returns true if this element is masked. Also re-centers any displayed message\nwithin the mask.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>Go up the DOM hierarchy to determine if any parent\nelement is masked.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findParentNode","getData"],"readonly":null,"required":null,"template":null,"id":"method-isMasked","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element is masked. ...","html_type":null},{"tagname":"method","name":"isRelativeUnit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1399}],"doc":"<p>Checks if the passed css unit is a relative unit. This includes:\n- <code>auto</code>\n- <code>%</code>\n- <code>em</code>\n- <code>rem</code>\n- <code>auto</code>\n- <code>vh</code>\n- <code>vw</code>\n- <code>vmin</code>\n- <code>vmax</code>\n- <code>ex\n-</code>ch`</p>\n","params":[{"tagname":"params","type":"String","name":"size","doc":"<p>The css unit and value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the value is relative.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isRelativeUnit","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks if the passed css unit is a relative unit. ...","html_type":null},{"tagname":"method","name":"isScrollable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3932}],"doc":"<p>Returns true if this element is scrollable.</p>\n","params":[],"return":{"type":"Boolean","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isScrollable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if this element is scrollable. ...","html_type":null},{"tagname":"method","name":"isStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3942}],"doc":"<p>Checks if the current value of a style is equal to a given value.</p>\n","params":[{"tagname":"params","type":"String","name":"style","doc":"<p>property whose value is returned.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"val","doc":"<p>to check against.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> for when the current value equals the given value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-isStyle","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks if the current value of a style is equal to a given value. ...","html_type":null},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks if all events, or a specific event, is suspended. ...","html_type":null},{"tagname":"method","name":"isTabbable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6215}],"doc":"<p>Checks whether this element participates in the sequential focus navigation,\nand can be reached by using Tab key.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"includeHidden","doc":"<p>pass <code>true</code> if hidden, or unattached elements\nshould be returned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>True if the element is tabbable.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isVisible"],"readonly":null,"required":null,"template":null,"id":"method-isTabbable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks whether this element participates in the sequential focus navigation,\nand can be reached by using Tab key. ...","html_type":null},{"tagname":"method","name":"isTransparent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7099}],"doc":"<p>Returns <code>true</code> if the value of the given property is visually transparent.\nThis may be due to a 'transparent' style value or an rgba value with 0\nin the alpha component.</p>\n","params":[{"tagname":"params","type":"String","name":"prop","doc":"<p>The style property whose value is to be tested.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the style property is visually transparent.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>This method is deprecated.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStyle"],"readonly":null,"required":null,"template":null,"id":"method-isTransparent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns true if the value of the given property is visually transparent. ...","html_type":null},{"tagname":"method","name":"isVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3952}],"doc":"<p>Checks whether the element is currently visible using both visibility and display\nproperties.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"deep","doc":"<p>True to walk the dom and see if parent elements are hidden.\nIf false, the function only checks the visibility of the element itself and it may return\n<code>true</code> even though a parent is not visible.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Number","name":"mode","doc":"<p>Bit flag indicating which CSS properties to test:</p>\n\n<ul>\n<li><code>1</code> - check display only</li>\n<li><code>2</code> - check visibility only</li>\n<li><code>3</code> - check both visibility and display</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":"3","optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the element is currently visible, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isVisible","owner":"Ext.dom.Element","overrides":null,"short_doc":"Checks whether the element is currently visible using both visibility and display\nproperties. ...","html_type":null},{"tagname":"method","name":"last","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4007}],"doc":"<p>Gets the last child, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Find the previous sibling that matches the passed simple\nselector. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return a raw DOM node instead of an\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The last child <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["matchNode"],"readonly":null,"required":null,"template":null,"id":"method-last","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the last child, skipping text nodes ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"load","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9099}],"doc":"<p>Direct access to the <a href=\"#!/api/Ext.ElementLoader\" rel=\"Ext.ElementLoader\" class=\"docClass\">Ext.ElementLoader</a> <a href=\"#!/api/Ext.ElementLoader-method-load\" rel=\"Ext.ElementLoader-method-load\" class=\"docClass\">Ext.ElementLoader.load</a> method.\nThe method takes the same object parameter as <a href=\"#!/api/Ext.ElementLoader-method-load\" rel=\"Ext.ElementLoader-method-load\" class=\"docClass\">Ext.ElementLoader.load</a></p>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>a options object for <a href=\"#!/api/Ext.ElementLoader\" rel=\"Ext.ElementLoader\" class=\"docClass\">Ext.ElementLoader</a>\n<a href=\"#!/api/Ext.ElementLoader-method-load\" rel=\"Ext.ElementLoader-method-load\" class=\"docClass\">Ext.ElementLoader.load</a></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getLoader"],"readonly":null,"required":null,"template":null,"id":"method-load","owner":"Ext.dom.Element","overrides":null,"short_doc":"Direct access to the Ext.ElementLoader Ext.ElementLoader.load method. ...","html_type":null},{"tagname":"method","name":"mask","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9112}],"doc":"<p>Puts a mask over this element to disable user interaction.\nThis method can only be applied to elements which accept child nodes. Use\n<a href=\"#!/api/Ext.dom.Element-method-unmask\" rel=\"Ext.dom.Element-method-unmask\" class=\"docClass\">unmask</a> to remove the mask.</p>\n","params":[{"tagname":"params","type":"String","name":"msg","doc":"<p>A message to display in the mask</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"msgCls","doc":"<p>A css class to apply to the msg element</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"elHeight","doc":"<p>(private) Passed by AbstractComponent.mask to avoid the need\nto interrogate the DOM to get the height</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The mask element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","getData","getHeight","getStyle","isStyle","saveTabbableState"],"readonly":null,"required":null,"template":null,"id":"method-mask","owner":"Ext.dom.Element","overrides":null,"short_doc":"Puts a mask over this element to disable user interaction. ...","html_type":null},{"tagname":"method","name":"maskIframes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1421}],"doc":"<p>Mask iframes when shim is true. See <a href=\"#!/api/Ext.util.Floating-cfg-shim\" rel=\"Ext.util.Floating-cfg-shim\" class=\"docClass\">Ext.util.Floating.shim</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-maskIframes","owner":"Ext.dom.Element","overrides":null,"short_doc":"Mask iframes when shim is true. ...","html_type":null},{"tagname":"method","name":"measure","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4045}],"doc":"<p>Measures and returns the size of this element. When <code>dimension</code> is <code>null</code> (or\nnot specified), this will be an object with <code>width</code> and <code>height</code> properties.</p>\n\n<p>If <code>dimension</code> is <code>'w'</code> the value returned will be this element's width. If\n<code>dimension</code> is <code>'h'</code> the returned value will be this element's height.</p>\n\n<p>Unlike <code>getWidth</code> and <code>getHeight</code> this method only returns \"precise\" (sub-pixel)\nsizes based on the <code>getBoundingClientRect</code> API.</p>\n","params":[{"tagname":"params","type":"'w'/'h'","name":"dimension","doc":"<p>Specifies which dimension is desired. If omitted\nthen an object with <code>width</code> and <code>height</code> properties is returned.</p>\n","html_type":"'w'/'h'","default":null,"optional":true,"properties":null}],"return":{"type":"Number/Object","name":"return","doc":"<p>This element's width, height or both as a readonly\nobject. This object may be the direct result of <code>getBoundingClientRect</code> and\nhence immutable on some browsers.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["adjustDirect2DDimension"],"readonly":null,"required":null,"template":null,"id":"method-measure","owner":"Ext.dom.Element","overrides":null,"short_doc":"Measures and returns the size of this element. ...","html_type":null},{"tagname":"method","name":"measureContent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4146}],"doc":"<p>Measures and returns this element's content. When <code>dimension</code> is <code>null</code> (or\nnot specified), this will be an object with <code>width</code> and <code>height</code> properties.</p>\n\n<p>If <code>dimension</code> is <code>'w'</code> the value returned will be this element's width. If\n<code>dimension</code> is <code>'h'</code> the returned value will be this element's height.</p>\n\n<p>Unlike <code>getWidth</code> and <code>getHeight</code> this method only returns \"precise\" (sub-pixel)\nsizes based on the <code>getBoundingClientRect</code> API.</p>\n","params":[{"tagname":"params","type":"'w'/'h'","name":"dimension","doc":"<p>Specifies which dimension is desired. If omitted\nthen an object with <code>width</code> and <code>height</code> properties is returned.</p>\n","html_type":"'w'/'h'","default":null,"optional":true,"properties":null}],"return":{"type":"Number/Object","name":"return","doc":"<p>This element's width, height or both as a readonly\nobject. This object may be the direct result of <code>getBoundingClientRect</code> and\nhence immutable on some browsers.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBorderWidth","getPadding","measure"],"readonly":null,"required":null,"template":null,"id":"method-measureContent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Measures and returns this element's content. ...","html_type":null},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mon","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for addManagedListener. ...","html_type":null},{"tagname":"method","name":"monitorMouseLeave","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4182}],"doc":"<p>Monitors this Element for the mouse leaving. Calls the function after the specified delay\nonly if the mouse was not moved back into the Element within the delay. If the mouse\n<em>was</em> moved back in, the function is not called.</p>\n","params":[{"tagname":"params","type":"Number","name":"delay","doc":"<p>The delay <strong>in milliseconds</strong> to wait for possible mouse re-entry\nbefore calling the handler function.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"handler","doc":"<p>The function to call if the mouse remains outside of this\nElement for the specified time.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function\nexecutes. Defaults to this Element.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The listeners object which was added to this element so that monitoring\ncan be stopped. Example usage:</p>\n\n<pre><code>// Hide the menu if the mouse moves out for 250ms or more\nthis.mouseLeaveMonitor = this.menuEl.monitorMouseLeave(250, this.hideMenu, this);\n\n...\n// Remove mouseleave monitor on menu destroy\nthis.mouseLeaveMonitor.destroy();\n</code></pre>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["on","un"],"readonly":null,"required":null,"template":null,"id":"method-monitorMouseLeave","owner":"Ext.dom.Element","overrides":null,"short_doc":"Monitors this Element for the mouse leaving. ...","html_type":null},{"tagname":"method","name":"move","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":785}],"doc":"<p>Move the element relative to its current position.</p>\n","params":[{"tagname":"params","type":"String","name":"direction","doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>\"l\"</code> (or <code>\"left\"</code>)</li>\n<li><code>\"r\"</code> (or <code>\"right\"</code>)</li>\n<li><code>\"t\"</code> (or <code>\"top\"</code>, or <code>\"up\"</code>)</li>\n<li><code>\"b\"</code> (or <code>\"bottom\"</code>, or <code>\"down\"</code>)</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"distance","doc":"<p>How far to move the element in pixels</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"animate","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY","setXY"],"readonly":null,"required":null,"template":null,"id":"method-move","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Move the element relative to its current position. ...","html_type":null},{"tagname":"method","name":"moveTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10540}],"doc":"<p>Sets the position of the element in page coordinates.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>X value for new position (coordinates are page-based)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>Y value for new position (coordinates are page-based)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True for the default animation,\nor a standard Element animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.dom.Element-method-setXY\" rel=\"Ext.dom.Element-method-setXY\" class=\"docClass\">setXY</a> instead.</p>\n","version":"4.2.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["setXY"],"readonly":null,"required":null,"template":null,"id":"method-moveTo","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the position of the element in page coordinates. ...","html_type":null},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mun","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeManagedListener. ...","html_type":null},{"tagname":"method","name":"next","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4231}],"doc":"<p>Gets the next sibling, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Find the next sibling that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return a raw dom node instead of an\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The next sibling <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> (or\nHTMLElement if <em>asDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["matchNode"],"readonly":null,"required":null,"template":null,"id":"method-next","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the next sibling, skipping text nodes ...","html_type":null},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-on","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends an after-event handler. ...","html_type":null},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends a before-event handler. ...","html_type":null},{"tagname":"method","name":"parent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4244}],"doc":"<p>Gets the parent node for this element, optionally chaining up trying to match a selector</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Find a parent node that matches the passed simple selector.\nSee <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return a raw dom node instead of an\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The parent node (<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["matchNode"],"readonly":null,"required":null,"template":null,"id":"method-parent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the parent node for this element, optionally chaining up trying to match a selector ...","html_type":null},{"tagname":"method","name":"pause","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10443}],"doc":"<p>Creates a pause before any subsequent queued effects begin. If there are\nno effects queued after the pause it will have no effect. Usage:</p>\n\n<pre><code>el.pause(1);\n</code></pre>\n","params":[{"tagname":"params","type":"Number","name":"ms","doc":"<p>The length of time to pause (in milliseconds)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use the <code>delay</code> config to <a href=\"#!/api/Ext.dom.Element-method-animate\" rel=\"Ext.dom.Element-method-animate\" class=\"docClass\">animate</a> instead.</p>\n","version":"4.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-pause","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates a pause before any subsequent queued effects begin. ...","html_type":null},{"tagname":"method","name":"position","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4263}],"doc":"<p>Initializes positioning on this element. If a desired position is not passed,\nit will make the the element positioned relative IF it is not already positioned.</p>\n","params":[{"tagname":"params","type":"String","name":"pos","doc":"<p>Positioning to use \"relative\", \"absolute\" or \"fixed\"</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"zIndex","doc":"<p>The zIndex to apply</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"x","doc":"<p>Set the page X position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>Set the page Y position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["isStyle","setStyle","setXY"],"readonly":null,"required":null,"template":null,"id":"method-position","owner":"Ext.dom.Element","overrides":null,"short_doc":"Initializes positioning on this element. ...","html_type":null},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Prepares a given class for observable instances. ...","html_type":null},{"tagname":"method","name":"prev","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4292}],"doc":"<p>Gets the previous sibling, skipping text nodes</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>Find the previous sibling that matches the passed simple\nselector. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a> for information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p><code>true</code> to return a raw DOM node instead of an\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The previous sibling (<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> or\nHTMLElement if <em>returnDom</em> is <em>true</em>).  Or null if no match is found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["matchNode"],"readonly":null,"required":null,"template":null,"id":"method-prev","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the previous sibling, skipping text nodes ...","html_type":null},{"tagname":"method","name":"puff","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9191}],"doc":"<p>Fades the element out while slowly expanding it in all directions. When the effect\nis completed, the element will be hidden (visibility = 'hidden') but block elements\nwill still take up space in the document. Usage:</p>\n\n<pre><code>// default\nel.puff();\n\n// common config options shown with default values\nel.puff({\n    easing: 'easeOut',\n    duration: 500,\n    useDisplay: false\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"obj","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","getBox","getStyle","on"],"readonly":null,"required":null,"template":null,"id":"method-puff","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fades the element out while slowly expanding it in all directions. ...","html_type":null},{"tagname":"method","name":"purgeAllListeners","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7114}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">clearListeners</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-purgeAllListeners","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"query","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4305}],"doc":"<p>Selects child nodes based on the passed CSS selector.\nDelegates to document.querySelectorAll. More information can be found at\n<a href=\"http://www.w3.org/TR/css3-selectors/\">http://www.w3.org/TR/css3-selectors/</a></p>\n\n<p>All selectors, attribute filters and pseudos below can be combined infinitely\nin any order. For example <code>div.foo:nth-child(odd)[@foo=bar].bar:first</code> would be\na perfectly valid selector.</p>\n\n<h2>Element Selectors:</h2>\n\n<ul>\n<li>* any element</li>\n<li>E an element with the tag E</li>\n<li>E F All descendant elements of E that have the tag F</li>\n<li>E > F or E/F all direct children elements of E that have the tag F</li>\n<li>E + F all elements with the tag F that are immediately preceded by an element\nwith the tag E</li>\n<li>E ~ F all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n\n\n<h2>Attribute Selectors:</h2>\n\n<p>The use of  and quotes are optional. For example, div[@foo='bar'] is also a valid\nattribute selector.</p>\n\n<ul>\n<li>E[foo] has an attribute \"foo\"</li>\n<li>E[foo=bar] has an attribute \"foo\" that equals \"bar\"</li>\n<li>E[foo^=bar] has an attribute \"foo\" that starts with \"bar\"</li>\n<li>E[foo$=bar] has an attribute \"foo\" that ends with \"bar\"</li>\n<li>E[foo*=bar] has an attribute \"foo\" that contains the substring \"bar\"</li>\n<li>E[foo%=2] has an attribute \"foo\" that is evenly divisible by 2</li>\n<li>E[foo!=bar] has an attribute \"foo\" that does not equal \"bar\"</li>\n</ul>\n\n\n<h2>Pseudo Classes:</h2>\n\n<ul>\n<li>E:first-child E is the first child of its parent</li>\n<li>E:last-child E is the last child of its parent</li>\n<li>E:nth-child(n) E is the nth child of its parent (1 based as per the spec)</li>\n<li>E:nth-child(odd) E is an odd child of its parent</li>\n<li>E:nth-child(even) E is an even child of its parent</li>\n<li>E:only-child E is the only child of its parent</li>\n<li>E:checked E is an element that is has a checked attribute that is true (e.g. a radio\nor checkbox)</li>\n<li>E:first the first E in the resultset</li>\n<li>E:last the last E in the resultset</li>\n<li>E:nth(n) the nth E in the resultset (1 based)</li>\n<li>E:odd shortcut for :nth-child(odd)</li>\n<li>E:even shortcut for :nth-child(even)</li>\n<li>E:not(S) an E element that does not match simple selector S</li>\n<li>E:has(S) an E element that has a descendant that matches simple selector S</li>\n<li>E:next(S) an E element whose next sibling matches simple selector S</li>\n<li>E:prev(S) an E element whose previous sibling matches simple selector S</li>\n<li>E:any(S1|S2|S2) an E element which matches any of the simple selectors S1, S2 or S3</li>\n</ul>\n\n\n<h2>CSS Value Selectors:</h2>\n\n<ul>\n<li>E{display=none} CSS value \"display\" that equals \"none\"</li>\n<li>E{display^=none} CSS value \"display\" that starts with \"none\"</li>\n<li>E{display$=none} CSS value \"display\" that ends with \"none\"</li>\n<li>E{display*=none} CSS value \"display\" that contains the substring \"none\"</li>\n<li>E{display%=2} CSS value \"display\" that is evenly divisible by 2</li>\n<li>E{display!=none} CSS value \"display\" that does not equal \"none\"</li>\n</ul>\n\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p><code>false</code> to return an array of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"HTMLElement[]/Ext.dom.Element[]","name":"return","doc":"<p>An Array of elements (\nHTMLElement or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if <em>asDom</em> is <em>false</em>) that match the selector.\nIf there are no matches, an empty Array is returned.</p>\n\n","properties":null,"html_type":"HTMLElement[]/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-query","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects child nodes based on the passed CSS selector. ...","html_type":null},{"tagname":"method","name":"radioCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4412}],"doc":"<p>Adds one or more CSS classes to this element and removes the same class(es) from\nall siblings.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"className","doc":"<p>The CSS class to add, or an array of classes.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls"],"readonly":null,"required":null,"template":null,"id":"method-radioCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Adds one or more CSS classes to this element and removes the same class(es) from\nall siblings. ...","html_type":null},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createRelayer","mon"],"readonly":null,"required":null,"template":null,"id":"method-relayEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ...","html_type":null},{"tagname":"method","name":"remove","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4445}],"doc":"<p>Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listeners.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-destroy\" rel=\"Ext.dom.Element-method-destroy\" class=\"docClass\">destroy</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["destroy"],"readonly":null,"required":null,"template":null,"id":"method-remove","owner":"Ext.dom.Element","overrides":null,"short_doc":"Destroys this element by removing it from the cache, removing its DOM reference,\nand removing all of its event listen...","html_type":null},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unAfter. ...","html_type":null},{"tagname":"method","name":"removeAllListeners","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7121}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">clearListeners</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeAllListeners","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"removeAnchor","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/Positionable.js","linenr":120}],"doc":"<p>Remove any anchor to this element. See <a href=\"#!/api/Ext.util.Positionable-method-anchorTo\" rel=\"Ext.util.Positionable-method-anchorTo\" class=\"docClass\">anchorTo</a>.</p>\n","params":[],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getAnchor"],"readonly":null,"required":null,"template":null,"id":"method-removeAnchor","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Remove any anchor to this element. ...","html_type":null},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unBefore. ...","html_type":null},{"tagname":"method","name":"removeCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4460}],"doc":"<p>Removes the given CSS class(es) from this Element.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"names","doc":"<p>The CSS classes to remove separated by space,\nor an array of classes</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>Prefix to prepend to each class. The separator <code>-</code> will be\nappended to the prefix.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"suffix","doc":"<p>Suffix to append to each class. The separator <code>-</code> will be\nprepended to the suffix.\nreturn {<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>} this</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["replaceCls"],"readonly":null,"required":null,"template":null,"id":"method-removeCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes the given CSS class(es) from this Element. ...","html_type":null},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doRemoveListener"],"readonly":null,"required":null,"template":null,"id":"method-removeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes an event handler. ...","html_type":null},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes listeners that were added by the mon method. ...","html_type":null},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Remove a single managed listener item ...","html_type":null},{"tagname":"method","name":"repaint","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4474}],"doc":"<p>Forces the browser to repaint this element.</p>\n","params":[{"tagname":null,"type":"Object","name":"cls","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"state","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["toggleCls"],"readonly":null,"required":null,"template":null,"id":"method-repaint","owner":"Ext.dom.Element","overrides":null,"short_doc":"Forces the browser to repaint this element. ...","html_type":null},{"tagname":"method","name":"replace","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4507}],"doc":"<p>Replaces the passed element with this element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The element to replace.\nThe id of the node, a DOM Node or an existing Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"destroy","doc":"<p><code>false</code> to prevent destruction of the replaced\nelement</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-replace","owner":"Ext.dom.Element","overrides":null,"short_doc":"Replaces the passed element with this element ...","html_type":null},{"tagname":"method","name":"replaceCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4541}],"doc":"<p>Replaces one or more CSS classes on this element with other classes. If the old\nname does not exist, the new name will simply be added.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"remove","doc":"<p>The CSS class(es) to be removed.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String/String[]","name":"add","doc":"<p>The CSS class(es) to be added.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>The string to prepend to each class name.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"suffix","doc":"<p>The string to append to each class name.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","setClassMap"],"readonly":null,"required":null,"template":null,"id":"method-replaceCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Replaces one or more CSS classes on this element with other classes. ...","html_type":null},{"tagname":"method","name":"replaceWith","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4645}],"doc":"<p>Replaces this element with the passed element</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element/Object","name":"el","doc":"<p>The new element (id of the\nnode, a DOM Node or an existing Element) or a DomHelper config of an element to create</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>This element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearListeners"],"readonly":null,"required":null,"template":null,"id":"method-replaceWith","owner":"Ext.dom.Element","overrides":null,"short_doc":"Replaces this element with the passed element ...","html_type":null},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":667}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","doc":"<p>The default scope to return if none is found.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"this","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ...","html_type":null},{"tagname":"method","name":"restoreTabbableState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6747}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"options","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-restoreTabbableState","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing events (see suspendEvents). ...","html_type":null},{"tagname":"method","name":"reverseTranslateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":936}],"doc":"<p>Converts local coordinates into page-level coordinates</p>\n","params":[{"tagname":"params","type":"Number[]","name":"xy","doc":"<p>The local x and y coordinates</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Number[]","name":"return","doc":"<p>The translated coordinates</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-reverseTranslateXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Converts local coordinates into page-level coordinates ...","html_type":null},{"tagname":"method","name":"ripple","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6314}],"doc":"<p>Creates a ripple effect over this element. The element should be positioned\n(either <code>relative</code> or <code>absolute</code>) prior to calling this method.</p>\n","params":[{"tagname":"params","type":"String/Event/Ext.event.Event","name":"event","doc":"<p>The event to use for ripple\npositioning.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/Event/<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object/String","name":"options","doc":"<p>Ripple options object or color to use for ripple</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"String","name":"color","doc":"<p>The color to use for the ripple effect or\n<code>'default'</code> to use the stylesheet default color\nGlobal_CSS.$ripple-background-color. When no <code>color</code> is given, the\nelement's <code>color</code> style is used.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"release","doc":"<p>Optional determines if the ripple should happen\non release. Defaults to down/start.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>Optional selector for which child to add the ripple\ninto</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"measureSelector","doc":"<p>Optional selector for which child to use\nto measure for ripple size.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Number[]","name":"position","doc":"<p>The [x,y] position in which to start the ripple.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","properties":null},{"tagname":"params","type":"Boolean","name":"centered","doc":"<p>Set to <code>true</code> to override all position\ninformation and forces the ripple to be centered inside its parent.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean/String","name":"bound","doc":"<p>Determines if the ripple is bound to\nthe parent container (default). If false ripple will expand outside of container.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean/Number","name":"diameterLimit","doc":"<p>Maximum size, in pixels, that a ripple\ncan be.\nA value of <code>false</code> or <code>0</code> will cause the ripple to fill its container. A value of <code>true</code>\nwill cause the ripple to use the default maximum size.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean/String","name":"fit","doc":"<p>For bound ripples only. Determines if\nripple should search up the dom for an element that will fit the ripple\nwithout clipping. Setting to false will force the unbound ripple into the specified\ncontainer. Defaults to <code>true</code>.</p>\n","default":"true","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Number","name":"destroyTime","doc":"<p>The time (in milliseconds) to wait until\nthe ripple is destroyed.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null}]}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["down","up"],"readonly":null,"required":null,"template":null,"id":"method-ripple","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates a ripple effect over this element. ...","html_type":null},{"tagname":"method","name":"saveTabbableState","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6694}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"options","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findTabbableElements"],"readonly":null,"required":null,"template":null,"id":"method-saveTabbableState","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"scale","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10464}],"doc":"<p>Animates the transition of an element's dimensions from a starting\nheight/width to an ending height/width. This method is a convenience\nimplementation of <a href=\"#!/api/Ext.dom.Element-method-shift\" rel=\"Ext.dom.Element-method-shift\" class=\"docClass\">shift</a>. Usage:</p>\n\n<pre><code>// change height and width to 100x100 pixels\nel.scale(100, 100);\n\n// common config options shown with default values.\n// The height and width will default to the element's existing values\n// if passed as null.\nel.scale(\n    [element's width],\n    [element's height], {\n        easing: 'easeOut',\n        duration: 350\n    }\n);\n</code></pre>\n","params":[{"tagname":"params","type":"Number","name":"width","doc":"<p>The new width (pass undefined to keep the original\nwidth)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"height","doc":"<p>The new height (pass undefined to keep the original\nheight)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the\n<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> config options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Just use <a href=\"#!/api/Ext.dom.Element-method-animate\" rel=\"Ext.dom.Element-method-animate\" class=\"docClass\">animate</a> instead.</p>\n","version":"4.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate"],"readonly":null,"required":null,"template":null,"id":"method-scale","owner":"Ext.dom.Element","overrides":null,"short_doc":"Animates the transition of an element's dimensions from a starting\nheight/width to an ending height/width. ...","html_type":null},{"tagname":"method","name":"scroll","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4688}],"doc":"<p>Scrolls this element the specified direction. Does bounds checking to make sure\nthe scroll is within this element's scrollable range.</p>\n","params":[{"tagname":"params","type":"String","name":"direction","doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>\"l\"</code> (or <code>\"left\"</code>)</li>\n<li><code>\"r\"</code> (or <code>\"right\"</code>)</li>\n<li><code>\"t\"</code> (or <code>\"top\"</code>, or <code>\"up\"</code>)</li>\n<li><code>\"b\"</code> (or <code>\"bottom\"</code>, or <code>\"down\"</code>)</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"distance","doc":"<p>How far to scroll the element in pixels</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>Returns true if a scroll was triggered or false if the element\nwas scrolled as far as it could go.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["constrainScrollLeft","constrainScrollTop","isScrollable","scrollTo"],"readonly":null,"required":null,"template":null,"id":"method-scroll","owner":"Ext.dom.Element","overrides":null,"short_doc":"Scrolls this element the specified direction. ...","html_type":null},{"tagname":"method","name":"scrollBy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4741}],"doc":"<p>Scrolls this element by the passed delta values, optionally animating.</p>\n\n<p>All of the following are equivalent:</p>\n\n<pre><code> el.scrollBy(10, 10, true);\n el.scrollBy([10, 10], true);\n el.scrollBy({ x: 10, y: 10 }, true);\n</code></pre>\n","params":[{"tagname":"params","type":"Number/Number[]/Object","name":"deltaX","doc":"<p>Either the x delta, an Array specifying x and y\ndeltas or an object with \"x\" and \"y\" properties.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/Boolean/Object","name":"deltaY","doc":"<p>Either the y delta, or an animate flag or config\nobject.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>Animate flag/config object if the delta values were\npassed separately.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["constrainScrollLeft","constrainScrollTop","scrollTo"],"readonly":null,"required":null,"template":null,"id":"method-scrollBy","owner":"Ext.dom.Element","overrides":null,"short_doc":"Scrolls this element by the passed delta values, optionally animating. ...","html_type":null},{"tagname":"method","name":"scrollChildIntoView","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4785}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"child","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"hscroll","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-scrollChildIntoView","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"scrollIntoView","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4793}],"doc":"<p>Scrolls this element into view within the passed container.</p>\n\n<pre><code>  <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n      storeId:'simpsonsStore',\n      fields:['name', 'email', 'phone'],\n      data:{'items':[\n          { 'name': 'Lisa',  \"email\":\"lisa@simpsons.com\", \"phone\":\"555-111-1224\" },\n          { 'name': 'Bart',  \"email\":\"bart@simpsons.com\",  \"phone\":\"555-222-1234\" },\n          { 'name': 'Homer', \"email\":\"homer@simpsons.com\",  \"phone\":\"555-222-1244\" },\n          { 'name': 'Marge', \"email\":\"marge@simpsons.com\", \"phone\":\"555-222-1254\" },\n          { 'name': 'Milhouse', \"email\":\"milhouse@simpsons.com\",\n            \"phone\":\"555-222-1244\" },\n          { 'name': 'Willy', \"email\":\"willy@simpsons.com\", \"phone\":\"555-222-1254\" },\n          { 'name': 'Skinner', \"email\":\"skinner@simpsons.com\",\n            \"phone\":\"555-222-1244\" },\n          { 'name': 'Hank (last row)', \"email\":\"hank@simpsons.com\",\n            \"phone\":\"555-222-1254\" }\n      ]},\n      proxy: {\n          type: 'memory',\n          reader: {\n              type: 'json',\n              rootProperty: 'items'\n          }\n      }\n  });\n\n  var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n      title: 'Simpsons',\n      store: <a href=\"#!/api/Ext.data.StoreManager-method-lookup\" rel=\"Ext.data.StoreManager-method-lookup\" class=\"docClass\">Ext.data.StoreManager.lookup</a>('simpsonsStore'),\n      columns: [\n          { text: 'Name',  dataIndex: 'name', width: 125 },\n          { text: 'Email', dataIndex: 'email', flex: 1 },\n          { text: 'Phone', dataIndex: 'phone' }\n      ],\n      height: 190,\n      width: 400,\n      renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n      tbar: [{\n          text: 'Scroll row 7 into view',\n          handler: function () {\n              var view = grid.getView();\n\n              <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(view.getRow(7)).scrollIntoView(view.getEl(), null, true);\n          }\n      }]\n  });\n</code></pre>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.Element","name":"container","doc":"<p>The container element\nto scroll.  Should be a string (id), dom node, or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>","default":"document.body","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"hscroll","doc":"<p>False to disable horizontal scroll.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"highlight","doc":"<p>true to <a href=\"#!/api/Ext.dom.Element-method-highlight\" rel=\"Ext.dom.Element-method-highlight\" class=\"docClass\">highlight</a> the element when it is\nin view.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doScrollIntoView"],"readonly":null,"required":null,"template":null,"id":"method-scrollIntoView","owner":"Ext.dom.Element","overrides":null,"short_doc":"Scrolls this element into view within the passed container. ...","html_type":null},{"tagname":"method","name":"scrollTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4858}],"doc":"<p>Scrolls this element the specified scroll point. It does NOT do bounds checking so\nif you scroll to a weird value it will try to do it. For auto bounds checking,\nuse <a href=\"#!/api/Ext.dom.Element-event-scroll\" rel=\"Ext.dom.Element-event-scroll\" class=\"docClass\">scroll</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"side","doc":"<p>Either \"left\" for scrollLeft values or \"top\" for scrollTop values.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"value","doc":"<p>The new scroll value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate"],"readonly":null,"required":null,"template":null,"id":"method-scrollTo","owner":"Ext.dom.Element","overrides":null,"short_doc":"Scrolls this element the specified scroll point. ...","html_type":null},{"tagname":"method","name":"select","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4900}],"doc":"<p>Selects descendant elements of this element based on the passed CSS selector to\nenable <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> methods to be applied to many related\nelements in one statement through the returned\n<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">CompositeElementLite</a> object.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement[]","name":"selector","doc":"<p>The CSS selector or an array of elements</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"composite","doc":"<p>Return a CompositeElement as opposed to a\nCompositeElementLite. Defaults to false.</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.CompositeElementLite/Ext.dom.CompositeElement","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">Ext.dom.CompositeElementLite</a>/<a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.dom.CompositeElement</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":null,"id":"method-select","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects descendant elements of this element based on the passed CSS selector to\nenable Element methods to be applied ...","html_type":null},{"tagname":"method","name":"selectNode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4940}],"doc":"<p>Selects a single descendant element of this element using a CSS selector\n(see <a href=\"#!/api/Ext.dom.Element-method-query\" rel=\"Ext.dom.Element-method-query\" class=\"docClass\">query</a>).</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The selector query</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p><code>false</code> to return an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The DOM element (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> if\n<em>asDom</em> is <em>false</em>) which matched the selector.</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["query"],"readonly":null,"required":null,"template":null,"id":"method-selectNode","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects a single descendant element of this element using a CSS selector\n(see query). ...","html_type":null},{"tagname":"method","name":"selectText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":3415}],"doc":"<p>Selects the specified contents of the input element (all by default).</p>\n","params":[{"tagname":"params","type":"Number","name":"start","doc":"<p>The starting index to select.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":"0","optional":true,"properties":null},{"tagname":"params","type":"Number","name":"end","doc":"<p>The end index to select (defaults to all remaining text).</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"\"f\"/\"b\"/\"forward\"/\"backward\"","name":"direction","doc":"<p>Pass \"f\" for forward,\n\"b\" for backwards.</p>\n","html_type":"\"f\"/\"b\"/\"forward\"/\"backward\"","default":"\"f\"","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":"6.5.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-selectText","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects the specified contents of the input element (all by default). ...","html_type":null},{"tagname":"method","name":"selectable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1755}],"doc":"<p>Enable text selection for this element (normalized across browsers)</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-selectable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Enable text selection for this element (normalized across browsers) ...","html_type":null},{"tagname":"method","name":"set","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":4952}],"doc":"<p>Sets the passed attributes as attributes of this element (a <code>style</code> attribute\ncan be a string, object or function).</p>\n\n<p>Example component (though any <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> would suffice):</p>\n\n<pre><code>var cmp = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'component',\n    html: 'test',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n</code></pre>\n\n<p>Once the component is rendered, you can fetch a reference to its outer\nelement to use <code>set</code>:</p>\n\n<pre><code>cmp.el.set({\n    foo: 'bar'\n});\n</code></pre>\n\n<p>This sets an attribute on the element of <strong>foo=\"bar\"</strong>:</p>\n\n<pre><code>&lt;div class=\"x-component x-component-default x-border-box\"\n     id=\"component-1009\" foo=\"bar\"&gt;test&lt;/div&gt;\n</code></pre>\n\n<p>To remove the attribute pass a value of <strong>undefined</strong>:</p>\n\n<pre><code>cmp.el.set({\n    foo: undefined\n});\n</code></pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n<li>You cannot remove an attribute by passing <code>undefined</code> when the\n<code>expandos</code> param is set to <strong>false</strong>.</li>\n<li>Passing an attribute of <code>style</code> results in the request being handed off to\n<a href=\"#!/api/Ext.dom.Element-method-applyStyles\" rel=\"Ext.dom.Element-method-applyStyles\" class=\"docClass\">applyStyles</a>.</li>\n<li>Passing an attribute of <code>cls</code> results in the element's dom's\n<a href=\"http://www.w3schools.com/jsref/prop_html_classname.asp\">className</a> property\nbeing set directly.  For additional flexibility when setting / removing\nclasses see:\n\n<ul>\n<li><a href=\"#!/api/Ext.dom.Element-method-addCls\" rel=\"Ext.dom.Element-method-addCls\" class=\"docClass\">addCls</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-removeCls\" rel=\"Ext.dom.Element-method-removeCls\" class=\"docClass\">removeCls</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-replaceCls\" rel=\"Ext.dom.Element-method-replaceCls\" class=\"docClass\">replaceCls</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-setCls\" rel=\"Ext.dom.Element-method-setCls\" class=\"docClass\">setCls</a></li>\n<li><a href=\"#!/api/Ext.dom.Element-method-toggleCls\" rel=\"Ext.dom.Element-method-toggleCls\" class=\"docClass\">toggleCls</a></li>\n</ul>\n</li>\n</ul>\n\n","params":[{"tagname":"params","type":"Object","name":"attributes","doc":"<p>The object with the attributes.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"useSet","doc":"<p><code>false</code> to override the default <code>setAttribute</code>\nto use <a href=\"http://help.dottoro.com/ljvovanq.php\">expandos</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["applyStyles"],"readonly":null,"required":null,"template":null,"id":"method-set","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the passed attributes as attributes of this element (a style attribute\ncan be a string, object or function). ...","html_type":null},{"tagname":"method","name":"setBottom","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5035}],"doc":"<p>Sets the element's CSS bottom style.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"bottom","doc":"<p>Number of pixels or CSS string value to set as\nthe bottom CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setBottom","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's CSS bottom style. ...","html_type":null},{"tagname":"method","name":"setBounds","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10554}],"doc":"<p>Sets the element's position and size in one shot. If animation is true then\nwidth, height, x and y will be animated concurrently.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>X value for new position (coordinates are page-based)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>Y value for new position (coordinates are page-based)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new width. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new width in pixels</li>\n<li>A String used to set the CSS width style. Animation may <strong>not</strong> be used.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new height. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new height in pixels</li>\n<li>A String used to set the CSS height style. Animation may <strong>not</strong> be used.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or\na standard Element animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">Ext.util.Positionable.setBox</a> instead.</p>\n","version":"4.2.0"},"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["setBox"],"readonly":null,"required":null,"template":null,"id":"method-setBounds","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's position and size in one shot. ...","html_type":null},{"tagname":"method","name":"setBox","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":823}],"doc":"<p>Sets the element's box.</p>\n","params":[{"tagname":"params","type":"Object","name":"box","doc":"<p>The box to fill {x, y, width, height}</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["move"],"method_calls":["afterSetPosition","constrainBox","setSize","setXY"],"readonly":null,"required":null,"template":null,"id":"method-setBox","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Sets the element's box. ...","html_type":null},{"tagname":"method","name":"setClassMap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5047}],"doc":"<p>Sets the CSS classes of this element to the keys of the given object. The\n<code>classMap</code> object is typically returned by <a href=\"#!/api/Ext.dom.Element-method-getClassMap\" rel=\"Ext.dom.Element-method-getClassMap\" class=\"docClass\">getClassMap</a>. The values of\nthe properties in the <code>classMap</code> should be truthy (such as <code>1</code> or <code>true</code>).</p>\n","params":[{"tagname":"params","type":"Object","name":"classMap","doc":"<p>The object whose keys will be the CSS classes.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"keep","doc":"<p>Pass <code>true</code> to indicate the the <code>classMap</code>\nobject can be kept (instead of copied).</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-setClassMap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the CSS classes of this element to the keys of the given object. ...","html_type":null},{"tagname":"method","name":"setCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5072}],"doc":"<p>Sets the specified CSS class on this element's DOM node.</p>\n","params":[{"tagname":"params","type":"String/String[]","name":"className","doc":"<p>The CSS class to set on this element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-setCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the specified CSS class on this element's DOM node. ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setDisplayed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5095}],"doc":"<p>Sets the CSS display property. Uses originalDisplay if the specified value is a\nboolean true.</p>\n","params":[{"tagname":"params","type":"Boolean/String","name":"value","doc":"<p>Boolean value to display the element using its\ndefault display, or a string to set the display directly.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_getDisplay","setStyle","setUnderlaysVisible"],"readonly":null,"required":null,"template":null,"id":"method-setDisplayed","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the CSS display property. ...","html_type":null},{"tagname":"method","name":"setHTML","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":7128}],"doc":"<p>Updates the innerHTML of this element, optionally searching for and processing scripts.</p>\n","params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"loadScripts","doc":"<p>Pass <code>true</code> to look for and process scripts.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>For async script loading you can be notified\nwhen the update completes.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which to execute\nthe callback.</p>\n\n\n\n\n<p>Also used as the scope for any <em>inline</em> script source if the <code>loadScripts</code> parameter\nis <code>true</code>. Scripts with a <code>src</code> attribute cannot be executed in this scope.</p>\n\n\n\n\n<p>Defaults to this Element.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"`this`","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-setHtml\" rel=\"Ext.dom.Element-method-setHtml\" class=\"docClass\">setHtml</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setHTML","owner":"Ext.dom.Element","overrides":null,"short_doc":"Updates the innerHTML of this element, optionally searching for and processing scripts. ...","html_type":null},{"tagname":"method","name":"setHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9290}],"doc":"<p>Set the height of this Element.</p>\n\n<pre><code>// change the height to 200px and animate with default configuration\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('elementId').setHeight(200, true);\n\n// change the height to 150px and animate with a custom configuration\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('elId').setHeight(150, {\n    duration : 500, // animation will have a duration of .5 seconds\n    // will change the content to \"finished\"\n    callback: function(){ this.setHtml(\"finished\"); }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new height. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new height in pixels.</li>\n<li>A String used to set the CSS height style. Animation may <strong>not</strong> be used.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>a standard Element animation config object or <code>true</code>\nfor the default animation (<code>{duration: 350, easing: 'ease-in'}</code>)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","callParent"],"readonly":null,"required":null,"template":null,"id":"method-setHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the height of this Element. ...","html_type":null},{"tagname":"method","name":"setHorizontal","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9333}],"doc":"<p>Removes \"vertical\" state from this element (reverses everything done\nby <a href=\"#!/api/Ext.dom.Element-method-setVertical\" rel=\"Ext.dom.Element-method-setVertical\" class=\"docClass\">setVertical</a>).</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeCls"],"readonly":null,"required":null,"template":null,"id":"method-setHorizontal","owner":"Ext.dom.Element","overrides":null,"short_doc":"Removes \"vertical\" state from this element (reverses everything done\nby setVertical). ...","html_type":null},{"tagname":"method","name":"setHtml","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9388}],"doc":"<p>Updates the innerHTML of this element, optionally searching for and processing scripts.</p>\n","params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"loadScripts","doc":"<p>Pass <code>true</code> to look for and process scripts.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>For async script loading you can be notified\nwhen the update completes.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which to execute\nthe callback.</p>\n\n\n\n\n<p>Also used as the scope for any <em>inline</em> script source if the <code>loadScripts</code> parameter\nis <code>true</code>. Scripts with a <code>src</code> attribute cannot be executed in this scope.</p>\n\n\n\n\n<p>Defaults to this Element.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"`this`","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setHtml","owner":"Ext.dom.Element","overrides":null,"short_doc":"Updates the innerHTML of this element, optionally searching for and processing scripts. ...","html_type":null},{"tagname":"method","name":"setLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5171}],"doc":"<p>Sets the element's left position directly using CSS style\n(instead of <a href=\"#!/api/Ext.dom.Element-method-setX\" rel=\"Ext.dom.Element-method-setX\" class=\"docClass\">setX</a>).</p>\n","params":[{"tagname":"params","type":"Number/String","name":"left","doc":"<p>Number of pixels or CSS string value to\nset as the left CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["syncUnderlays"],"readonly":null,"required":null,"template":null,"id":"method-setLeft","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's left position directly using CSS style\n(instead of setX). ...","html_type":null},{"tagname":"method","name":"setLeftTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10586}],"doc":"<p>Sets the element's left and top positions directly using CSS style</p>\n","params":[{"tagname":"params","type":"Number/String","name":"left","doc":"<p>Number of pixels or CSS string value to\nset as the left CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String","name":"top","doc":"<p>Number of pixels or CSS string value to\nset as the top CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.dom.Element-method-setLocalXY\" rel=\"Ext.dom.Element-method-setLocalXY\" class=\"docClass\">setLocalXY</a> instead</p>\n","version":"4.2.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["syncUnderlays"],"readonly":null,"required":null,"template":null,"id":"method-setLeftTop","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's left and top positions directly using CSS style ...","html_type":null},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"An alias for addListener. ...","html_type":null},{"tagname":"method","name":"setLocalX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":105}],"doc":"<p>Sets the local x coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalX\" rel=\"Ext.util.Positionable-method-getLocalX\" class=\"docClass\">getLocalX</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x coordinate. A value of <code>null</code> sets the left style to 'auto'.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalX","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Sets the local x coordinate of this element using CSS style. ...","html_type":null},{"tagname":"method","name":"setLocalXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":116}],"doc":"<p>Sets the local x and y coordinates of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalXY\" rel=\"Ext.util.Positionable-method-getLocalXY\" class=\"docClass\">getLocalXY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The x coordinate or an array containing [x, y]. A value of\n<code>null</code> sets the left style to 'auto'</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The y coordinate, required if x is not an array. A value of\n<code>null</code> sets the top style to 'auto'</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Sets the local x and y coordinates of this element using CSS style. ...","html_type":null},{"tagname":"method","name":"setLocalY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":130}],"doc":"<p>Sets the local y coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalY\" rel=\"Ext.util.Positionable-method-getLocalY\" class=\"docClass\">getLocalY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","params":[{"tagname":"params","type":"Number","name":"y","doc":"<p>The y coordinate. A value of <code>null</code> sets the top style to 'auto'.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.util.Positionable","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLocalY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Sets the local y coordinate of this element using CSS style. ...","html_type":null},{"tagname":"method","name":"setLocation","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10610}],"doc":"<p>Sets the position of the element in page coordinates.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>X value for new position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>Y value for new position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True for the default animation,\nor a standard Element animation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.dom.Element-method-setXY\" rel=\"Ext.dom.Element-method-setXY\" class=\"docClass\">setXY</a> instead.</p>\n","version":"4.2.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["setXY"],"readonly":null,"required":null,"template":null,"id":"method-setLocation","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the position of the element in page coordinates. ...","html_type":null},{"tagname":"method","name":"setMaxHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5266}],"doc":"<p>Set the maximum height of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new maximum height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMaxHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the maximum height of this Element. ...","html_type":null},{"tagname":"method","name":"setMaxWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5277}],"doc":"<p>Set the maximum width of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new maximum width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMaxWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the maximum width of this Element. ...","html_type":null},{"tagname":"method","name":"setMinHeight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5288}],"doc":"<p>Set the minimum height of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new minimum height.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMinHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the minimum height of this Element. ...","html_type":null},{"tagname":"method","name":"setMinWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5299}],"doc":"<p>Set the minimum width of this Element.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new minimum width.</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setMinWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the minimum width of this Element. ...","html_type":null},{"tagname":"method","name":"setOpacity","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9483}],"doc":"<p>Set the opacity of the element</p>\n","params":[{"tagname":"params","type":"Number","name":"opacity","doc":"<p>The new opacity. 0 = transparent, .5 = 50% visible,\n1 = fully visible, etc</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>a standard Element animation config object or <code>true</code>\nfor the default animation (<code>{duration: 350, easing: 'ease-in'}</code>)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","setStyle"],"readonly":null,"required":null,"template":null,"id":"method-setOpacity","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the opacity of the element ...","html_type":null},{"tagname":"method","name":"setPositioning","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9519}],"doc":"<p>Set positioning with an object returned by <code>getPositioning</code>.</p>\n","params":[{"tagname":"params","type":"Object","name":"pc","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setStyle"],"readonly":null,"required":null,"template":null,"id":"method-setPositioning","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set positioning with an object returned by getPositioning. ...","html_type":null},{"tagname":"method","name":"setRight","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5342}],"doc":"<p>Sets the element's CSS right style.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"right","doc":"<p>Number of pixels or CSS string value to\nset as the right CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setRight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's CSS right style. ...","html_type":null},{"tagname":"method","name":"setScrollLeft","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5354}],"doc":"<p>Sets the left scroll position</p>\n","params":[{"tagname":"params","type":"Number","name":"left","doc":"<p>The left scroll position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setScrollLeft","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the left scroll position ...","html_type":null},{"tagname":"method","name":"setScrollTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5365}],"doc":"<p>Sets the top scroll position</p>\n","params":[{"tagname":"params","type":"Number","name":"top","doc":"<p>The top scroll position</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setScrollTop","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the top scroll position ...","html_type":null},{"tagname":"method","name":"setSize","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9569}],"doc":"<p>Set the size of this Element. If animation is true, both width and height will be\nanimated concurrently.</p>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new width. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new width in pixels.</li>\n<li>A String used to set the CSS width style. Animation may <strong>not</strong> be used.</li>\n<li>A size object in the format <code>{width: widthValue, height: heightValue}</code>.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String","name":"height","doc":"<p>The new height. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new height in  pixels.</li>\n<li>A String used to set the CSS height style. Animation may <strong>not</strong> be used.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>a standard Element animation config object or <code>true</code>\nfor the default animation (<code>{duration: 350, easing: 'ease-in'}</code>)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","syncUnderlays"],"readonly":null,"required":null,"template":null,"id":"method-setSize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the size of this Element. ...","html_type":null},{"tagname":"method","name":"setStyle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5416}],"doc":"<p>Wrapper for setting style properties, also takes single object parameter of\nmultiple styles.</p>\n\n<p>Styles should be a valid DOM element style property.\n<a href=\"http://www.w3schools.com/jsref/dom_obj_style.asp\">Valid style property names</a>\n(<em>along with the supported CSS version for each</em>)</p>\n\n<pre><code>// &lt;div id=\"my-el\"&gt;Phineas Flynn&lt;/div&gt;\n\nvar el = <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('my-el');\n\n// two-param syntax\nel.setStyle('color', 'white');\n\n// single-param syntax\nel.setStyle({\n    fontWeight: 'bold',\n    backgroundColor: 'gray',\n    padding: '10px'\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"prop","doc":"<p>The style property to be set, or an object of\nmultiple styles.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"value","doc":"<p>The value to apply to the given property, or null if\nan object was passed.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setStyle","owner":"Ext.dom.Element","overrides":null,"short_doc":"Wrapper for setting style properties, also takes single object parameter of\nmultiple styles. ...","html_type":null},{"tagname":"method","name":"setTabIndex","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6804}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"tabIndex","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setTabIndex","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setTop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5508}],"doc":"<p>Sets the element's top position directly using CSS style\n(instead of <a href=\"#!/api/Ext.dom.Element-method-setY\" rel=\"Ext.dom.Element-method-setY\" class=\"docClass\">setY</a>).</p>\n","params":[{"tagname":"params","type":"Number/String","name":"top","doc":"<p>Number of pixels or CSS string value to\nset as the top CSS property value</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["syncUnderlays"],"readonly":null,"required":null,"template":null,"id":"method-setTop","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the element's top position directly using CSS style\n(instead of setY). ...","html_type":null},{"tagname":"method","name":"setTouchAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5527}],"doc":"<p>Sets the CSS <a href=\"https://www.w3.org/TR/pointerevents/#the-touch-action-css-property\">touch-action</a>\nproperty on this element and emulates its behavior on browsers where touch-action\nis not supported.</p>\n","params":[{"tagname":"params","type":"Object","name":"touchAction","doc":"<p>An object with touch-action names as the keys, and\nboolean values to enable or disable specific touch actions. Accepted keys are:</p>\n\n<ul>\n<li><code>panX</code></li>\n<li><code>panY</code></li>\n<li><code>pinchZoom</code></li>\n<li><code>doubleTapZoom</code></li>\n</ul>\n\n\n<p>All touch actions are enabled (<code>true</code>) by default, so it is usually only necessary\nto specify which touch actions to disable.  For example, the following disables\nonly vertical scrolling and double-tap-zoom on an element</p>\n\n<pre><code>element.setTouchAction({\n    panY: false,\n    doubleTapZoom: false\n});\n</code></pre>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setTouchAction","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the CSS touch-action\nproperty on this element and emulates its behavior on browsers where touch-action\nis not su...","html_type":null},{"tagname":"method","name":"setVertical","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9528}],"doc":"<p>Changes this Element's state to \"vertical\" (rotated 90 or 270 degrees).\nThis involves inverting the getters and setters for height and width,\nand applying hooks for rotating getters and setters for border/margin/padding.\n(getWidth becomes getHeight and vice versa), setStyle and getStyle will\nalso return the inverse when height or width are being operated on.</p>\n","params":[{"tagname":"params","type":"Number","name":"angle","doc":"<p>the angle of rotation - either 90 or 270</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"cls","doc":"<p>an optional css class that contains the required\nstyles for switching the element to vertical orientation. Omit this if\nthe element already contains vertical styling.  If cls is provided,\nit will be removed from the element when <a href=\"#!/api/Ext.dom.Element-method-setHorizontal\" rel=\"Ext.dom.Element-method-setHorizontal\" class=\"docClass\">setHorizontal</a> is called.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls"],"readonly":null,"required":null,"template":null,"id":"method-setVertical","owner":"Ext.dom.Element","overrides":null,"short_doc":"Changes this Element's state to \"vertical\" (rotated 90 or 270 degrees). ...","html_type":null},{"tagname":"method","name":"setVisibility","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5578}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"isVisible","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setVisibility","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"setVisibilityMode","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5593}],"doc":"<p>Use this to change the visibility mode between <a href=\"#!/api/Ext.dom.Element-static-property-VISIBILITY\" rel=\"Ext.dom.Element-static-property-VISIBILITY\" class=\"docClass\">VISIBILITY</a>,\n<a href=\"#!/api/Ext.dom.Element-static-property-DISPLAY\" rel=\"Ext.dom.Element-static-property-DISPLAY\" class=\"docClass\">DISPLAY</a>, <a href=\"#!/api/Ext.dom.Element-static-property-OFFSETS\" rel=\"Ext.dom.Element-static-property-OFFSETS\" class=\"docClass\">OFFSETS</a>, <a href=\"#!/api/Ext.dom.Element-static-property-CLIP\" rel=\"Ext.dom.Element-static-property-CLIP\" class=\"docClass\">CLIP</a>, or <a href=\"#!/api/Ext.dom.Element-static-property-OPACITY\" rel=\"Ext.dom.Element-static-property-OPACITY\" class=\"docClass\">OPACITY</a>.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element.VISIBILITY/Ext.dom.Element.DISPLAY/Ext.dom.Element.OFFSETS/Ext.dom.Element.CLIP/Ext.dom.Element.OPACITY","name":"mode","doc":"<p>The method by which the element will be <a href=\"#!/api/Ext.dom.Element-method-hide\" rel=\"Ext.dom.Element-method-hide\" class=\"docClass\">hidden</a> (you can\nalso use the <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a> or <a href=\"#!/api/Ext.dom.Element-method-toggle\" rel=\"Ext.dom.Element-method-toggle\" class=\"docClass\">toggle</a> method to toggle element\nvisibility).</p>\n","html_type":"Ext.dom.Element.VISIBILITY/Ext.dom.Element.DISPLAY/Ext.dom.Element.OFFSETS/Ext.dom.Element.CLIP/Ext.dom.Element.OPACITY","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-setVisibilityMode","owner":"Ext.dom.Element","overrides":null,"short_doc":"Use this to change the visibility mode between VISIBILITY,\nDISPLAY, OFFSETS, CLIP, or OPACITY. ...","html_type":null},{"tagname":"method","name":"setVisible","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9621}],"doc":"<p>Sets the visibility of the element (see details). If the visibilityMode is set\nto Element.DISPLAY, it will use the display property to hide the element,\notherwise it uses visibility. The default is to hide and show using the\nvisibility property.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"visible","doc":"<p>Whether the element is visible</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True for the default animation,\nor a standard Element animation config object.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","fixDisplay","getData","setDisplayed","setOpacity","setUnderlaysVisible","setVisibilityMode","setVisible"],"readonly":null,"required":null,"template":null,"id":"method-setVisible","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the visibility of the element (see details). ...","html_type":null},{"tagname":"method","name":"setWidth","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9719}],"doc":"<p>Set the width of this Element.</p>\n\n<pre><code>// change the width to 200px and animate with default configuration\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('elementId').setWidth(200, true);\n\n// change the width to 150px and animate with a custom configuration\n<a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a>('elId').setWidth(150, {\n    duration : 500, // animation will have a duration of .5 seconds\n    // will change the content to \"finished\"\n    callback: function(){ this.setHtml(\"finished\"); }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Number/String","name":"width","doc":"<p>The new width. This may be one of:</p>\n\n<ul>\n<li>A Number specifying the new width in pixels.</li>\n<li>A String used to set the CSS width style. Animation may <strong>not</strong> be used.</li>\n</ul>\n\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>a standard Element animation config object or <code>true</code>\nfor the default animation (<code>{duration: 350, easing: 'ease-in'}</code>)</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","callParent"],"readonly":null,"required":null,"template":null,"id":"method-setWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Set the width of this Element. ...","html_type":null},{"tagname":"method","name":"setX","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5692}],"doc":"<p>Sets this Element's page-level x coordinate</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setXY"],"readonly":null,"required":null,"template":null,"id":"method-setX","owner":"Ext.dom.Element","overrides":[{"name":"setX","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setX\" rel=\"Ext.util.Positionable-method-setX\" class=\"docClass\">Ext.util.Positionable.setX</a>"}],"short_doc":"Sets this Element's page-level x coordinate ...","html_type":null},{"tagname":"method","name":"setXY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5701}],"doc":"<p>Sets this Element's page-level x and y coordinates</p>\n","params":[{"tagname":"params","type":"Number[]","name":"xy","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["position","syncUnderlays","translatePoints"],"readonly":null,"required":null,"template":null,"id":"method-setXY","owner":"Ext.dom.Element","overrides":[{"name":"setXY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">Ext.util.Positionable.setXY</a>"}],"short_doc":"Sets this Element's page-level x and y coordinates ...","html_type":null},{"tagname":"method","name":"setY","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5731}],"doc":"<p>Sets this Element's page-level y coordinate</p>\n","params":[{"tagname":"params","type":"Number","name":"y","doc":"\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setXY"],"readonly":null,"required":null,"template":null,"id":"method-setY","owner":"Ext.dom.Element","overrides":[{"name":"setY","owner":"Ext.util.Positionable","link":"<a href=\"#!/api/Ext.util.Positionable-method-setY\" rel=\"Ext.util.Positionable-method-setY\" class=\"docClass\">Ext.util.Positionable.setY</a>"}],"short_doc":"Sets this Element's page-level y coordinate ...","html_type":null},{"tagname":"method","name":"setZIndex","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5740}],"doc":"<p>Sets the z-index of this Element and synchronizes the z-index of shadow and/or\nshim if present.</p>\n","params":[{"tagname":"params","type":"Number","name":"zindex","doc":"<p>The new z-index to set</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setStyle"],"readonly":null,"required":null,"template":null,"id":"method-setZIndex","owner":"Ext.dom.Element","overrides":null,"short_doc":"Sets the z-index of this Element and synchronizes the z-index of shadow and/or\nshim if present. ...","html_type":null},{"tagname":"method","name":"shift","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10502}],"doc":"<p>Animates the transition of any combination of an element's dimensions,\nxy position and/or opacity. Any of these properties not specified in the\nconfig object will not be changed. This effect requires that at least one new\ndimension, position or opacity setting must be passed in on the config object\nin order for the function to have any effect. Usage:</p>\n\n<pre><code>// slide the element horizontally to x position 200\n// while changing the height and opacity\nel.shift({ x: 200, height: 50, opacity: .8 });\n\n// common config options shown with default values.\nel.shift({\n    width: [element's width],\n    height: [element's height],\n    x: [element's x position],\n    y: [element's y position],\n    opacity: [element's opacity],\n    easing: 'easeOut',\n    duration: 350\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Just use <a href=\"#!/api/Ext.dom.Element-method-animate\" rel=\"Ext.dom.Element-method-animate\" class=\"docClass\">animate</a> instead.</p>\n","version":"4.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate"],"readonly":null,"required":null,"template":null,"id":"method-shift","owner":"Ext.dom.Element","overrides":null,"short_doc":"Animates the transition of any combination of an element's dimensions,\nxy position and/or opacity. ...","html_type":null},{"tagname":"method","name":"show","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9787}],"doc":"<p>Show this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", \"offsets\", or \"clip\". See <a href=\"#!/api/Ext.dom.Element-method-setVisible\" rel=\"Ext.dom.Element-method-setVisible\" class=\"docClass\">setVisible</a>.</p>\n","params":[{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>true for the default animation or a standard\nElement animation config object.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["anim","setVisible"],"readonly":null,"required":null,"template":null,"id":"method-show","owner":"Ext.dom.Element","overrides":null,"short_doc":"Show this element - Uses display mode to determine whether to use \"display\",\n\"visibility\", \"offsets\", or \"clip\". ...","html_type":null},{"tagname":"method","name":"slideIn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9809}],"doc":"<p>Slides the element into view. An anchor point can be optionally passed to set the point\nof origin for the slide effect. This function automatically handles wrapping the element\nwith a fixed-size container if needed. See the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> class overview\nfor valid anchor point options. Usage:</p>\n\n<pre><code>// default: slide the element in from the top\nel.slideIn();\n\n// custom: slide the element in from the right with a 2-second duration\nel.slideIn('r', { duration: 2000 });\n\n// common config options shown with default values\nel.slideIn('t', {\n    easing: 'easeOut',\n    duration: 500\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>One of the valid <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> anchor positions\n(defaults to top: 't')</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Boolean","name":"preserveScroll","doc":"<p>Set to true if preservation of any descendant\nelements' <code>scrollTop</code> values is required. By default the DOM wrapping operation\nperformed by <code>slideIn</code> and <code>slideOut</code> causes the browser to lose all scroll positions.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null}]},{"tagname":"params","type":"Boolean","name":"slideOut","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["anchorAnimX","animate","end"],"readonly":null,"required":null,"template":null,"id":"method-slideIn","owner":"Ext.dom.Element","overrides":null,"short_doc":"Slides the element into view. ...","html_type":null},{"tagname":"method","name":"slideOut","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10131}],"doc":"<p>Slides the element out of view. An anchor point can be optionally passed to set the end\npoint for the slide effect. When the effect is completed, the element will be hidden\n(visibility = 'hidden') but block elements will still take up space in the document.\nThe element must be removed from the DOM using the 'remove' config option if\ndesired. This function automatically handles wrapping the element with a fixed-size\ncontainer if needed. See the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> class overview for valid anchor point\noptions. Usage:</p>\n\n<pre><code>// default: slide the element out to the top\nel.slideOut();\n\n// custom: slide the element out to the right with a 2-second duration\nel.slideOut('r', { duration: 2000 });\n\n// common config options shown with default values\nel.slideOut('t', {\n    easing: 'easeOut',\n    duration: 500,\n    remove: false,\n    useDisplay: false\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"anchor","doc":"<p>One of the valid <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a> anchor positions\n(defaults to top: 't')</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["slideIn"],"readonly":null,"required":null,"template":null,"id":"method-slideOut","owner":"Ext.dom.Element","overrides":null,"short_doc":"Slides the element out of view. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-suspendEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends the firing of all events. ...","html_type":null},{"tagname":"method","name":"swallowEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5771}],"doc":"<p>Stops the specified event(s) from bubbling and optionally prevents the default action</p>\n\n<pre><code>var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    fields: ['name', 'email'],\n    data: [{\n        'name': 'Finn',\n        \"email\": \"finn@adventuretime.com\"\n    }]\n});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    title: 'Land of Ooo',\n    store: store,\n    columns: [{\n        text: 'Name',\n        dataIndex: 'name'\n    }, {\n        text: 'Email &lt;img style=\"vertical-align:middle;\" src=\"{some-image-src}\" /&gt;',\n        dataIndex: 'email',\n        flex: 1,\n        listeners: {\n            render: function(col) {\n                // Swallow the click event when the click occurs on the\n                // help icon - preventing the sorting of data by that\n                // column and instead performing an action specific to\n                // the help icon\n                var img = col.getEl().down('img');\n                img.swallowEvent(['click', 'mousedown'], true);\n                col.on('click', function() {\n                    // logic to show a help dialog\n                    console.log('image click handler');\n                }, col);\n            }\n        }\n    }],\n    height: 200,\n    width: 400,\n    renderTo: document.body\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventName","doc":"<p>an event / array of events to stop from bubbling</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p>true to prevent the default action too</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Object with a destroy method to unswallow events</p>\n","properties":[{"tagname":"return","type":"Function","name":"destroy","doc":"<p>method to clean up any listeners that are swallowing\nevents</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"}],"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["on"],"readonly":null,"required":null,"template":null,"id":"method-swallowEvent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Stops the specified event(s) from bubbling and optionally prevents the default action\n\nvar store = Ext.create('Ext.da...","html_type":null},{"tagname":"method","name":"swapCls","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5846}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"firstClass","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"secondClass","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"flag","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Mixed","name":"return","doc":"\n","properties":null,"html_type":"Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-swapCls","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"switchOff","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10164}],"doc":"<p>Blinks the element as if it was clicked and then collapses on its center (similar to\nswitching off a television). When the effect is completed, the element will be hidden\n(visibility = 'hidden') but block elements will still take up space in the document.\nThe element must be removed from the DOM using the 'remove' config option if desired.\nUsage:</p>\n\n<pre><code>// default\nel.switchOff();\n\n// all config options shown with default values\nel.switchOff({\n    easing: 'easeIn',\n    duration: .3,\n    remove: false,\n    useDisplay: false\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"options","doc":"<p>Object literal with any of the <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>\nconfig options</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["animate","end"],"readonly":null,"required":null,"template":null,"id":"method-switchOff","owner":"Ext.dom.Element","overrides":null,"short_doc":"Blinks the element as if it was clicked and then collapses on its center (similar to\nswitching off a television). ...","html_type":null},{"tagname":"method","name":"syncContent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10269}],"doc":"<p>Currently used for updating grid cells without modifying DOM structure</p>\n\n<p>Synchronizes content of this Element with the content of the passed element.</p>\n\n<p>Style and CSS class are copied from source into this Element, and contents are synced\nrecursively. If a child node is a text node, the textual data is copied.</p>\n","params":[{"tagname":null,"type":"Object","name":"source","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-syncContent","owner":"Ext.dom.Element","overrides":null,"short_doc":"Currently used for updating grid cells without modifying DOM structure\n\nSynchronizes content of this Element with the...","html_type":null},{"tagname":"method","name":"syncUnderlays","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5905}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY","isVisible"],"readonly":null,"required":null,"template":null,"id":"method-syncUnderlays","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"synchronize","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5875}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData"],"readonly":null,"required":null,"template":null,"id":"method-synchronize","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"toggle","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10353}],"doc":"<p>Toggles the element's visibility, depending on visibility mode.</p>\n","params":[{"tagname":"params","type":"Boolean/Object","name":"animate","doc":"<p>True for the default animation, or a standard Element\nanimation config object</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["anim","isVisible","setVisible"],"readonly":null,"required":null,"template":null,"id":"method-toggle","owner":"Ext.dom.Element","overrides":null,"short_doc":"Toggles the element's visibility, depending on visibility mode. ...","html_type":null},{"tagname":"method","name":"toggleCls","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5932}],"doc":"<p>Toggles the specified CSS class on this element (removes it if it already exists,\notherwise adds it).</p>\n","params":[{"tagname":"params","type":"String","name":"className","doc":"<p>The CSS class to toggle.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"state","doc":"<p>If specified as <code>true</code>, causes the class to be added.\nIf specified as <code>false</code>, causes the class to be removed.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","hasCls","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-toggleCls","owner":"Ext.dom.Element","overrides":null,"short_doc":"Toggles the specified CSS class on this element (removes it if it already exists,\notherwise adds it). ...","html_type":null},{"tagname":"method","name":"translatePoints","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":881}],"doc":"<p>Translates the passed page coordinates into left/top css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The page y, required if x is not an array</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object with left and top properties. e.g.\n{left: (value), top: (value)}</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["translateXY"],"readonly":null,"required":null,"template":null,"id":"method-translatePoints","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Translates the passed page coordinates into left/top css values for the element ...","html_type":null},{"tagname":"method","name":"translateXY","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/util/Positionable.js","linenr":897}],"doc":"<p>Translates the passed page coordinates into x and y css values for the element</p>\n","params":[{"tagname":"params","type":"Number/Array","name":"x","doc":"<p>The page x or an array containing [x, y]</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The page y, required if x is not an array</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object with x and y properties. e.g.\n{x: (value), y: (value)}</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getXY"],"readonly":null,"required":null,"template":null,"id":"method-translateXY","owner":"Ext.util.Positionable","overrides":null,"short_doc":"Translates the passed page coordinates into x and y css values for the element ...","html_type":null},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-un","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeListener. ...","html_type":null},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unclip","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10396}],"doc":"<p>Return clipping (overflow) to original clipping before <a href=\"#!/api/Ext.dom.Element-method-clip\" rel=\"Ext.dom.Element-method-clip\" class=\"docClass\">clip</a> was called</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","setStyle"],"readonly":null,"required":null,"template":null,"id":"method-unclip","owner":"Ext.dom.Element","overrides":null,"short_doc":"Return clipping (overflow) to original clipping before clip was called ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"unmask","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":10367}],"doc":"<p>Hides a previously applied mask.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","removeCls","restoreTabbableState"],"readonly":null,"required":null,"template":null,"id":"method-unmask","owner":"Ext.dom.Element","overrides":null,"short_doc":"Hides a previously applied mask. ...","html_type":null},{"tagname":"method","name":"unmaskIframes","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1665}],"doc":"<p>Unmask iframes when shim is true. See <a href=\"#!/api/Ext.util.Floating-cfg-shim\" rel=\"Ext.util.Floating-cfg-shim\" class=\"docClass\">Ext.util.Floating.shim</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unmaskIframes","owner":"Ext.dom.Element","overrides":null,"short_doc":"Unmask iframes when shim is true. ...","html_type":null},{"tagname":"method","name":"unselectable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1772}],"doc":"<p>Disables text selection for this element (normalized across browsers)</p>\n","params":[],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addCls","removeCls"],"readonly":null,"required":null,"template":null,"id":"method-unselectable","owner":"Ext.dom.Element","overrides":null,"short_doc":"Disables text selection for this element (normalized across browsers) ...","html_type":null},{"tagname":"method","name":"unwrap","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":5974}],"doc":"\n","params":[],"return":{"type":"Ext.dom.Element","name":null,"doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["contains"],"readonly":null,"required":null,"template":null,"id":"method-unwrap","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"up","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6041}],"doc":"<p>Walks up the dom looking for a parent node that matches the passed simple selector\n(e.g. 'div.some-class' or 'span:first-child').\nThis is a shortcut for findParentNode() that always returns an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"simpleSelector","doc":"<p>The simple selector to test. See <a href=\"#!/api/Ext.dom.Query\" rel=\"Ext.dom.Query\" class=\"docClass\">Ext.dom.Query</a>\nfor information about simple selectors.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number/String/HTMLElement/Ext.dom.Element","name":"limit","doc":"<p>The max depth to search as a number or an element that causes the upward\ntraversal to stop and is <strong>not</strong> considered for inclusion as the result.\n(defaults to 50 || document.documentElement)</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return the DOM node instead of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The matching DOM node (or HTMLElement if\n<em>returnDom</em> is <em>true</em>).  Or null if no match was found.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["findParentNode"],"readonly":null,"required":null,"template":null,"id":"method-up","owner":"Ext.dom.Element","overrides":null,"short_doc":"Walks up the dom looking for a parent node that matches the passed simple selector\n(e.g. ...","html_type":null},{"tagname":"method","name":"update","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6059}],"doc":"<p>Updates the innerHTML of this element, optionally searching for and processing scripts.</p>\n","params":[{"tagname":"params","type":"String","name":"html","doc":"<p>The new HTML</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"loadScripts","doc":"<p>Pass <code>true</code> to look for and process scripts.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>For async script loading you can be notified\nwhen the update completes.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which to execute\nthe callback.</p>\n\n\n\n\n<p>Also used as the scope for any <em>inline</em> script source if the <code>loadScripts</code> parameter\nis <code>true</code>. Scripts with a <code>src</code> attribute cannot be executed in this scope.</p>\n\n\n\n\n<p>Defaults to this Element.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"`this`","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>this</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-setHtml\" rel=\"Ext.dom.Element-method-setHtml\" class=\"docClass\">setHtml</a> instead.</p>\n","version":"5.0.0"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["setHtml"],"readonly":null,"required":null,"template":null,"id":"method-update","owner":"Ext.dom.Element","overrides":null,"short_doc":"Updates the innerHTML of this element, optionally searching for and processing scripts. ...","html_type":null},{"tagname":"method","name":"updateText","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":9362}],"doc":"<p>Updates the <em>text</em> value of this element.\nReplaces the content of this element with a <em>single text node</em> containing\nthe passed text.</p>\n","params":[{"tagname":"params","type":"String","name":"text","doc":"<p>The text to display in this Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["empty"],"readonly":null,"required":null,"template":null,"id":"method-updateText","owner":"Ext.dom.Element","overrides":null,"short_doc":"Updates the text value of this element. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"wrap","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":6068}],"doc":"<p>Creates and wraps this element with another element</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"<p>DomHelper element config object for the wrapper element or null\nfor an empty div</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>True to return the raw DOM element instead of\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"String","name":"selector","doc":"<p>A CSS selector to select a descendant node within the created\nelement to use as the wrapping element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"HTMLElement/Ext.dom.Element","name":"return","doc":"<p>The newly created wrapper element</p>\n","properties":null,"html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["contains"],"readonly":null,"required":null,"template":null,"id":"method-wrap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Creates and wraps this element with another element ...","html_type":null},{"tagname":"method","name":"_onWindowFocusChange","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1455}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"e","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-_onWindowFocusChange","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"_onWindowResize","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1471}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-_onWindowResize","owner":"Ext.dom.Element","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"addUnits","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":822}],"doc":"<p>Test if size has a unit, otherwise appends the passed unit string, or the default\nfor this Element.</p>\n","params":[{"tagname":"params","type":"Object","name":"size","doc":"<p>The size to set.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"units","doc":"<p>The units to append to a numeric size value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addUnits","owner":"Ext.dom.Element","overrides":null,"short_doc":"Test if size has a unit, otherwise appends the passed unit string, or the default\nfor this Element. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":869}],"doc":"<p>Create method to add support for a DomHelper config. Creates\nand appends elements/children using document.createElement/appendChild.\nThis method is used by the modern toolkit for a significant performance gain\nin webkit browsers as opposed to using DomQuery which generates HTML\nmarkup and sets it as innerHTML.</p>\n\n<p>However, the createElement/appendChild\nmethod of creating elements is significantly slower in all versions of IE\nat the time of this writing (6 - 11), so classic toolkit should not use this method,\nbut should instead use DomHelper methods, or Element methods that use\nDomHelper under the hood (e.g. createChild).\nsee https:*fiddle.sencha.com/#fiddle/tj</p>\n","params":[{"tagname":null,"type":"Object","name":"attributes","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"domNode","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"namespace","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["create","get"],"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.dom.Element","overrides":[{"name":"create","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-static-method-create\" rel=\"Ext.Base-static-method-create\" class=\"docClass\">Ext.Base.create</a>"}],"short_doc":"Create method to add support for a DomHelper config. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"fly","autodetected":{"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":995}],"doc":"<p>Gets the globally shared flyweight Element, with the passed node as the active\nelement. Do not store a reference to this element - the dom node can be overwritten\nby other code. <a href=\"#!/api/Ext-method-fly\" rel=\"Ext-method-fly\" class=\"docClass\">Ext.fly</a> is alias for <a href=\"#!/api/Ext.dom.Element-static-method-fly\" rel=\"Ext.dom.Element-static-method-fly\" class=\"docClass\">fly</a>.</p>\n\n<p>Use this to make one-time references to DOM elements which are not going to be\naccessed again either by application code, or by Ext's classes. If accessing an\nelement which will be processed regularly, then <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a> will be\nmore appropriate to take advantage of the caching provided by the\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> class.</p>\n\n<p>If this method is called with and id or element that has already been cached by\na previous call to <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>() it will return the cached Element instead of the\nflyweight instance.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement","name":"dom","doc":"<p>The DOM node or <code>id</code>.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"named","doc":"<p>Allows for creation of named reusable flyweights to prevent\nconflicts (e.g. internally Ext uses \"_global\").</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The shared Element object (or <code>null</code> if no matching\nelement was found).</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-fly","owner":"Ext.dom.Element","overrides":null,"short_doc":"Gets the globally shared flyweight Element, with the passed node as the active\nelement. ...","html_type":null},{"tagname":"method","name":"fromPagePoint","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1044}],"doc":"<p>Returns the top Element that is located at the passed coordinates taking into account\nthe scroll position of the document.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The y coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p><code>true</code> to return a DOM element.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The found element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-fromPagePoint","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the top Element that is located at the passed coordinates taking into account\nthe scroll position of the docu...","html_type":null},{"tagname":"method","name":"fromPoint","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1005}],"doc":"<p>Returns the top Element that is located at the passed coordinates in the current\nviewport.</p>\n","params":[{"tagname":"params","type":"Number","name":"x","doc":"<p>The x coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Number","name":"y","doc":"<p>The y coordinate</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p><code>true</code> to return a DOM element.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The found element.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-fromPoint","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the top Element that is located at the passed coordinates in the current\nviewport. ...","html_type":null},{"tagname":"method","name":"get","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1062}],"doc":"<p>Retrieves <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> objects. <a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a> is alias for\n<a href=\"#!/api/Ext.dom.Element-static-method-get\" rel=\"Ext.dom.Element-static-method-get\" class=\"docClass\">get</a>.</p>\n\n<p><strong>This method does not retrieve <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a>s.</strong> This method\nretrieves <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> objects which encapsulate DOM elements. To retrieve\na Component by its ID, use <a href=\"#!/api/Ext.ComponentManager-method-get\" rel=\"Ext.ComponentManager-method-get\" class=\"docClass\">Ext.ComponentManager.get</a>.</p>\n\n<p>When passing an id, it should not include the <code>#</code> character that is used for a css\nselector.</p>\n\n<pre><code>// For an element with id 'foo'\n<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('foo'); // Correct\n<a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>('#foo'); // Incorrect\n</code></pre>\n\n<p>Uses simple caching to consistently return the same object. Automatically fixes\nif an object was recreated with the same id via AJAX or DOM.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement/Ext.dom.Element","name":"el","doc":"<p>The <code>id</code> of the node, a DOM Node\nor an existing Element.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element","name":"return","doc":"<p>The Element object (or <code>null</code> if no matching element\nwas found).</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["select"],"readonly":null,"required":null,"template":null,"id":"static-method-get","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves Ext.dom.Element objects. ...","html_type":null},{"tagname":"method","name":"getActiveElement","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1220}],"doc":"<p>Returns the active element in the DOM. If the browser supports activeElement\non the document, this is returned. If not, the focus is tracked and the active\nelement is maintained internally.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"asElement","doc":"<p>Return <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instance instead of DOM node.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"HTMLElement","name":"return","doc":"<p>The active (focused) element in the document.</p>\n","properties":null,"html_type":"HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getActiveElement","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the active element in the DOM. ...","html_type":null},{"tagname":"method","name":"getCommonAncestor","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1724}],"doc":"<p>Returns the common ancestor of the two passed elements.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element/HTMLElement","name":"nodeA","doc":"\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.dom.Element/HTMLElement","name":"nodeB","doc":"\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"returnDom","doc":"<p>Pass <code>true</code> to return a DOM element. Otherwise an\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> will be returned.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.dom.Element/HTMLElement","name":"return","doc":"<p>The common ancestor.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>/HTMLElement"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getCommonAncestor","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the common ancestor of the two passed elements. ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getDocumentHeight","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1245}],"doc":"<p>Retrieves the document height</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>documentHeight</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getViewportHeight"],"readonly":null,"required":null,"template":null,"id":"static-method-getDocumentHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the document height ...","html_type":null},{"tagname":"method","name":"getDocumentWidth","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1256}],"doc":"<p>Retrieves the document width</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>documentWidth</p>\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getViewportWidth"],"readonly":null,"required":null,"template":null,"id":"static-method-getDocumentWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the document width ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"getOrientation","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1267}],"doc":"<p>Retrieves the current orientation of the window. This is calculated by\ndetermining if the height is greater than the width.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>Orientation of window: 'portrait' or 'landscape'</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getOrientation","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the current orientation of the window. ...","html_type":null},{"tagname":"method","name":"getViewSize","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1375}],"doc":"<p>Retrieves the viewport size of the window.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>object containing width and height properties</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getViewSize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the viewport size of the window. ...","html_type":null},{"tagname":"method","name":"getViewportHeight","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1283}],"doc":"<p>Retrieves the viewport height of the window.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>viewportHeight</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getViewportHeight","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the viewport height of the window. ...","html_type":null},{"tagname":"method","name":"getViewportScale","autodetected":{"inheritdoc":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1319}],"doc":"<p>Returns the current zoom level of the viewport as a ratio of page pixels to\nscreen pixels.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":["getViewportTouchScale"],"readonly":null,"required":null,"template":null,"id":"static-method-getViewportScale","owner":"Ext.dom.Element","overrides":null,"short_doc":"Returns the current zoom level of the viewport as a ratio of page pixels to\nscreen pixels. ...","html_type":null},{"tagname":"method","name":"getViewportWidth","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1301}],"doc":"<p>Retrieves the viewport width of the window.</p>\n","params":[],"return":{"type":"Number","name":"return","doc":"<p>viewportWidth</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getViewportWidth","owner":"Ext.dom.Element","overrides":null,"short_doc":"Retrieves the viewport width of the window. ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"normalize","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1437}],"doc":"<p>Normalizes CSS property keys from dash delimited to camel case JavaScript Syntax.\nFor example:</p>\n\n<ul>\n<li>border-width -> borderWidth</li>\n<li>padding-top -> paddingTop</li>\n</ul>\n\n","params":[{"tagname":"params","type":"String","name":"prop","doc":"<p>The property to normalize</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The normalized string</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-normalize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Normalizes CSS property keys from dash delimited to camel case JavaScript Syntax. ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"parseBox","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1525}],"doc":"<p>Parses a number or string representing margin sizes into an object. Supports\nCSS-style margin declarations (e.g. 10, \"10\", \"10 10\", \"10 10 10\" and \"10 10 10 10\"\nare all valid options and would return the same result)</p>\n","params":[{"tagname":"params","type":"Number/String","name":"box","doc":"<p>The encoded margins</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>An object with margin sizes for top, right, bottom and left\ncontaining the unit</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-parseBox","owner":"Ext.dom.Element","overrides":null,"short_doc":"Parses a number or string representing margin sizes into an object. ...","html_type":null},{"tagname":"method","name":"parseStyles","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1576}],"doc":"<p>Converts a CSS string into an object with a property for each style.</p>\n\n<p>The sample code below would return an object with 2 properties, one\nfor background-color and one for color.</p>\n\n<pre><code>var css = 'background-color: red; color: blue;';\nconsole.log(<a href=\"#!/api/Ext.dom.Element-static-method-parseStyles\" rel=\"Ext.dom.Element-static-method-parseStyles\" class=\"docClass\">Ext.dom.Element.parseStyles</a>(css));\n</code></pre>\n","params":[{"tagname":"params","type":"String","name":"styles","doc":"<p>A CSS string</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>styles</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-parseStyles","owner":"Ext.dom.Element","overrides":null,"short_doc":"Converts a CSS string into an object with a property for each style. ...","html_type":null},{"tagname":"method","name":"query","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1628}],"doc":"<p>Selects child nodes of a given root based on the passed CSS selector.</p>\n","params":[{"tagname":"params","type":"String","name":"selector","doc":"<p>The CSS selector.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"asDom","doc":"<p><code>false</code> to return an array of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a></p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null},{"tagname":"params","type":"HTMLElement/String","name":"root","doc":"<p>The root element of the query or id of\nthe root</p>\n","html_type":"HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"HTMLElement[]/Ext.dom.Element[]","name":"return","doc":"<p>An Array of elements that match\nthe selector.  If there are no matches, an empty Array is returned.</p>\n","properties":null,"html_type":"HTMLElement[]/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-query","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects child nodes of a given root based on the passed CSS selector. ...","html_type":null},{"tagname":"method","name":"select","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1609}],"doc":"<p>Selects elements based on the passed CSS selector to enable\n<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> methods to be applied to many related\nelements in one statement through the returned\n<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">CompositeElementLite</a> object.</p>\n","params":[{"tagname":"params","type":"String/HTMLElement[]","name":"selector","doc":"<p>The CSS selector or an array of\nelements</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/HTMLElement[]","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"composite","doc":"<p>Return a CompositeElement as opposed to\na CompositeElementLite. Defaults to false.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"HTMLElement/String","name":"root","doc":"<p>The root element of the query or id of\nthe root</p>\n","html_type":"HTMLElement/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.dom.CompositeElementLite/Ext.dom.CompositeElement","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.dom.CompositeElementLite\" rel=\"Ext.dom.CompositeElementLite\" class=\"docClass\">Ext.dom.CompositeElementLite</a>/<a href=\"#!/api/Ext.dom.CompositeElement\" rel=\"Ext.dom.CompositeElement\" class=\"docClass\">Ext.dom.CompositeElement</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-select","owner":"Ext.dom.Element","overrides":null,"short_doc":"Selects elements based on the passed CSS selector to enable\nElement methods to be applied to many related\nelements in...","html_type":null},{"tagname":"method","name":"serializeForm","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1678}],"doc":"<p>Serializes a DOM form into a url encoded string</p>\n","params":[{"tagname":"params","type":"Object","name":"form","doc":"<p>The form</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The url encoded form</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-serializeForm","owner":"Ext.dom.Element","overrides":null,"short_doc":"Serializes a DOM form into a url encoded string ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"unitizeBox","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":1643}],"doc":"<p>Parses a number or string representing margin sizes into an object. Supports\nCSS-style margin declarations (e.g. 10, \"10\", \"10 10\", \"10 10 10\" and \"10 10 10 10\"\nare all valid options and would return the same result)</p>\n","params":[{"tagname":"params","type":"Number/String/Object","name":"box","doc":"<p>The encoded margins, or an object with top, right,</p>\n","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"units","doc":"<p>The type of units to add</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>An string with unitized (px if units is not specified) metrics for\ntop, right, bottom and left</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addUnits","parseBox"],"readonly":null,"required":null,"template":null,"id":"static-method-unitizeBox","owner":"Ext.dom.Element","overrides":null,"short_doc":"Parses a number or string representing margin sizes into an object. ...","html_type":null},{"tagname":"event","name":"DOMActivate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":554}],"doc":"<p>Where supported. Fires when an element is activated, for instance, through a mouse click\nor a keypress.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMActivate","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMAttrModified","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":593}],"doc":"<p>Where supported. Fires when an attribute has been modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMAttrModified","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMCharacterDataModified","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":599}],"doc":"<p>Where supported. Fires when the character data has been modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMCharacterDataModified","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMFocusIn","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":541}],"doc":"<p>Where supported. Similar to HTML focus event, but can be applied to any focusable\nelement.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMFocusIn","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMFocusOut","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":548}],"doc":"<p>Where supported. Similar to HTML blur event, but can be applied to any focusable element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMFocusOut","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMNodeInserted","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":569}],"doc":"<p>Where supported. Fires when a node has been added as a child of another node.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMNodeInserted","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMNodeInsertedIntoDocument","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":587}],"doc":"<p>Where supported. Fires when a node is being inserted into a document.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMNodeInsertedIntoDocument","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMNodeRemoved","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":575}],"doc":"<p>Where supported. Fires when a descendant node of the element is removed.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMNodeRemoved","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMNodeRemovedFromDocument","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":581}],"doc":"<p>Where supported. Fires when a node is being removed from a document.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMNodeRemovedFromDocument","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"DOMSubtreeModified","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":563}],"doc":"<p>Where supported. Fires when the subtree is modified.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-DOMSubtreeModified","owner":"Ext.dom.Element","overrides":null,"short_doc":"Where supported. ...","html_type":null},{"tagname":"event","name":"abort","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":449}],"doc":"<p>Fires when an object/image is stopped from loading before completely loaded.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-abort","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when an object/image is stopped from loading before completely loaded. ...","html_type":null},{"tagname":"event","name":"blur","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":522}],"doc":"<p>Fires when an element loses focus either via the pointing device or by tabbing\nnavigation.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-blur","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when an element loses focus either via the pointing device or by tabbing\nnavigation. ...","html_type":null},{"tagname":"event","name":"change","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":497}],"doc":"<p>Fires when a control loses the input focus and its value has been modified since gaining\nfocus.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-change","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a control loses the input focus and its value has been modified since gaining\nfocus. ...","html_type":null},{"tagname":"event","name":"click","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":353}],"doc":"<p>Fires when a mouse click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-click","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mouse click is detected within the element. ...","html_type":null},{"tagname":"event","name":"contextmenu","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":359}],"doc":"<p>Fires when a right click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-contextmenu","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a right click is detected within the element. ...","html_type":null},{"tagname":"event","name":"dblclick","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":365}],"doc":"<p>Fires when a mouse double click is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-dblclick","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mouse double click is detected within the element. ...","html_type":null},{"tagname":"event","name":"doubletap","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/DoubleTap.js","linenr":36}],"doc":"<p>Fires when there is a double tap.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-doubletap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when there is a double tap. ...","html_type":null},{"tagname":"event","name":"error","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":455}],"doc":"<p>Fires when an object/image/frame cannot be loaded properly.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-error","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when an object/image/frame cannot be loaded properly. ...","html_type":null},{"tagname":"event","name":"focus","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":516}],"doc":"<p>Fires when an element receives focus either via the pointing device or by tab navigation.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focus","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when an element receives focus either via the pointing device or by tab navigation. ...","html_type":null},{"tagname":"event","name":"focusmove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":529}],"doc":"<p>Fires when focus is moved <em>within</em> an element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Ext.dom.Element","name":"target","doc":"<p>The <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> element which <em>recieved</em>\nfocus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","properties":null},{"tagname":"params","type":"Ext.dom.Element","name":"relatedTarget","doc":"<p>The <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> element which <em>lost</em>\nfocus.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","properties":null}]},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-focusmove","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when focus is moved within an element. ...","html_type":null},{"tagname":"event","name":"keydown","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":421}],"doc":"<p>Fires when a keydown is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-keydown","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a keydown is detected within the element. ...","html_type":null},{"tagname":"event","name":"keypress","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":415}],"doc":"<p>Fires when a keypress is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-keypress","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a keypress is detected within the element. ...","html_type":null},{"tagname":"event","name":"keyup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":427}],"doc":"<p>Fires when a keyup is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-keyup","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a keyup is detected within the element. ...","html_type":null},{"tagname":"event","name":"load","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":435}],"doc":"<p>Fires when the user agent finishes loading all content within the element. Only supported\nby window, frames, objects and images.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-load","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when the user agent finishes loading all content within the element. ...","html_type":null},{"tagname":"event","name":"longpress","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/LongPress.js","linenr":16}],"doc":"<p>Fires when you touch and hold still for more than 1 second.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-longpress","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when you touch and hold still for more than 1 second. ...","html_type":null},{"tagname":"event","name":"mousedown","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":371}],"doc":"<p>Fires when a mousedown is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mousedown","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mousedown is detected within the element. ...","html_type":null},{"tagname":"event","name":"mouseenter","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":401}],"doc":"<p>Fires when the mouse enters the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mouseenter","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when the mouse enters the element. ...","html_type":null},{"tagname":"event","name":"mouseleave","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":407}],"doc":"<p>Fires when the mouse leaves the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mouseleave","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when the mouse leaves the element. ...","html_type":null},{"tagname":"event","name":"mousemove","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":389}],"doc":"<p>Fires when a mousemove is detected with the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mousemove","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mousemove is detected with the element. ...","html_type":null},{"tagname":"event","name":"mouseout","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":395}],"doc":"<p>Fires when a mouseout is detected with the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mouseout","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mouseout is detected with the element. ...","html_type":null},{"tagname":"event","name":"mouseover","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":383}],"doc":"<p>Fires when a mouseover is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mouseover","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mouseover is detected within the element. ...","html_type":null},{"tagname":"event","name":"mouseup","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":377}],"doc":"<p>Fires when a mouseup is detected within the element.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-mouseup","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a mouseup is detected within the element. ...","html_type":null},{"tagname":"event","name":"painted","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":461}],"doc":"<p>Fires whenever this Element actually becomes visible (painted) on the screen. This is\nuseful when you need to perform 'read' operations on the DOM element, i.e: calculating\nnatural sizes and positioning.</p>\n\n<p><strong>Note:</strong> This event is not available to be used with event delegation. Instead <code>painted</code>\nonly fires if you explicitly add at least one listener to it, for performance reasons.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"this","doc":"<p>The component instance.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-painted","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires whenever this Element actually becomes visible (painted) on the screen. ...","html_type":null},{"tagname":"event","name":"pinch","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Pinch.js","linenr":20}],"doc":"<p>Fires continuously when there is pinching (the touch must move for this to be fired).</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-pinch","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires continuously when there is pinching (the touch must move for this to be fired). ...","html_type":null},{"tagname":"event","name":"pinchend","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Pinch.js","linenr":29}],"doc":"<p>Fires when a pinch has ended.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-pinchend","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a pinch has ended. ...","html_type":null},{"tagname":"event","name":"pinchstart","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Pinch.js","linenr":11}],"doc":"<p>Fired once when a pinch has started.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-pinchstart","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fired once when a pinch has started. ...","html_type":null},{"tagname":"event","name":"reset","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":510}],"doc":"<p>Fires when a form is reset.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-reset","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a form is reset. ...","html_type":null},{"tagname":"event","name":"resize","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":472}],"doc":"<p>Important note: For the best performance on mobile devices, use this only when you\nabsolutely need to monitor a Element's size.</p>\n\n<p><strong>Note:</strong> This event is not available to be used with event delegation. Instead <code>resize</code>\nonly fires if you explicitly add at least one listener to it, for performance reasons.</p>\n","params":[{"tagname":"params","type":"Ext.dom.Element","name":"this","doc":"<p>The component instance.</p>\n","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"info","doc":"<p>The element's new size parameters.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-resize","owner":"Ext.dom.Element","overrides":null,"short_doc":"Important note: For the best performance on mobile devices, use this only when you\nabsolutely need to monitor a Eleme...","html_type":null},{"tagname":"event","name":"rotate","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Rotate.js","linenr":20}],"doc":"<p>Fires continuously when there is rotation (the touch must move for this to be fired).\nWhen listening to this, ensure you know about the <a href=\"#!/api/Ext.event.Event-property-angle\" rel=\"Ext.event.Event-property-angle\" class=\"docClass\">Ext.event.Event.angle</a> and\n<a href=\"#!/api/Ext.event.Event-property-rotation\" rel=\"Ext.event.Event-property-rotation\" class=\"docClass\">Ext.event.Event.rotation</a> properties in the <code>event</code> object.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-rotate","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires continuously when there is rotation (the touch must move for this to be fired). ...","html_type":null},{"tagname":"event","name":"rotateend","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Rotate.js","linenr":31}],"doc":"<p>Fires when a rotation event has ended.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-rotateend","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a rotation event has ended. ...","html_type":null},{"tagname":"event","name":"rotatestart","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Rotate.js","linenr":11}],"doc":"<p>Fired once when a rotation has started.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-rotatestart","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fired once when a rotation has started. ...","html_type":null},{"tagname":"event","name":"scroll","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":483}],"doc":"<p>Fires when a document view is scrolled.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-scroll","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a document view is scrolled. ...","html_type":null},{"tagname":"event","name":"select","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":491}],"doc":"<p>Fires when a user selects some text in a text field, including input and textarea.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-select","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a user selects some text in a text field, including input and textarea. ...","html_type":null},{"tagname":"event","name":"singletap","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/DoubleTap.js","linenr":27}],"doc":"<p>Fires when there is a single tap.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-singletap","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when there is a single tap. ...","html_type":null},{"tagname":"event","name":"submit","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":504}],"doc":"<p>Fires when a form is submitted.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-submit","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when a form is submitted. ...","html_type":null},{"tagname":"event","name":"swipe","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/Swipe.js","linenr":11}],"doc":"<p>Fires when there is a swipe\nWhen listening to this, ensure you know about the <a href=\"#!/api/Ext.event.Event-property-direction\" rel=\"Ext.event.Event-property-direction\" class=\"docClass\">Ext.event.Event.direction</a> property\nin the <code>event</code> object.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-swipe","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when there is a swipe\nWhen listening to this, ensure you know about the Ext.event.Event.direction property\nin t...","html_type":null},{"tagname":"event","name":"taphold","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/event/gesture/LongPress.js","linenr":25}],"doc":"<p>Fires when you touch and hold still for more than 1 second.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"event","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> event encapsulating the DOM event.</p>\n\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"node","doc":"<p>The target of the event.</p>\n\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.mixin.Observable.addListener</a>.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-taphold","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when you touch and hold still for more than 1 second. ...","html_type":null},{"tagname":"event","name":"unload","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/dom/Element.js","linenr":442}],"doc":"<p>Fires when the user agent removes all content from a window or frame. For elements, it\nfires when the target element or any of its content has been removed.</p>\n","params":[{"tagname":"params","type":"Ext.event.Event","name":"e","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a> encapsulating the DOM event.</p>\n","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.event.Event</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"HTMLElement","name":"t","doc":"<p>The target of the event.</p>\n","html_type":"HTMLElement","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-unload","owner":"Ext.dom.Element","overrides":null,"short_doc":"Fires when the user agent removes all content from a window or frame. ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.dom.Element","component":false,"short_doc":"Encapsulates a DOM element, adding simple DOM manipulation facilities, normalizing for browser\ndifferences. ...","deprecated":null}