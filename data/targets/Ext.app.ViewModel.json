{"tagname":"class","name":"Ext.app.ViewModel","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1}],"doc":"<p>This class manages arbitrary data and its relationship to data models. Instances of\n<code>ViewModel</code> are associated with some <code>Component</code> and then used by their child items\nfor the purposes of Data Binding.</p>\n\n<h1>Binding</h1>\n\n<p>The most commonly used aspect of a <code>ViewModel</code> is the <code>bind</code> method. This method takes\na \"bind descriptor\" (see below) and a callback to call when the data indicated by the\nbind descriptor either becomes available or changes.</p>\n\n<p>The <code>bind</code> method, based on the bind descriptor given, will return different types of\n\"binding\" objects. These objects maintain the connection between the requested data and\nthe callback. Bindings ultimately derive from <code><a href=\"#!/api/Ext.app.bind.BaseBinding\" rel=\"Ext.app.bind.BaseBinding\" class=\"docClass\">Ext.app.bind.BaseBinding</a></code>\nwhich provides several methods to help manage the binding.</p>\n\n<p>Perhaps the most important method is <code>destroy</code>. When the binding is no longer needed\nit is important to remember to <code>destroy</code> it. Leaking bindings can cause performance\nproblems or worse when callbacks are called at unexpected times.</p>\n\n<p>The types of bindings produced by <code>bind</code> are:</p>\n\n<ul>\n<li><code><a href=\"#!/api/Ext.app.bind.Binding\" rel=\"Ext.app.bind.Binding\" class=\"docClass\">Ext.app.bind.Binding</a></code></li>\n<li><code><a href=\"#!/api/Ext.app.bind.Multi\" rel=\"Ext.app.bind.Multi\" class=\"docClass\">Ext.app.bind.Multi</a></code></li>\n<li><code><a href=\"#!/api/Ext.app.bind.TemplateBinding\" rel=\"Ext.app.bind.TemplateBinding\" class=\"docClass\">Ext.app.bind.TemplateBinding</a></code></li>\n</ul>\n\n\n<h2>Bind Descriptors</h2>\n\n<p>A \"bind descriptor\" is a value (a String, an Object or an array of these) that describe\nthe desired data. Any piece of data in the <code>ViewModel</code> can be described by a bind\ndescriptor.</p>\n\n<h3>Textual Bind Descriptors</h3>\n\n<p>The simplest and most common form of bind descriptors are strings that look like an\n<code><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></code> containing text and tokens surrounded by \"{}\" with dot notation inside\nto traverse objects and their properties.</p>\n\n<p>For example:</p>\n\n<ul>\n<li><code>'Hello {user.name}!'</code></li>\n<li><code>'You have selected \"{selectedItem.text}\".'</code></li>\n<li><code>'{!isDisabled}'</code></li>\n<li><code>'{a &gt; b ? \"Bigger\" : \"Smaller\"}'</code></li>\n<li><code>'{user.groups}'</code></li>\n</ul>\n\n\n<p>All except the last are <code><a href=\"#!/api/Ext.app.bind.TemplateBinding\" rel=\"Ext.app.bind.TemplateBinding\" class=\"docClass\">template bindings</a></code>\nwhich use the familiar <code><a href=\"#!/api/Ext.Template\" rel=\"Ext.Template\" class=\"docClass\">Ext.Template</a></code> syntax with some slight differences. For more on\ntemplates see <code><a href=\"#!/api/Ext.app.bind.Template\" rel=\"Ext.app.bind.Template\" class=\"docClass\">Ext.app.bind.Template</a></code>.</p>\n\n<p>The last descriptor is called a \"direct bind descriptor\". This special form of\nbind maps one-to-one to some piece of data in the <code>ViewModel</code> and is managed by the\n<code><a href=\"#!/api/Ext.app.bind.Binding\" rel=\"Ext.app.bind.Binding\" class=\"docClass\">Ext.app.bind.Binding</a></code> class.</p>\n\n<h4>Two-Way Descriptors</h4>\n\n<p>A direct bind descriptor may be able to write back a value to the <code>ViewModel</code> as well\nas retrieve one. When this is the case, they are said to be \"two-way\". For example:</p>\n\n<pre><code> var binding = viewModel.bind('{s}', function(s) { console.log('s=' + s); });\n\n binding.setValue('abc');\n</code></pre>\n\n<p>Direct use of <code>ViewModel</code> in this way is not commonly needed because <code><a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a></code>\nautomates this process. For example, a <code>textfield</code> component understands when it is\ngiven a \"two-way\" binding and automatically synchronizes its value bidirectionally using\nthe above technique. For example:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>({\n     items: [{\n         xtype: 'textfield',\n         bind: '{s}'  // a two-way / direct bind descriptor\n     }]\n });\n</code></pre>\n\n<h3>Object and Array Descriptors / Multi-Bind</h3>\n\n<p>With two exceptions (see below) an Object is interpreted as a \"shape\" to produce by\ntreating each of its properties as individual bind descriptors. An object of the same\nshape is passed as the value of the bind except that each property is populated with\nthe appropriate value. Of course, this definition is recursive, so these properties\nmay also be objects.</p>\n\n<p>For example:</p>\n\n<pre><code> viewModel.bind({\n         x: '{x}',\n         foo: {\n             bar: 'Hello {foo.bar}'\n         }\n     },\n     function (obj) {\n         //  obj = {\n         //      x: 42,\n         //      foo: {\n         //          bar: 'Hello foobar'\n         //      }\n         //  }\n     });\n</code></pre>\n\n<p>Arrays are handled in the same way. Each element of the array is considered a bind\ndescriptor (recursively) and the value produced for the binding is an array with each\nelement set to the bound property.</p>\n\n<h3>Bind Options</h3>\n\n<p>One exception to the \"object is a multi-bind\" rule is when that object contains a\n<code>bindTo</code> property. When an object contains a <code>bindTo</code> property the object is understood\nto contain bind options and the value of <code>bindTo</code> is considered the actual bind\ndescriptor.</p>\n\n<p>For example:</p>\n\n<pre><code> viewModel.bind({\n         bindTo: '{x}',\n         single: true\n     },\n     function (x) {\n         console.log('x: ' + x); // only called once\n     });\n</code></pre>\n\n<p>The available bind options depend on the type of binding, but since all bindings\nderive from <code><a href=\"#!/api/Ext.app.bind.BaseBinding\" rel=\"Ext.app.bind.BaseBinding\" class=\"docClass\">Ext.app.bind.BaseBinding</a></code> its options are always applicable.\nFor a list of the other types of bindings, see above.</p>\n\n<h4>Deep Binding</h4>\n\n<p>When a direct bind is made and the bound property is an object, by default the binding\ncallback is only called when that reference changes. This is the most efficient way to\nunderstand a bind of this type, but sometimes you may need to be notified if any of the\nproperties of that object change.</p>\n\n<p>To do this, we create a \"deep bind\":</p>\n\n<pre><code> viewModel.bind({\n         bindTo: '{someObject}',\n         deep: true\n     },\n     function (someObject) {\n         // called when reference changes or *any* property changes\n     });\n</code></pre>\n\n<h4>Binding Timings</h4>\n\n<p>The <code>ViewModel</code> has a <a href=\"#!/api/Ext.app.ViewModel-cfg-scheduler\" rel=\"Ext.app.ViewModel-cfg-scheduler\" class=\"docClass\">scheduler</a> attached that is used to coordinate the firing of\nbindings.\nIt serves 2 main purposes:\n- To coordinate dependencies between bindings. This means bindings will be fired in an order\nsuch that the any dependencies for a binding are fired before the binding itself.\n- To batch binding firings. The scheduler runs on a short timer, so the following code will\nonly trigger a single binding (the last), the changes in between will never be triggered.</p>\n\n<p>Example:</p>\n\n<pre><code>viewModel.bind('{val}', function(v) {\n    console.log(v);\n});\nviewModel.set('val', 1);\nviewModel.set('val', 2);\nviewModel.set('val', 3);\nviewModel.set('val', 4);\n</code></pre>\n\n<p>The <code>ViewModel</code> can be forced to process by calling <code><a href=\"#!/api/Ext.app.ViewModel-method-notify\" rel=\"Ext.app.ViewModel-method-notify\" class=\"docClass\">notify</a></code>, which will force the\nscheduler to run immediately in the current state.</p>\n\n<pre><code>viewModel.bind('{val}', function(v) {\n    console.log(v);\n});\nviewModel.set('val', 1);\nviewModel.notify();\nviewModel.set('val', 2);\nviewModel.notify();\nviewModel.set('val', 3);\nviewModel.notify();\nviewModel.set('val', 4);\nviewModel.notify();\n</code></pre>\n\n<h4>Models, Stores and Associations</h4>\n\n<p>A <a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Session</a> manages model instances and their associations.\nThe <code>ViewModel</code> may be used with or without a <code>Session</code>. When a <code>Session</code> is attached, the\n<code>ViewModel</code> will always consult the <code>Session</code> to ask about records and stores. The <code>Session</code>\nensures that only a single instance of each model Type/Id combination is created. This is\nimportant when tracking changes in models so that we always have the same reference.</p>\n\n<p>A <code>ViewModel</code> provides functionality to easily consume the built in data package types\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> and <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>, as well as their associations.</p>\n\n<h3>Model Links</h3>\n\n<p>A model can be described declaratively using <a href=\"#!/api/Ext.app.ViewModel-cfg-links\" rel=\"Ext.app.ViewModel-cfg-links\" class=\"docClass\">links</a>. In the example code below,\nWe ask the <code>ViewModel</code> to construct a record of type <code>User</code> with <code>id: 17</code>. The model will be\nloaded from the server and the bindings will trigger once the load has completed. Similarly,\nwe could also attach a model instance to the <code>ViewModel</code> data directly.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name']\n});\n\nvar rec = new MyApp.model.User({\n    id: 12,\n    name: 'Foo'\n});\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    links: {\n        theUser: {\n            type: 'User',\n            id: 17\n        }\n    },\n    data: {\n        otherUser: rec\n    }\n});\nviewModel.bind('{theUser.name}', function(v) {\n    console.log(v);\n});\nviewModel.bind('{otherUser.name}', function(v) {\n    console.log(v);\n});\n</code></pre>\n\n<h3>Model Fields</h3>\n\n<p>Bindings have the functionality to inspect the parent values and resolve the underlying\nvalue dynamically. This behavior allows model fields to be interrogated as part of a binding.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name', 'age']\n});\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    links: {\n        theUser: {\n            type: 'User',\n            id: 22\n        }\n    }\n});\n\n// Server responds with:\n{\n    \"id\": 22,\n    \"name\": \"Foo\",\n    \"age\": 100\n}\n\nviewModel.bind('Hello {name}, you are {age} years old', function(v) {\n    console.log(v);\n});\n</code></pre>\n\n<h3>Record Properties</h3>\n\n<p>It is possible to bind to the certain state properties of a record. The available options are:\n- <code><a href=\"#!/api/Ext.data.Model-property-dirty\" rel=\"Ext.data.Model-property-dirty\" class=\"docClass\">dirty</a></code>\n- <code><a href=\"#!/api/Ext.data.Model-property-phantom\" rel=\"Ext.data.Model-property-phantom\" class=\"docClass\">phantom</a></code>\n- <code><a href=\"#!/api/Ext.data.Model-method-isValid\" rel=\"Ext.data.Model-method-isValid\" class=\"docClass\">valid</a></code></p>\n\n<p>Example usage:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [{\n        name: 'name',\n        validators: 'presence'\n    }, {\n        name: 'age',\n        validators: {\n           type: 'range',\n            min: 0\n         }\n    }]\n});\n\nvar rec = new MyApp.model.User();\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    data: {\n        theUser: rec\n    }\n});\n\nviewModel.bind({\n    dirty: '{theUser.dirty}',\n    phantom: '{theUser.phantom}',\n    valid: '{theUser.valid}'\n}, function(v) {\n    console.log(v.dirty, v.valid);\n});\n\nrec.set('name', 'Foo');\nviewModel.notify(); // dirty, not valid\nrec.set('age', 20);\nviewModel.notify(); // dirty, valid\nrec.reject();\nviewModel.notify(); // not dirty, not valid\n</code></pre>\n\n<h3>Advanced Record Binding</h3>\n\n<p>For accessing other record information that is not exposed by the binding API, formulas\ncan be used to achieve more advanced operations:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name', 'age']\n});\n\nvar rec = new MyApp.model.User();\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    formulas: {\n        isNameModified: {\n            bind: {\n                bindTo: '{theUser}',\n                deep: true\n            },\n            get: function(rec) {\n                return rec.isModified('name');\n            }\n        }\n    },\n    data: {\n        theUser: rec\n    }\n});\n\nviewModel.bind('{isNameModified}', function(modified) {\n    console.log(modified);\n});\nrec.set('name', 'Foo');\n</code></pre>\n\n<h3>Associations</h3>\n\n<p>In the same way as fields, the bindings can also traverse associations in a bind statement.\nThe <code>ViewModel</code> will handle the asynchronous loading of data and only present the value once\nthe full path has been loaded. For more information on associations see\n<a href=\"#!/api/Ext.data.schema.OneToOne\" rel=\"Ext.data.schema.OneToOne\" class=\"docClass\">OneToOne</a> and <a href=\"#!/api/Ext.data.schema.ManyToOne\" rel=\"Ext.data.schema.ManyToOne\" class=\"docClass\">ManyToOne</a>\nassociations.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name']\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Order', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['date', {\n        name: 'userId',\n        reference: 'User'\n    }]\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('OrderItem', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['price', 'qty', {\n        name: 'orderId',\n        reference: 'Order'\n    }]\n});\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    links: {\n        orderItem: {\n            type: 'OrderItem',\n            id: 13\n        }\n    }\n});\n// The viewmodel will handle both ways of loading the data:\n// a) If the data is loaded inline in a nested fashion it will\n//    not make requests for extra data\n// b) Only loading a single model at a time. So the Order will be loaded once\n//    the OrderItem returns. The User will be loaded once the Order loads.\nviewModel.bind('{orderItem.order.user.name}', function(name) {\n    console.log(name);\n});\n</code></pre>\n\n<h3>Stores</h3>\n\n<p>Stores can be created as part of the <code>ViewModel</code> definition. The definitions are processed\nlike bindings which allows for very powerful dynamic functionality.</p>\n\n<p>It is important to ensure that you name viewModel's data keys uniquely. If data is not named<br/>\nuniquely, binds and formulas may receive information from an unintended data source.<br/>\nThis applies to keys in the viewModel's data block, stores, and links configs.</p>\n\n<pre><code>var viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        users: {\n            model: 'User',\n            autoLoad: true,\n            filters: [{\n                property: 'createdDate',\n                value: '{createdFilter}',\n                operator: '&gt;'\n            }]\n        }\n    }\n});\n// Later on in our code, we set the date so that the store is created.\nviewModel.set('createdFilter', <a href=\"#!/api/Ext.Date-method-subtract\" rel=\"Ext.Date-method-subtract\" class=\"docClass\">Ext.Date.subtract</a>(new Date(), <a href=\"#!/api/Ext.Date-property-DAY\" rel=\"Ext.Date-property-DAY\" class=\"docClass\">Ext.Date.DAY</a>, 7));\n</code></pre>\n\n<p>See <a href=\"#!/api/Ext.app.ViewModel-cfg-stores\" rel=\"Ext.app.ViewModel-cfg-stores\" class=\"docClass\">stores</a> for more detail.</p>\n\n<h3>Store Properties</h3>\n\n<p>It is possible to bind to the certain state properties of the store. The available options are:\n- <code><a href=\"#!/api/Ext.data.Store-method-getCount\" rel=\"Ext.data.Store-method-getCount\" class=\"docClass\">count</a></code>\n- <code><a href=\"#!/api/Ext.data.Store-method-first\" rel=\"Ext.data.Store-method-first\" class=\"docClass\">Ext.data.Store.first</a></code>\n- <code><a href=\"#!/api/Ext.data.Store-method-last\" rel=\"Ext.data.Store-method-last\" class=\"docClass\">Ext.data.Store.last</a></code>\n- <code><a href=\"#!/api/Ext.data.Store-method-hasPendingLoad\" rel=\"Ext.data.Store-method-hasPendingLoad\" class=\"docClass\">loading</a></code>\n- <code><a href=\"#!/api/Ext.data.Store-method-getTotalCount\" rel=\"Ext.data.Store-method-getTotalCount\" class=\"docClass\">totalCount</a></code></p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name']\n});\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        users: {\n            model: 'MyApp.model.User',\n            data: [{\n                name: 'Foo'\n            }, {\n                name: 'Bar'\n            }]\n        }\n    }\n});\n\nviewModel.bind('{users.first}', function(first) {\n    console.log(first ? first.get('name') : 'Nobody');\n});\n\nvar timer = <a href=\"#!/api/Ext-method-interval\" rel=\"Ext-method-interval\" class=\"docClass\">Ext.interval</a>(function() {\n    var store = viewModel.getStore('users');\n    if (store.getCount()) {\n        store.removeAt(0);\n    } else {\n        <a href=\"#!/api/Ext-method-uninterval\" rel=\"Ext-method-uninterval\" class=\"docClass\">Ext.uninterval</a>(timer);\n    }\n}, 100);\n</code></pre>\n\n<h3>Advanced Store Binding</h3>\n\n<p>For accessing other store information that is not exposed by the binding API, formulas\ncan be used to achieve more advanced operations:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.model.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['name', 'score']\n});\n\nvar viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        users: {\n            model: 'MyApp.model.User',\n            data: [{\n                name: 'Foo',\n                score: 100\n            }, {\n                name: 'Bar',\n                score: 350\n            }]\n        }\n    },\n    formulas: {\n        totalScore: {\n            bind: {\n                bindTo: '{users}',\n                deep: true\n            },\n            get: function(store) {\n                return store.sum('score');\n            }\n        }\n    }\n});\n\nviewModel.bind('{totalScore}', function(score) {\n    console.log(score);\n});\n\nviewModel.notify();\nviewModel.getStore('users').removeAll();\n</code></pre>\n\n<h4>Formulas</h4>\n\n<p>Formulas allow for calculated <code>ViewModel</code> data values. The dependencies for these formulas\nare automatically determined so that the formula will not be processed until the required\ndata is present.</p>\n\n<pre><code>var viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    formulas: {\n        fullName: function(get) {\n            return get('firstName') + ' ' + get('lastName');\n        }\n    },\n    data: {firstName: 'John', lastName: 'Smith'}\n});\n\nviewModel.bind('{fullName}', function(v) {\n    console.log(v);\n});\n</code></pre>\n\n<p>See <a href=\"#!/api/Ext.app.ViewModel-cfg-formulas\" rel=\"Ext.app.ViewModel-cfg-formulas\" class=\"docClass\">formulas</a> for more detail.</p>\n\n<h4>Inheriting Data With Nesting</h4>\n\n<p>ViewModels can have a <a href=\"#!/api/Ext.app.ViewModel-cfg-parent\" rel=\"Ext.app.ViewModel-cfg-parent\" class=\"docClass\">parent</a> which allows values to be consumed from\na shared base. These values that are available from the <a href=\"#!/api/Ext.app.ViewModel-cfg-parent\" rel=\"Ext.app.ViewModel-cfg-parent\" class=\"docClass\">parent</a> are not copied,\nrather they are \"inherited\" in a similar fashion to a javascript closure scope chain.\nThis is demonstrated in the example below:</p>\n\n<pre><code>var parent = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    data: {\n        foo: 3\n    }\n});\nvar child = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    parent: parent\n});\n</code></pre>\n\n<p>This is analogous to the following javascript closure:</p>\n\n<pre><code>var foo = 3;\n<a href=\"#!/api/Ext.Ajax-method-request\" rel=\"Ext.Ajax-method-request\" class=\"docClass\">Ext.Ajax.request</a>({\n    success: function() {\n        // foo is available here\n    }\n});\n</code></pre>\n\n<h3>Climbing/Inheriting</h3>\n\n<p>In line with the above, the default behaviour when setting the value of a child ViewModel\n(either) through <a href=\"#!/api/Ext.app.ViewModel-method-set\" rel=\"Ext.app.ViewModel-method-set\" class=\"docClass\">set</a> or <a href=\"#!/api/Ext.app.bind.Binding-method-setValue\" rel=\"Ext.app.bind.Binding-method-setValue\" class=\"docClass\">Ext.app.bind.Binding.setValue</a> is to climb to\nwhere the value  is \"owned\" and set the value there:</p>\n\n<pre><code>var parent = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    data: {\n        foo: 3\n    }\n});\nvar child = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    parent: parent\n});\n\nchild.set('foo', 100); // Climbs to set the value on parent\nconsole.log(parent.get('foo')); // 100\nparent.set('foo', 200);\nconsole.log(child.get('foo')); // 200, inherited from the parent\n</code></pre>\n\n<p>Any subsequent sets are also inherited in the same fashion. The inheriting/climbing behavior\noccurs for any arbitrary depth, climbing/inherting can owned by a parent at any level above.</p>\n\n<pre><code>function log() {\n    console.log([a, b, c, d, e].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({data: {foo: 3}}),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b}),\n    d = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: c}),\n    e = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: d});\n\nlog(); // [3, 3, 3, 3, 3]\n\ne.set('foo', 100);\nlog(); // [100, 100, 100, 100, 100]\n</code></pre>\n\n<p>This same climbing behavior applies when setting a value on a binding. The climbing begins from\nthe ViewModel where the binding was attached:</p>\n\n<pre><code>function log() {\n    console.log([a, b, c].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({data: {foo: 3}}),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b});\n\nvar bind = c.bind('{foo}', function() {});\n\nbind.setValue(100);\nlog(); // [100, 100, 100]\n</code></pre>\n\n<p>The exception to this rule is when there is nothing above to climb to. If a value is set and\nthere is no parent above to hold it, then the value is set where it was called:</p>\n\n<pre><code>function log() {\n    console.log([a, b, c].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>(),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b});\n\nc.set('foo', 3);\nlog(); // [null, null, 3]\n\nb.set('foo', 2);\nlog(); // [null, 2, 3]\n\na.set('foo', 1);\nlog(); // [1, 2, 3]\n</code></pre>\n\n<p>These values are called local values, which are discussed below.</p>\n\n<h3>Local Values</h3>\n\n<p>If the child ViewModel is declared with top level data that also exists in the parent, then that\nchild is considered to own that local value, so no value is inherited from the parent, nor does\nthe climbing behaviour occur.</p>\n\n<pre><code>var parent = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    data: {\n        foo: 3\n    }\n});\nvar child = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    parent: parent,\n    data: {\n        foo: 5\n    }\n});\n\nconsole.log(parent.get('foo'), child.get('foo')); // 3, 5\nchild.set('foo', 100);\nconsole.log(parent.get('foo'), child.get('foo')); // 3, 100\nparent.set('foo', 200);\nconsole.log(parent.get('foo'), child.get('foo')); // 200, 100\n</code></pre>\n\n<p>The inheriting/climbing behavior is limited to local values:</p>\n\n<pre><code>function log() {\n    console.log([a, b, c, d, e].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({data: {foo: 1}}),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b, data: {foo: 2}}),\n    d = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: c}),\n    e = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: d, data: {foo: 3}});\n\nlog(); // [1, 1, 2, 2, 3]\n\ne.set('foo', 100);\nlog(); // [1, 1, 2, 2, 100]\n\nd.set('foo', 200);\nlog(); // [1, 1, 200, 200, 100]\n\nc.set('foo', 201);\nlog(); // [1, 1, 201, 201, 100]\n\nb.set('foo', 300);\nlog(); // [300, 300, 201, 201, 100]\n\na.set('foo', 301);\nlog(); // [301, 301, 201, 201, 100]\n</code></pre>\n\n<h3>Attaching/Clearing Local Values Dynamically</h3>\n\n<p>To bypass the climbing behaviour and push a value into a particular point\nin the hierarchy, the <a href=\"#!/api/Ext.app.ViewModel-method-setData\" rel=\"Ext.app.ViewModel-method-setData\" class=\"docClass\">setData</a> method should be used. Once a local value\nis set, it will be used as such in the future.</p>\n\n<pre><code>function log() {\n    console.log([a, b, c, d, e].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({data: {foo: 3}}),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b}),\n    d = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: c}),\n    e = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: d});\n\nlog(); // [3, 3, 3, 3, 3]\n\nc.setData({\n    foo: 100\n});\n\nlog(); // [3, 3, 100, 100, 100]\n\nd.set('foo', 200); // Climbs to new local value\nlog(); // [3, 3, 200, 200, 200]\n</code></pre>\n\n<p>Similarly, data can be cleared from being a local value by setting the value to undefined:</p>\n\n<pre><code>function log() {\n    console.log([a, b, c, d].map(function(vm) {\n        return vm.get('foo');\n    }));\n}\n\nvar a = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({data: {foo: 3}}),\n    b = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: a}),\n    c = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: b, data: {foo: 100}}),\n    d = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({parent: c});\n\nlog(); // [3, 3, 100, 100]\n\nc.setData({\n    foo: undefined\n});\nlog([3, 3, 3, 3]);\n</code></pre>\n","aliases":{"widget":null,"request":null},"alternateClassNames":[],"extends":"Ext.Base","mixins":["Ext.mixin.Factoryable","Ext.mixin.Identifiable"],"requires":["Ext.util.Scheduler","Ext.data.Session","Ext.app.bind.RootStub","Ext.app.bind.LinkStub","Ext.app.bind.Multi","Ext.app.bind.Formula","Ext.app.bind.TemplateBinding","Ext.data.ChainedStore"],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"cfg","name":"data","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":790}],"doc":"<p>This object holds the arbitrary data that populates the <code>ViewModel</code> and is\nthen available for binding.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-data","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"This object holds the arbitrary data that populates the ViewModel and is\nthen available for binding. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"formulas","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":798}],"doc":"<p>An object that defines named values whose value is managed by function calls.\nThe names of the properties of this object are assigned as values in the\nViewModel.</p>\n\n<p>For example:</p>\n\n<pre><code> formulas: {\n     xy: function (get) { return get('x') * get('y'); }\n }\n</code></pre>\n\n<p>For more details about defining a formula, see <code><a href=\"#!/api/Ext.app.bind.Formula\" rel=\"Ext.app.bind.Formula\" class=\"docClass\">Ext.app.bind.Formula</a></code>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-formulas","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"An object that defines named values whose value is managed by function calls. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"links","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":820}],"doc":"<p>Links provide a way to assign a simple name to a more complex bind. The primary\nuse for this is to assign names to records in the data model.</p>\n\n<pre><code> links: {\n     theUser: {\n         type: 'User',\n         id: 12\n     }\n }\n</code></pre>\n\n<p>It is also possible to force a new phantom record to be created by not specifying an\nid but passing <code>create: true</code> as part of the descriptor. This is often useful when\ncreating a new record for a child session.</p>\n\n<pre><code>links: {\n    newUser: {\n        type: 'User',\n        create: true\n    }\n} \n</code></pre>\n\n<p><code>create</code> can also be an object containing initial data for the record.</p>\n\n<pre><code>links: {\n    newUser: {\n        type: 'User',\n        create: {\n            firstName: 'John',\n            lastName: 'Smith'\n        }\n    }\n} \n</code></pre>\n\n<p>While that is the typical use, the value of each property in <code>links</code> may also be\na bind descriptor (see <code><a href=\"#!/api/Ext.app.ViewModel-method-bind\" rel=\"Ext.app.ViewModel-method-bind\" class=\"docClass\">bind</a></code> for the various forms of bind\ndescriptors).</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-links","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Links provide a way to assign a simple name to a more complex bind. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"parent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":862}],"doc":"<p>The parent <code>ViewModel</code> of this <code>ViewModel</code>. Once set, this cannot be changed.</p>\n","params":null,"return":null,"type":"Ext.app.ViewModel","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"cfg-parent","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"The parent ViewModel of this ViewModel. ...","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},{"tagname":"cfg","name":"root","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":870}],"doc":"<p>A reference to the root \"stub\" (an object that manages bindings).</p>\n","params":null,"return":null,"type":"Ext.app.bind.RootStub","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-root","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"A reference to the root \"stub\" (an object that manages bindings). ...","html_type":"<a href=\"#!/api/Ext.app.bind.RootStub\" rel=\"Ext.app.bind.RootStub\" class=\"docClass\">Ext.app.bind.RootStub</a>"},{"tagname":"cfg","name":"scheduler","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":878}],"doc":"<p>The scheduler used to schedule and manage the delivery of notifications for\nall connections to this <code>ViewModel</code> and any other attached to it. The normal\nprocess to initialize the <code>scheduler</code> is to get the scheduler used by the\n<code>parent</code> or <code>session</code> and failing either of those, create one.</p>\n","params":null,"return":null,"type":"Ext.util.Scheduler","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"cfg-scheduler","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"The scheduler used to schedule and manage the delivery of notifications for\nall connections to this ViewModel and any...","html_type":"<a href=\"#!/api/Ext.util.Scheduler\" rel=\"Ext.util.Scheduler\" class=\"docClass\">Ext.util.Scheduler</a>"},{"tagname":"cfg","name":"schema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":890}],"doc":"<p>The schema to use for getting information about entities.</p>\n","params":null,"return":null,"type":"String/Ext.data.schema.Schema","throws":null,"default":"'default'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-schema","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"The schema to use for getting information about entities. ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},{"tagname":"cfg","name":"session","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":896}],"doc":"<p>The session used to manage the data model (records and stores).</p>\n","params":null,"return":null,"type":"Ext.data.Session","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-session","owner":"Ext.app.ViewModel","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},{"tagname":"cfg","name":"stores","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":904}],"doc":"<p>A declaration of <code><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></code> configurations that are first processed as\nbinds to produce an effective store configuration.</p>\n\n<p>A simple store definition. We can reference this in our bind statements using the\n<code>{users}</code> as we would with other data values.</p>\n\n<pre><code>new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        users: {\n            model: 'User',\n            autoLoad: true\n        }\n    }\n});\n</code></pre>\n\n<p>This store definition contains a dynamic binding. The store will not be created until\nthe initial value for groupId is set. Once that occurs, the store is created with the\nappropriate filter configuration. Subsequently, once we change the group value, the old\nfilter will be overwritten with the new value.</p>\n\n<pre><code>var viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        users: {\n            model: 'User',\n            filters: [{\n                property: 'groupId',\n                value: '{groupId}'\n            }]\n        }\n    }\n});\nviewModel.set('groupId', 1); // This will trigger the store creation with the filter.\nviewModel.set('groupId', 2); // The filter value will be changed.\n</code></pre>\n\n<p>This store uses <a href=\"#!/api/Ext.data.ChainedStore\" rel=\"Ext.data.ChainedStore\" class=\"docClass\">store chaining</a> to create a store backed by\nthe data in another store. By specifying a string as the store, it will bind our creation\nand backing to the other store. This functionality is especially useful when wanting to\ndisplay a different \"view\" of a store, for example a different sort order or different\nfilters.</p>\n\n<pre><code>var viewModel = new <a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>({\n    stores: {\n        allUsers: {\n            model: 'User',\n            autoLoad: true\n        },\n        children: {\n            source: '{allUsers}',\n            filters: [{\n                property: 'age',\n                value: 18,\n                operator: '&lt;'\n            }]\n        }\n    }\n});\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-stores","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"A declaration of Ext.data.Store configurations that are first processed as\nbinds to produce an effective store config...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"view","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":967}],"doc":"<p>The Container that owns this <code>ViewModel</code> instance.</p>\n","params":null,"return":null,"type":"Ext.container.Container","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-view","owner":"Ext.app.ViewModel","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":788}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":788,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.app.ViewModel","overrides":[{"name":"$configStrict","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-property-S-configStrict\" rel=\"Ext.Base-property-S-configStrict\" class=\"docClass\">Ext.Base.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"autoGenId","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Identifiable.js","linenr":69}],"doc":"<p><code>true</code> indicates an <code>id</code> was auto-generated rather than provided by configuration.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-autoGenId","owner":"Ext.mixin.Identifiable","overrides":null,"short_doc":"true indicates an id was auto-generated rather than provided by configuration. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"collectTimeout","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":753}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"100","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":753,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-collectTimeout","owner":"Ext.app.ViewModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"data","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1551}],"doc":"<p>This object holds all of the properties of this <code>ViewModel</code>. It is\nprototype chained to the <code>linkData</code> which is, in turn, prototype chained\nto (if present) the <code>data</code> object of the parent <code>ViewModel</code>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-data","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"This object holds all of the properties of this ViewModel. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"expressionRe","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":755}],"doc":"\n","params":null,"return":null,"type":"RegExp","throws":null,"default":"/^(?:\\{(?:(\\d+)|([a-z_][\\w.]*))\\})$/i","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":755,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-expressionRe","owner":"Ext.app.ViewModel","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/RegExp\" rel=\"RegExp\" class=\"docClass\">RegExp</a>"},{"tagname":"property","name":"factoryConfig","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":749}],"doc":"<p>If this property is specified by the target class of this mixin its properties are\nused to configure the created <code><a href=\"#!/api/Ext.Factory\" rel=\"Ext.Factory\" class=\"docClass\">Ext.Factory</a></code>.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{name: 'viewModel'}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":749,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-factoryConfig","owner":"Ext.app.ViewModel","overrides":[{"name":"factoryConfig","owner":"Ext.mixin.Factoryable","link":"<a href=\"#!/api/Ext.mixin.Factoryable-property-factoryConfig\" rel=\"Ext.mixin.Factoryable-property-factoryConfig\" class=\"docClass\">Ext.mixin.Factoryable.factoryConfig</a>"}],"short_doc":"If this property is specified by the target class of this mixin its properties are\nused to configure the created Ext....","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isViewModel","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":745}],"doc":"<p>also configures Factoryable</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isViewModel","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"also configures Factoryable ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"linkData","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1540}],"doc":"<p>This object is used to hold the result of a linked value. This is done\nso that the data object hasOwnProperty equates to whether or not this\nproperty is owned by this instance or inherited.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-linkData","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"This object is used to hold the result of a linked value. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Factoryable.js","linenr":543}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'factoryable'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":543,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinId","owner":"Ext.mixin.Factoryable","overrides":[{"name":"mixinId","owner":"Ext.util.StoreHolder","link":"<a href=\"#!/api/Ext.util.StoreHolder-property-mixinId\" rel=\"Ext.util.StoreHolder-property-mixinId\" class=\"docClass\">Ext.util.StoreHolder.mixinId</a>"},{"name":"mixinId","owner":"Ext.mixin.Bindable","link":"<a href=\"#!/api/Ext.mixin.Bindable-property-mixinId\" rel=\"Ext.mixin.Bindable-property-mixinId\" class=\"docClass\">Ext.mixin.Bindable.mixinId</a>"}],"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1326}],"doc":"<hr />\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-privates","owner":"Ext.app.ViewModel","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":975}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"config","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.app.ViewModel","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":975,"fires":[],"method_calls":["initConfig"],"readonly":null,"required":null,"template":null,"id":"method-constructor","owner":"Ext.app.ViewModel","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"bind","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1072}],"doc":"<p>This method requests that data in this <code>ViewModel</code> be delivered to the specified\n<code>callback</code>. The data desired is given in a \"bind descriptor\" which is the first\nargument.</p>\n\n<p>A simple call might look like this:</p>\n\n<pre><code>var binding = vm.bind('{foo}', this.onFoo, this);\n\nbinding.destroy();  // when done with the binding\n</code></pre>\n\n<p>Options for the binding can be provided in the last argument:</p>\n\n<pre><code>var binding = vm.bind('{foo}', this.onFoo, this, {\n    deep: true\n});\n</code></pre>\n\n<p>Alternatively, bind options can be combined with the bind descriptor using only\nthe first argument:</p>\n\n<pre><code>var binding = vm.bind({\n    bindTo: '{foo}',  // the presence of bindTo identifies this form\n    deep: true\n}, this.onFoo, this);\n</code></pre>\n\n<p>See the class documentation for more details on Bind Descriptors and options.</p>\n","params":[{"tagname":"params","type":"String/Object/Array","name":"descriptor","doc":"<p>The bind descriptor. See class description\nfor details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"callback","doc":"<p>The function to call with the value of the bound property.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> pointer) for the <code>callback</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Additional options to configure the\n<a href=\"#!/api/Ext.app.bind.Binding\" rel=\"Ext.app.bind.Binding\" class=\"docClass\">binding</a>. If this parameter is provided, the <code>bindTo</code> form\nof combining options and bind descriptor is not recognized.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.app.bind.BaseBinding/Ext.app.bind.Binding","name":"return","doc":"<p>The binding.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.bind.BaseBinding\" rel=\"Ext.app.bind.BaseBinding\" class=\"docClass\">Ext.app.bind.BaseBinding</a>/<a href=\"#!/api/Ext.app.bind.Binding\" rel=\"Ext.app.bind.Binding\" class=\"docClass\">Ext.app.bind.Binding</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["bindExpression"],"readonly":null,"required":null,"template":null,"id":"method-bind","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"This method requests that data in this ViewModel be delivered to the specified\ncallback. ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1004}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.app.ViewModel-property-clearPropertiesOnDestroy\" rel=\"Ext.app.ViewModel-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":1004,"fires":[],"method_calls":["callParent","getParent","getRoot"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.app.ViewModel","overrides":[{"name":"destroy","owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"get","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1258}],"doc":"<p>Get a value from the data for this viewmodel.</p>\n","params":[{"tagname":"params","type":"String","name":"path","doc":"<p>The path of the data to retrieve.</p>\n\n<pre><code>var value = vm.get('theUser.address.city');\n</code></pre>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The data stored at the passed path.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getStub"],"readonly":null,"required":null,"template":null,"id":"method-get","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Get a value from the data for this viewmodel. ...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":790}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-data\" rel=\"Ext.app.ViewModel-cfg-data\" class=\"docClass\">data</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getData","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of data. ...","html_type":null},{"tagname":"method","name":"getFormulas","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":798}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-formulas\" rel=\"Ext.app.ViewModel-cfg-formulas\" class=\"docClass\">formulas</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getFormulas","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of formulas. ...","html_type":null},{"tagname":"method","name":"getId","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Identifiable.js","linenr":14}],"doc":"<p>Retrieves the <code>id</code>. This method Will auto-generate an id if one has not already\nbeen configured.</p>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>id</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["generateAutoId","setId"],"readonly":null,"required":null,"template":null,"id":"method-getId","owner":"Ext.mixin.Identifiable","overrides":null,"short_doc":"Retrieves the id. ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getLinks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":820}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-links\" rel=\"Ext.app.ViewModel-cfg-links\" class=\"docClass\">links</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getLinks","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of links. ...","html_type":null},{"tagname":"method","name":"getParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":862}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-parent\" rel=\"Ext.app.ViewModel-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[],"return":{"type":"Ext.app.ViewModel","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"method-getParent","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of parent. ...","html_type":null},{"tagname":"method","name":"getRecord","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1348}],"doc":"<p>Get a record instance given a reference descriptor. Will ask\nthe session if one exists.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The model type.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The model id.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The model instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSchema","getSession"],"readonly":null,"required":null,"template":null,"id":"method-getRecord","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Get a record instance given a reference descriptor. ...","html_type":null},{"tagname":"method","name":"getRoot","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":870}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-root\" rel=\"Ext.app.ViewModel-cfg-root\" class=\"docClass\">root</a>.</p>\n","params":[],"return":{"type":"Ext.app.bind.RootStub","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.bind.RootStub\" rel=\"Ext.app.bind.RootStub\" class=\"docClass\">Ext.app.bind.RootStub</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getRoot","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of root. ...","html_type":null},{"tagname":"method","name":"getScheduler","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":878}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-scheduler\" rel=\"Ext.app.ViewModel-cfg-scheduler\" class=\"docClass\">scheduler</a>.</p>\n","params":[],"return":{"type":"Ext.util.Scheduler","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Scheduler\" rel=\"Ext.util.Scheduler\" class=\"docClass\">Ext.util.Scheduler</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"method-getScheduler","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of scheduler. ...","html_type":null},{"tagname":"method","name":"getSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":890}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-schema\" rel=\"Ext.app.ViewModel-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[],"return":{"type":"String/Ext.data.schema.Schema","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSchema","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of schema. ...","html_type":null},{"tagname":"method","name":"getSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1140}],"doc":"<p>Gets the session attached to this (or a parent) ViewModel. See the <a href=\"#!/api/Ext.app.ViewModel-cfg-session\" rel=\"Ext.app.ViewModel-cfg-session\" class=\"docClass\">session</a>\nconfiguration.</p>\n","params":[],"return":{"type":"Ext.data.Session","name":"return","doc":"<p>The session. <code>null</code> if no session exists.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getParent","setSession"],"readonly":null,"required":null,"template":null,"id":"method-getSession","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Gets the session attached to this (or a parent) ViewModel. ...","html_type":null},{"tagname":"method","name":"getStore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1157}],"doc":"<p>Gets a store configured via the <a href=\"#!/api/Ext.app.ViewModel-cfg-stores\" rel=\"Ext.app.ViewModel-cfg-stores\" class=\"docClass\">stores</a> configuration.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The name of the store.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.Store","name":"return","doc":"<p>The store. <code>null</code> if no store exists.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getStore","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Gets a store configured via the stores configuration. ...","html_type":null},{"tagname":"method","name":"getStub","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1442}],"doc":"<p>This method looks up the <code>Stub</code> for a single bind descriptor.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"bindDescr","doc":"<p>The bind descriptor.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.app.bind.AbstractStub","name":"return","doc":"<p>The <code>Stub</code> associated to the bind descriptor.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.app.bind.AbstractStub\" rel=\"Ext.app.bind.AbstractStub\" class=\"docClass\">Ext.app.bind.AbstractStub</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRoot"],"readonly":null,"required":null,"template":null,"id":"method-getStub","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"This method looks up the Stub for a single bind descriptor. ...","html_type":null},{"tagname":"method","name":"getView","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":967}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-view\" rel=\"Ext.app.ViewModel-cfg-view\" class=\"docClass\">view</a>.</p>\n","params":[],"return":{"type":"Ext.container.Container","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getView","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Returns the value of view. ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"linkTo","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1178}],"doc":"<p>Create a link to a reference. See the <a href=\"#!/api/Ext.app.ViewModel-cfg-links\" rel=\"Ext.app.ViewModel-cfg-links\" class=\"docClass\">links</a> configuration.</p>\n","params":[{"tagname":"params","type":"String","name":"key","doc":"<p>The name for the link.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"reference","doc":"<p>The reference descriptor.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getRecord","getRoot","getStub"],"readonly":null,"required":null,"template":null,"id":"method-linkTo","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Create a link to a reference. ...","html_type":null},{"tagname":"method","name":"notify","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1246}],"doc":"<p>Forces all bindings in this ViewModel hierarchy to evaluate immediately. Use this to do\na synchronous flush of all bindings.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getScheduler"],"readonly":null,"required":null,"template":null,"id":"method-notify","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Forces all bindings in this ViewModel hierarchy to evaluate immediately. ...","html_type":null},{"tagname":"method","name":"onClassMixedIn","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Factoryable.js","linenr":545}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"targetClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":545,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-onClassMixedIn","owner":"Ext.mixin.Factoryable","overrides":[{"name":"onClassMixedIn","owner":"Ext.mixin.ComponentDelegation","link":"<a href=\"#!/api/Ext.mixin.ComponentDelegation-method-onClassMixedIn\" rel=\"Ext.mixin.ComponentDelegation-method-onClassMixedIn\" class=\"docClass\">Ext.mixin.ComponentDelegation.onClassMixedIn</a>"}],"short_doc":" ...","html_type":null},{"tagname":"method","name":"set","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1270}],"doc":"<p>Set a value in the data for this viewmodel. This method will climb to set data on\na parent view model if appropriate. See \"Inheriting Data\" in the class introduction for\nmore information.</p>\n","params":[{"tagname":"params","type":"Object/String","name":"path","doc":"<p>The path of the value to set, or an object literal to set\nat the root of the viewmodel.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The data to set at the value. If the value is an object literal,\nany required paths will be created.</p>\n\n<pre><code>// Set a single property at the root level\nviewModel.set('expiry', <a href=\"#!/api/Ext.Date-method-add\" rel=\"Ext.Date-method-add\" class=\"docClass\">Ext.Date.add</a>(new Date(), <a href=\"#!/api/Ext.Date-property-DAY\" rel=\"Ext.Date-property-DAY\" class=\"docClass\">Ext.Date.DAY</a>, 7));\nconsole.log(viewModel.get('expiry'));\n// Sets a single property in user.address, does not overwrite any hierarchy.\nviewModel.set('user.address.city', 'London');\nconsole.log(viewModel.get('user.address.city'));\n// Sets 2 properties of \"user\". Overwrites any existing hierarchy.\nviewModel.set('user', {firstName: 'Foo', lastName: 'Bar'});\nconsole.log(viewModel.get('user.firstName'));\n// Sets a single property at the root level. Overwrites any existing hierarchy.\nviewModel.set({rootKey: 1});\nconsole.log(viewModel.get('rootKey'));\n</code></pre>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getData","getRoot","getStub"],"readonly":null,"required":null,"template":null,"id":"method-set","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Set a value in the data for this viewmodel. ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setData","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":1317}],"doc":"<p>Sets data directly at the level of this viewmodel. This method does not climb\nto set data on parent view models. Passing <code>undefined</code> will clear the value\nin this viewmodel, which means that this viewmodel is free to inherit data\nfrom a parent. See \"Inheriting Data\" in the class introduction for more information.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>The new data to set.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setData","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets data directly at the level of this viewmodel. ...","html_type":null},{"tagname":"method","name":"setFormulas","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":798}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-formulas\" rel=\"Ext.app.ViewModel-cfg-formulas\" class=\"docClass\">formulas</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"formulas","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setFormulas","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of formulas. ...","html_type":null},{"tagname":"method","name":"setLinks","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":820}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-links\" rel=\"Ext.app.ViewModel-cfg-links\" class=\"docClass\">links</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"links","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setLinks","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of links. ...","html_type":null},{"tagname":"method","name":"setParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":862}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-parent\" rel=\"Ext.app.ViewModel-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[{"tagname":null,"type":"Ext.app.ViewModel","name":"parent","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">Ext.app.ViewModel</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"method-setParent","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of parent. ...","html_type":null},{"tagname":"method","name":"setRoot","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":870}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-root\" rel=\"Ext.app.ViewModel-cfg-root\" class=\"docClass\">root</a>.</p>\n","params":[{"tagname":null,"type":"Ext.app.bind.RootStub","name":"root","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.app.bind.RootStub\" rel=\"Ext.app.bind.RootStub\" class=\"docClass\">Ext.app.bind.RootStub</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setRoot","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of root. ...","html_type":null},{"tagname":"method","name":"setScheduler","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":878}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-scheduler\" rel=\"Ext.app.ViewModel-cfg-scheduler\" class=\"docClass\">scheduler</a>.</p>\n","params":[{"tagname":null,"type":"Ext.util.Scheduler","name":"scheduler","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Scheduler\" rel=\"Ext.util.Scheduler\" class=\"docClass\">Ext.util.Scheduler</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"method-setScheduler","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of scheduler. ...","html_type":null},{"tagname":"method","name":"setSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":890}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-schema\" rel=\"Ext.app.ViewModel-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[{"tagname":null,"type":"String/Ext.data.schema.Schema","name":"schema","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSchema","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of schema. ...","html_type":null},{"tagname":"method","name":"setSession","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":896}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-session\" rel=\"Ext.app.ViewModel-cfg-session\" class=\"docClass\">session</a>.</p>\n","params":[{"tagname":null,"type":"Ext.data.Session","name":"session","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSession","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of session. ...","html_type":null},{"tagname":"method","name":"setStores","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":904}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-stores\" rel=\"Ext.app.ViewModel-cfg-stores\" class=\"docClass\">stores</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"stores","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setStores","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of stores. ...","html_type":null},{"tagname":"method","name":"setView","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":967}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.app.ViewModel-cfg-view\" rel=\"Ext.app.ViewModel-cfg-view\" class=\"docClass\">view</a>.</p>\n","params":[{"tagname":null,"type":"Ext.container.Container","name":"view","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Ext.container.Container</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setView","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Sets the value of view. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.Base","overrides":null,"short_doc":"Create a new instance of this Class. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"escape","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/app/ViewModel.js","linenr":758}],"doc":"<p>Escape bind strings so they are treated as literals.</p>\n","params":[{"tagname":"params","type":"Object/String","name":"value","doc":"<p>The value to escape. If the value is\nan object, any strings will be recursively escaped.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object/String","name":"return","doc":"<p>The escaped value. Matches the type of the\npassed value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.5.2","inheritdoc":null,"static":true,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":["escape"],"readonly":null,"required":null,"template":null,"id":"static-method-escape","owner":"Ext.app.ViewModel","overrides":null,"short_doc":"Escape bind strings so they are treated as literals. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.app.ViewModel","component":false,"short_doc":"This class manages arbitrary data and its relationship to data models. ...","deprecated":null}