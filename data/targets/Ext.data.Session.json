{"tagname":"class","name":"Ext.data.Session","autodetect":null,"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":1}],"doc":"<p>This class manages models and their associations. Instances of <code>Session</code> are typically\nassociated with some <code>Component</code> (perhaps the Viewport or a Window) and then used by\ntheir <code><a href=\"#!/api/Ext.app.ViewModel\" rel=\"Ext.app.ViewModel\" class=\"docClass\">view models</a></code> to enable data binding.</p>\n\n<p>The primary job of a Session is to manage a collection of records of many different\ntypes and their associations. This often starts by loading records when requested (via\nbind - see below) and culminates when it is time to save to the server.</p>\n\n<p>Because the Session tracks all records it loads, it ensures that for any given type of\nmodel, only one record exists with a given <code>id</code>. This means that all edits of that\nrecord are properly targeted at that one instance.</p>\n\n<p>Similarly, when associations are loaded, the <code><a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a></code> created to hold the\nassociated records is tracked by the Session. So all requests for the \"OrderItems\" of\na particular Order id will result in the same Store. Adding and removing items from\nthat Order then is sure to remain consistent.</p>\n\n<h1>Data</h1>\n\n<p>Since the Session is managing all this data, there are several methods it provides\nto give convenient access to that data. The most important of these is <code>update</code> and\n<code>getChanges</code>.</p>\n\n<p>The <code>update</code> and <code>getChanges</code> methods both operate on object that contains a summary\nof records and associations and different CRUD operations.</p>\n\n<h2>Saving</h2>\n\n<p>There are two basic ways to save the contents of a Session: <code>getChanges</code> and\n<code>getSaveBatch</code>. We've already seen <code>getChanges</code>. The data contained in the CRUD object\ncan be translated into whatever shape is needed by the server.</p>\n\n<p>To leverage the <code><a href=\"#!/api/Ext.data.Model-cfg-proxy\" rel=\"Ext.data.Model-cfg-proxy\" class=\"docClass\">proxy</a></code> facilities defined by each Model\nclass, there is the <code>getSaveBatch</code> method. That method returns an <code><a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a></code>\nobject populated with the necessary <code>create</code>, <code>update</code> and <code>destroy</code> operations to\nsave all of the changes in the Session.</p>\n\n<h2>Conflicts</h2>\n\n<p>If data is loaded from the server (for example a store load) and there is an existing record,\nthe <a href=\"#!/api/Ext.data.Model-method-mergeData\" rel=\"Ext.data.Model-method-mergeData\" class=\"docClass\">&lt;code&gt;mergeData&lt;/code&gt;</a> method will be called to resolve\nthe conflict.</p>\n","aliases":{"widget":null,"request":null},"alternateClassNames":[],"extends":"Ext.Base","mixins":["Ext.mixin.Dirty","Ext.mixin.Observable"],"requires":["Ext.data.schema.Schema","Ext.data.Batch","Ext.data.matrix.Matrix","Ext.data.session.ChangesVisitor","Ext.data.session.ChildChangesVisitor","Ext.data.session.BatchVisitor"],"uses":[],"singleton":null,"private":null,"enum":null,"members":[{"tagname":"cfg","name":"autoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":76}],"doc":"<p><code>true</code> to automatically destroy this session when a component it is attached\nto is destroyed. This should be set to false if the session is intended to be\nused across multiple root level components.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-autoDestroy","owner":"Ext.data.Session","overrides":null,"short_doc":"true to automatically destroy this session when a component it is attached\nto is destroyed. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"crudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":86}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{create: 'C', read: 'R', update: 'U', drop: 'D'}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":86,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-crudProperties","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"dirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":23}],"doc":"<p>This config property describes the modified state of this object. In most\ncases this config's value is maintained by the object and should be considered\nreadonly. The class implementor should be the only one to call the setter.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"{$value: false, lazy: true}","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-dirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"This config property describes the modified state of this object. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"ignoreDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":45}],"doc":"<p>This config property indicates that the <code>dirty</code> state of this object should be\nignored. Because this capability is mixed in at a class level, this config can\nbe helpful when some instances do not participate in dirty state tracking.</p>\n\n<p>This option should be set at construction time. When set to <code>true</code>, the object\nwill always have <code>dirty</code> value of <code>false</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-ignoreDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"This config property indicates that the dirty state of this object should be\nignored. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"listeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":289}],"doc":"<p>A config object containing one or more event handlers to be added to this object during\ninitialization. This should be a valid listeners config object as specified in the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\",\n\"mouseover\" etc), this is usually only done when extra value can be added. For example\nthe <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong>\nevent passing the node clicked on. To access DOM events directly from a child element\nof a Component, we need to specify the <code>element</code> option to identify the Component\nproperty to add a DOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-listeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"A config object containing one or more event handlers to be added to this object during\ninitialization. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"cfg","name":"parent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":70}],"doc":"<p>The parent session for this session.</p>\n","params":null,"return":null,"type":"Ext.data.Session","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-parent","owner":"Ext.data.Session","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},{"tagname":"cfg","name":"recordStateIsDirtyState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":56}],"doc":"<p>Set this config at construction time (or on the class body) to automatically set\nthe <code>dirty</code> state based on the records passed to <code>trackRecordState</code>.</p>\n\n<p>This config defaults to <code>true</code> but only has an effect when the record tracking\nmethods are called (<code>trackRecordState</code>, <code>untrackRecordState</code> and <code>clearRecordStates</code>).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-recordStateIsDirtyState","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Set this config at construction time (or on the class body) to automatically set\nthe dirty state based on the records...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"cfg","name":"schema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":65}],"doc":"\n","params":null,"return":null,"type":"String/Ext.data.schema.Schema","throws":null,"default":"'default'","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"cfg-schema","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},{"tagname":"property","name":"$className","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1199}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'Ext.Base'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-className","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"$configPrefixed","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1220}],"doc":"<p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configPrefixed","owner":"Ext.Base","overrides":[{"name":"$configPrefixed","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configPrefixed\" rel=\"Ext.plugin.Abstract-property-S-configPrefixed\" class=\"docClass\">Ext.plugin.Abstract.$configPrefixed</a>"},{"name":"$configPrefixed","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a>"}],"short_doc":"The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configStrict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1230}],"doc":"<p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configStrict","owner":"Ext.Base","overrides":[{"name":"$configStrict","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-property-S-configStrict\" rel=\"Ext.plugin.Abstract-property-S-configStrict\" class=\"docClass\">Ext.plugin.Abstract.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.layout.container.boxOverflow.None","link":"<a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a>"},{"name":"$configStrict","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-S-configStrict\" rel=\"Ext.Widget-property-S-configStrict\" class=\"docClass\">Ext.Widget.$configStrict</a>"}],"short_doc":"The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"$configTransforms","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1202}],"doc":"<p>A prototype-chained object storing transform method names and priorities stored\non the class prototype. On first instantiation, this object is converted into\nan array that is sorted by priority and stored on the constructor.</p>\n","params":null,"return":null,"type":"Object/Array","throws":null,"default":"{}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-configTransforms","owner":"Ext.Base","overrides":null,"short_doc":"A prototype-chained object storing transform method names and priorities stored\non the class prototype. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"$eventOptions","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":456}],"doc":"<p>Matches options property names within a listeners specification object - property names\nwhich are never used as event names.</p>\n","params":null,"return":null,"type":"Object","throws":null,"default":"{scope: 1, delay: 1, buffer: 1, onFrame: 1, single: 1, args: 1, destroyable: 1, priority: 1, order: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-eventOptions","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Matches options property names within a listeners specification object - property names\nwhich are never used as event...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"$vetoClearingPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":332}],"doc":"<p>We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the very last. It will take care\nof the prototype after completing Observable destruction sequence.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-S-vetoClearingPrototypeOnDestroy","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"We don't want the base destructor to clear the prototype because\nour destroyObservable handler must be called the ver...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"_dirtyRecordCount","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":37}],"doc":"<p>The number of newly created, modified or dropped records.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-_dirtyRecordCount","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"The number of newly created, modified or dropped records. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"clearPropertiesOnDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1264}],"doc":"<p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n","params":null,"return":null,"type":"Boolean/\"async\"","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPropertiesOnDestroy","owner":"Ext.Base","overrides":[{"name":"clearPropertiesOnDestroy","owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>"},{"name":"clearPropertiesOnDestroy","owner":"Ext.Widget","link":"<a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a>"}],"short_doc":"Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/\"async\""},{"tagname":"property","name":"clearPrototypeOnDestroy","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1274}],"doc":"<p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-clearPrototypeOnDestroy","owner":"Ext.Base","overrides":null,"short_doc":"Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"crudKeys","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":108}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":"{C: 1, R: 1, U: 1, D: 1}","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":108,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-crudKeys","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"crudOperations","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":94}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[{type: 'R', entityMethod: 'readEntities'}, {type: 'C', entityMethod: 'createEntities'}, {type: 'U', entityMethod: 'updateEntities'}, {type: 'D', entityMethod: 'dropEntities'}]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":94,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-crudOperations","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"destroyed","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1258}],"doc":"<p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-destroyed","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true after the destroy method is called. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"dirty","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":35}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":35,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-dirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"eventsSuspended","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":340}],"doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called,\ndecremented when <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","params":null,"return":null,"type":"Number","throws":null,"default":"0","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-eventsSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Initial suspended call count. ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"property","name":"hasListeners","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":347}],"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.mixin.Observable-static-method-observe\" rel=\"Ext.mixin.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-hasListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"This object holds a key for any event that has a listener. ...","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"isConfiguring","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1240}],"doc":"<p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isConfiguring","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true during the call to initConfig. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isFirstInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1249}],"doc":"<p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"false","properties":null,"private":null,"protected":true,"chainable":null,"since":"5.0.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isFirstInstance","owner":"Ext.Base","overrides":null,"short_doc":"This property is set to true if this instance is the first of its class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isInstance","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1211}],"doc":"<p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":true,"required":null,"template":null,"id":"property-isInstance","owner":"Ext.Base","overrides":null,"short_doc":"This value is true and is used to identify plain objects from instances of\na defined class. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isObservable","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":325}],"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass\nthereof.</p>\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isObservable","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"true in this class to identify an object as an instantiated Observable, or subclass\nthereof. ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"isSession","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":62}],"doc":"\n","params":null,"return":null,"type":"Boolean","throws":null,"default":"true","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":62,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-isSession","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},{"tagname":"property","name":"mixinId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":9}],"doc":"\n","params":null,"return":null,"type":"String","throws":null,"default":"'dirty'","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":9,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-mixinId","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},{"tagname":"property","name":"privates","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":698}],"doc":"\n","params":null,"return":null,"type":"Object","throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":698,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-privates","owner":"Ext.data.Session","overrides":null,"short_doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},{"tagname":"property","name":"self","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1573}],"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>, <code>this.self</code> is scope-dependent and it's meant to be used\nfor dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a> for a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","params":null,"return":null,"type":"Ext.Class","throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"property-self","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the current class from which this object was instantiated. ...","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},{"tagname":"property","name":"$onExtended","autodetected":{"inheritdoc":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":445}],"doc":"\n","params":null,"return":null,"type":"Array","throws":null,"default":"[]","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-S-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>"},{"tagname":"property","name":"nextId","autodetected":{"tagname":"property","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"readonly":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":116}],"doc":"\n","params":null,"return":null,"type":"Number","throws":null,"default":"1","properties":null,"private":true,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":null,"linenr":116,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-property-nextId","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>"},{"tagname":"method","name":"constructor","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":119}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"config","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.Session","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":119,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-constructor","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"_addDeclaredListeners","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":479}],"doc":"<p>Adds declarative listeners as nested arrays of listener objects.</p>\n","params":[{"tagname":"params","type":"Array","name":"listeners","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if any listeners were added</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-_addDeclaredListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Adds declarative listeners as nested arrays of listener objects. ...","html_type":null},{"tagname":"method","name":"add","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":699}],"doc":"<p>Add a record instance to this session. Called by model.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getEntry","registerReferences","trackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-add","owner":"Ext.data.Session","overrides":null,"short_doc":"Add a record instance to this session. ...","html_type":null},{"tagname":"method","name":"addAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1373}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onAfter\" rel=\"Ext.mixin.Observable-method-onAfter\" class=\"docClass\">onAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onAfter. ...","html_type":null},{"tagname":"method","name":"addBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1366}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-onBefore\" rel=\"Ext.mixin.Observable-method-onBefore\" class=\"docClass\">onBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-addBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for onBefore. ...","html_type":null},{"tagname":"method","name":"addDeprecations","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":159}],"doc":"<p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n","params":[{"tagname":null,"type":"Object","name":"deprecations","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"method-addDeprecations","owner":"Ext.Base","overrides":null,"short_doc":"This method applies a versioned, deprecation declaration to this class. ...","html_type":null},{"tagname":"method","name":"addListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":911}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener"],"readonly":null,"required":null,"template":null,"id":"method-addListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"addManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":499}],"doc":"<p>The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n    extend: '<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>',\n\n    initComponent: function () {\n        this.addManagedListener(MyApp.SomeSharedMenu, 'show', this.doSomething);\n        this.callParent();\n    }\n});\n</code></pre>\n\n<p>As you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (<code>MyApp.SomeGlobalSharedMenu</code>) is also removed.</p>\n\n<p>As of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <code>mon</code> or <code>addManagedListener</code> if you want the listener to be\nmanaged.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addManagedListener"],"readonly":null,"required":null,"template":null,"id":"method-addManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable o...","html_type":null},{"tagname":"method","name":"adopt","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":195}],"doc":"<p>Adds an existing record instance to the session. The record\nmay not belong to another session. The record cannot be a phantom record, instead\nuse <a href=\"#!/api/Ext.data.Session-method-createRecord\" rel=\"Ext.data.Session-method-createRecord\" class=\"docClass\">createRecord</a>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to adopt.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["add","checkModelType"],"readonly":null,"required":null,"template":null,"id":"method-adopt","owner":"Ext.data.Session","overrides":null,"short_doc":"Adds an existing record instance to the session. ...","html_type":null},{"tagname":"method","name":"afterCommit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":643}],"doc":"<p>Template method, will be called by Model after a record is committed.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["trackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-afterCommit","owner":"Ext.data.Session","overrides":null,"short_doc":"Template method, will be called by Model after a record is committed. ...","html_type":null},{"tagname":"method","name":"afterDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":654}],"doc":"<p>Template method, will be called by Model after a record is dropped.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["trackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-afterDrop","owner":"Ext.data.Session","overrides":null,"short_doc":"Template method, will be called by Model after a record is dropped. ...","html_type":null},{"tagname":"method","name":"afterEdit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":665}],"doc":"<p>Template method, will be called by Model after a record is edited.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"6.2.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["trackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-afterEdit","owner":"Ext.data.Session","overrides":null,"short_doc":"Template method, will be called by Model after a record is edited. ...","html_type":null},{"tagname":"method","name":"afterErase","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":676}],"doc":"<p>Template method, will be called by Model after a record is erased (a drop\nthat is committed).</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["evict"],"readonly":null,"required":null,"template":null,"id":"method-afterErase","owner":"Ext.data.Session","overrides":null,"short_doc":"Template method, will be called by Model after a record is erased (a drop\nthat is committed). ...","html_type":null},{"tagname":"method","name":"afterReject","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":687}],"doc":"<p>Template method, will be called by Model after a record is rejected.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":"6.5.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["trackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-afterReject","owner":"Ext.data.Session","overrides":null,"short_doc":"Template method, will be called by Model after a record is rejected. ...","html_type":null},{"tagname":"method","name":"applyDirty","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":75}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"dirty","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":75,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applyDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"applySchema","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":730}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"schema","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-applySchema","owner":"Ext.data.Session","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callOverridden","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":2074}],"doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the overridden method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n","version":"4.1.0"},"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callOverridden","owner":"Ext.Base","overrides":null,"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1361}],"doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function(x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function(x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function() {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function(x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function(x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the parent method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callParent","owner":"Ext.Base","overrides":null,"short_doc":"Call the \"parent\" method of the current method. ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1482}],"doc":"<p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function() {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function() {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function() {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n","params":[{"tagname":"params","type":"Array/Arguments","name":"args","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/Arguments","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>Returns the result of calling the superclass method</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":"This method is used by an override to call the superclass method but\nbypass any overridden method. ...","html_type":null},{"tagname":"method","name":"captureArgs","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":150}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"o","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-captureArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"checkCounters","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":196}],"doc":"<p><debug></debug></p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-checkCounters","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"checkModelType","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":738}],"doc":"<p>Checks if the model type being referenced is valid for this session. That includes\nchecking if the model name is correct &amp; is one used in this <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a> for this\nsession. Will raise an exception if the model type is not correct.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"name","doc":"<p>The model name or model type.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSchema"],"readonly":null,"required":null,"template":null,"id":"method-checkModelType","owner":"Ext.data.Session","overrides":null,"short_doc":"Checks if the model type being referenced is valid for this session. ...","html_type":null},{"tagname":"method","name":"clearListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1394}],"doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["clearManagedListeners"],"readonly":null,"required":null,"template":null,"id":"method-clearListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all listeners for this object including the managed listeners ...","html_type":null},{"tagname":"method","name":"clearManagedListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1433}],"doc":"<p>Removes all managed listeners for this object.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-clearManagedListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes all managed listeners for this object. ...","html_type":null},{"tagname":"method","name":"clearRecordStates","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":90}],"doc":"<p>Clears all record state tracking. This state is maintained by <code>trackRecordState</code>\nand <code>untrackRecordState</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["setDirty"],"readonly":null,"required":null,"template":null,"id":"method-clearRecordStates","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Clears all record state tracking. ...","html_type":null},{"tagname":"method","name":"commit","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":225}],"doc":"<p>Marks the session as \"clean\" by calling <a href=\"#!/api/Ext.data.Model-method-commit\" rel=\"Ext.data.Model-method-commit\" class=\"docClass\">Ext.data.Model.commit</a> on each record\nthat is known to the session.</p>\n\n<ul>\n<li>Phantom records will no longer be phantom.</li>\n<li>Modified records will no longer be dirty.</li>\n<li>Dropped records will be erased.</li>\n</ul>\n\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":"5.1.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.data.Session-event-dirtychange\" rel=\"Ext.data.Session-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["clearRecordStates","fireDirtyChange","getDirty","resumeEvent","suspendEvent"],"readonly":null,"required":null,"template":null,"id":"method-commit","owner":"Ext.data.Session","overrides":null,"short_doc":"Marks the session as \"clean\" by calling Ext.data.Model.commit on each record\nthat is known to the session. ...","html_type":null},{"tagname":"method","name":"createEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":760}],"doc":"<p>Process a create block of entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to create.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["add","createRecord","onInvalidEntityCreate","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-createEntities","owner":"Ext.data.Session","overrides":null,"short_doc":"Process a create block of entities from the update method. ...","html_type":null},{"tagname":"method","name":"createRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":269}],"doc":"<p>Creates a new record and tracks it in this session.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record to create.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"data","doc":"<p>The data for the record.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"preventAdd","doc":"<p>(private) <code>true</code> to prevent the record from being added\nto the session</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The new record.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["checkModelType","getParent","getSchema"],"readonly":null,"required":null,"template":null,"id":"method-createRecord","owner":"Ext.data.Session","overrides":null,"short_doc":"Creates a new record and tracks it in this session. ...","html_type":null},{"tagname":"method","name":"createRelayer","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1705}],"doc":"<p>Creates an event handling function which re-fires the event from this object\nas the passed event name.</p>\n","params":[{"tagname":"params","type":"String","name":"newName","doc":"<p>The name under which to re-fire the passed parameters.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"beginEnd","doc":"<p>The caller can specify on which indices to slice.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Function","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-createRelayer","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Creates an event handling function which re-fires the event from this object\nas the passed event name. ...","html_type":null},{"tagname":"method","name":"destroy","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":158}],"doc":"<p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.data.Session-property-clearPropertiesOnDestroy\" rel=\"Ext.data.Session-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":158,"fires":[],"method_calls":["callParent","setSchema"],"readonly":null,"required":null,"template":null,"id":"method-destroy","owner":"Ext.data.Session","overrides":[{"name":"destroy","owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>"}],"short_doc":"This method is called to cleanup an object and its resources. ...","html_type":null},{"tagname":"method","name":"destroyMembers","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1706}],"doc":"<p>Destroys member properties by name.</p>\n\n<p>If a property name is the name of a <em>config</em>, the getter is <em>not</em> invoked, so\nif the config has not been initialized, nothing will be done.</p>\n\n<p>The property will be destroyed, and the corrected name (if the property is a <em>config</em>\nand config names are prefixed) will set to <code>null</code> in this object's dictionary.</p>\n","params":[{"tagname":"params","type":"String...","name":"args","doc":"<p>One or more names of the properties to destroy and remove from\nthe object.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-destroyMembers","owner":"Ext.Base","overrides":null,"short_doc":"Destroys member properties by name. ...","html_type":null},{"tagname":"method","name":"doFireEvent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":857}],"doc":"<p>Continue to fire event.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"bubbles","doc":"\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleParent"],"readonly":null,"required":null,"template":null,"id":"method-doFireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Continue to fire event. ...","html_type":null},{"tagname":"method","name":"dropEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":802}],"doc":"<p>Process a drop block for entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"ids","doc":"<p>The identifiers of the items to drop.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onInvalidEntityDrop","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-dropEntities","owner":"Ext.data.Session","overrides":null,"short_doc":"Process a drop block for entities from the update method. ...","html_type":null},{"tagname":"method","name":"enableBubble","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1722}],"doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling\n<code>this.getBubbleTarget()</code> if present. There is no implementation in the Observable\nbase class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\nreturns the Component's immediate owner. But if a known target is required, this can be\noverridden to access the required target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable\n    // the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/String[]","name":"eventNames","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-enableBubble","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling\nthis.getBubbleTarget() if present. ...","html_type":null},{"tagname":"method","name":"evict","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":836}],"doc":"<p>Remove a record and any references from the session.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["untrackRecordState"],"readonly":null,"required":null,"template":null,"id":"method-evict","owner":"Ext.data.Session","overrides":null,"short_doc":"Remove a record and any references from the session. ...","html_type":null},{"tagname":"method","name":"fireAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":723}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the <code>order</code> option of\n<code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning <code>false</code>, and prevent the action function from\nbeing called.</p>\n\n<p>The action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the <code>order</code> event option) by passing <code>'after'</code>\nas the <code>order</code> parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Event options for the action function.  Accepts any\nof the options of <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>The order to call the action function relative\ntoo the event handlers (<code>'before'</code> or <code>'after'</code>).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of <code>'before'</code> is equivalent to a priority of <code>99.5</code>, while an order of\n<code>'after'</code> is equivalent to a priority of <code>-99.5</code>.  See the <code>priority</code> option\nof <code><a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a></code> for more details.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'before'","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.mixin.Observable-method-fireEventedAction\" rel=\"Ext.mixin.Observable-method-fireEventedAction\" class=\"docClass\">fireEventedAction</a> instead.</p>\n","version":"5.5"},"inheritable":null,"linenr":null,"fires":[],"method_calls":["doAddListener","fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"fireDirtyChange","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":110}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":110,"fires":["<a href=\"#!/api/Ext.mixin.Dirty-event-dirtychange\" rel=\"Ext.mixin.Dirty-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["fireEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireDirtyChange","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"fireEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":651}],"doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus\nthe <code>options</code> object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See\n<a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object...","name":"args","doc":"<p>Variable number of parameters are passed to handlers.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>...","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise it\nreturns true.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus\nthe options object passed to addList...","html_type":null},{"tagname":"method","name":"fireEventArgs","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":693}],"doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy\n(See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"args","doc":"<p>An array of parameters which are passed to handlers.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>returns false if any of the handlers return false otherwise\nit returns true.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doFireEvent"],"readonly":null,"required":null,"template":null,"id":"method-fireEventArgs","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameter list. ...","html_type":null},{"tagname":"method","name":"fireEventedAction","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":813}],"doc":"<p>Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.</p>\n\n<p>By pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to fire.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Arguments to pass to handlers and to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The action function.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Array/Boolean","name":"fnArgs","doc":"<p>Optional arguments for the action <code>fn</code>. If not\ngiven, the normal <code>args</code> will be used to call <code>fn</code>. If <code>false</code> is passed, the\n<code>args</code> are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["fireEventArgs"],"readonly":null,"required":null,"template":null,"id":"method-fireEventedAction","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Fires the specified event with the passed parameters and executes a function (action). ...","html_type":null},{"tagname":"method","name":"getAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":76}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-autoDestroy\" rel=\"Ext.data.Session-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[],"return":{"type":"Boolean","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getAutoDestroy","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns the value of autoDestroy. ...","html_type":null},{"tagname":"method","name":"getBubbleParent","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":894}],"doc":"<p>Gets the bubbling parent for an Observable</p>\n","params":[],"return":{"type":"Ext.util.Observable","name":"return","doc":"<p>The bubble parent. null is returned if\nno bubble target exists</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getBubbleTarget"],"readonly":null,"required":null,"template":null,"id":"method-getBubbleParent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Gets the bubbling parent for an Observable ...","html_type":null},{"tagname":"method","name":"getChanges","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":302}],"doc":"<p>Returns an object describing all of the modified fields, created or dropped records\nand many-to-many association changes maintained by this session.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>An object in the CRUD format (see the intro docs). <code>null</code> if there are\nno changes.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["visitData"],"readonly":null,"required":null,"template":null,"id":"method-getChanges","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns an object describing all of the modified fields, created or dropped records\nand many-to-many association chan...","html_type":null},{"tagname":"method","name":"getChangesForParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":317}],"doc":"<p>The same functionality as <a href=\"#!/api/Ext.data.Session-method-getChanges\" rel=\"Ext.data.Session-method-getChanges\" class=\"docClass\">getChanges</a>, however we also take into account our\nparent session.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>An object in the CRUD format (see the intro docs). <code>null</code> if there are\nno changes.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["visitData"],"readonly":null,"required":null,"template":null,"id":"method-getChangesForParent","owner":"Ext.data.Session","overrides":null,"short_doc":"The same functionality as getChanges, however we also take into account our\nparent session. ...","html_type":null},{"tagname":"method","name":"getConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1657}],"doc":"<p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>The name of the config property to get.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"peek","doc":"<p><code>true</code> to peek at the raw value without calling the getter.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"ifInitialized","doc":"<p><code>true</code> to only return the initialized property\nvalue, not the raw config value, and <em>not</em> to trigger initialization. Returns\n<code>undefined</code> if the property has not yet been initialized.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The config property value.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getCurrentConfig","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"method-getConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns a specified config property value. ...","html_type":null},{"tagname":"method","name":"getCrudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":86}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-crudProperties\" rel=\"Ext.data.Session-cfg-crudProperties\" class=\"docClass\">crudProperties</a>.</p>\n","params":[],"return":{"type":"Object","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":86,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCrudProperties","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns the value of crudProperties. ...","html_type":null},{"tagname":"method","name":"getCurrentConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1860}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getCurrentConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":23}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Dirty-cfg-dirty\" rel=\"Ext.mixin.Dirty-cfg-dirty\" class=\"docClass\">dirty</a>.</p>\n","params":[],"return":{"type":"Boolean","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Returns the value of dirty. ...","html_type":null},{"tagname":"method","name":"getEntityList","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":862}],"doc":"<p>Transforms a list of ids into a list of records for a particular type.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"ids","doc":"<p>The ids to transform.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.data.Model[]","name":"return","doc":"<p>The models corresponding to the ids.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onInvalidAssociationEntity","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-getEntityList","owner":"Ext.data.Session","overrides":null,"short_doc":"Transforms a list of ids into a list of records for a particular type. ...","html_type":null},{"tagname":"method","name":"getEntry","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":894}],"doc":"<p>Return an entry for the data property for a particular type/id.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The entity name or model type.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The data entry.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSchema"],"readonly":null,"required":null,"template":null,"id":"method-getEntry","owner":"Ext.data.Session","overrides":null,"short_doc":"Return an entry for the data property for a particular type/id. ...","html_type":null},{"tagname":"method","name":"getInitialConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1877}],"doc":"<p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"<p>Name of the config option to return.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object/Mixed","name":"return","doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/Mixed"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getInitialConfig","owner":"Ext.Base","overrides":null,"short_doc":"Returns the initial configuration passed to the constructor when\ninstantiating this class. ...","html_type":null},{"tagname":"method","name":"getModelIdentifier","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":999}],"doc":"<p>Gets a user friendly identifier for a Model.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the entity.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"String","name":"return","doc":"<p>The identifier.</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getModelIdentifier","owner":"Ext.data.Session","overrides":null,"short_doc":"Gets a user friendly identifier for a Model. ...","html_type":null},{"tagname":"method","name":"getParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":70}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[],"return":{"type":"Ext.data.Session","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getParent","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns the value of parent. ...","html_type":null},{"tagname":"method","name":"getRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":334}],"doc":"<p>Get a cached record from the session. If the record does not exist, it will\nbe created. If the <code>autoLoad</code> parameter is not set to <code>false</code>, the record will\nbe loaded via the <a href=\"#!/api/Ext.data.Model-cfg-proxy\" rel=\"Ext.data.Model-cfg-proxy\" class=\"docClass\">proxy</a> of the Model.</p>\n\n<p>If this session is configured with a <code><a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a></code> session, a <em>copy</em> of any existing\nrecord  in the <code>parent</code> will be adopted into this session. If the <code>parent</code> does not contain\nthe record, the record will be created and <em>not</em> inserted into the parent.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.Session-method-peekRecord\" rel=\"Ext.data.Session-method-peekRecord\" class=\"docClass\">peekRecord</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class/Ext.data.Model","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record\nto create. This may also be a record instance, where the type and id will be inferred from\nthe record. If the record is not attached to a session, it will be adopted. If it exists\nin a parent, an appropriate copy will be made as described.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean/Object","name":"autoLoad","doc":"<p><code>false</code> to prevent the record from being loaded if\nit does not exist. If this parameter is an object, it will be passed to the\nExt.data.Model.method!load call.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The record.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["adopt","getParent","getSchema","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-getRecord","owner":"Ext.data.Session","overrides":null,"short_doc":"Get a cached record from the session. ...","html_type":null},{"tagname":"method","name":"getSaveBatch","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":407}],"doc":"<p>Returns an <code><a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a></code> containing the <code><a href=\"#!/api/Ext.data.operation.Operation\" rel=\"Ext.data.operation.Operation\" class=\"docClass\">Ext.data.operation.Operation</a></code> instances\nthat are needed to save all of the changes in this session. This sorting is based\non operation type, associations and foreign keys. Generally speaking the operations\nin the batch can be committed to a server sequentially and the server will never be\nsent a request with an invalid (client-generated) id in a foreign key field.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"sort","doc":"<p>Pass <code>false</code> to disable the batch operation sort.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"true","optional":true,"properties":null}],"return":{"type":"Ext.data.Batch","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["visitData"],"readonly":null,"required":null,"template":null,"id":"method-getSaveBatch","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns an Ext.data.Batch containing the Ext.data.operation.Operation instances\nthat are needed to save all of the ch...","html_type":null},{"tagname":"method","name":"getSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":65}],"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[],"return":{"type":"String/Ext.data.schema.Schema","name":null,"doc":"\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-getSchema","owner":"Ext.data.Session","overrides":null,"short_doc":"Returns the value of schema. ...","html_type":null},{"tagname":"method","name":"hasConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1869}],"doc":"\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasConfig","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"hasListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1497}],"doc":"<p>Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. The answer indicates whether the event needs firing or not.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The name of the event to check for</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-hasListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks to see if this object has any listeners for a specified event, or whether\nthe event bubbles. ...","html_type":null},{"tagname":"method","name":"initConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1618}],"doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"instanceConfig","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-initConfig","owner":"Ext.Base","overrides":null,"short_doc":"Initialize configuration for this class. ...","html_type":null},{"tagname":"method","name":"isDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":67}],"doc":"<p>Returns <code>true</code> if this object is <code>dirty</code>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getDirty"],"readonly":null,"required":null,"template":null,"id":"method-isDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Returns true if this object is dirty. ...","html_type":null},{"tagname":"method","name":"isSuspended","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1510}],"doc":"<p>Checks if all events, or a specific event, is suspended.</p>\n","params":[{"tagname":"params","type":"String","name":"event","doc":"<p>The name of the specific event to check</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p><code>true</code> if events are suspended</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-isSuspended","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Checks if all events, or a specific event, is suspended. ...","html_type":null},{"tagname":"method","name":"link","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1923}],"doc":"<p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code>method!destroy</code>).</p>\n","params":[{"tagname":"params","type":"String","name":"name","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The <code>value</code> passed.</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-link","owner":"Ext.Base","overrides":null,"short_doc":"Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...","html_type":null},{"tagname":"method","name":"mon","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2039}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item to which to add\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event\nname, this is the handler function or the name of a method on the specified\n<code>scope</code>.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"noDestroy","doc":"<p>(private)</p>\n\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\nall listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mon","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for addManagedListener. ...","html_type":null},{"tagname":"method","name":"mun","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2045}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-mun","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeManagedListener. ...","html_type":null},{"tagname":"method","name":"on","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2028}],"doc":"<p>The <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method is shorthand for\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n\n<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"itemclick\", this.onItemClick, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: this.onCellClick,\n    select: this.onSelect,\n    viewready: this.onViewReady,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: this.onCellClick, scope: this, single: true},\n    viewready: {fn: panel.onViewReady, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used:</p>\n\n<pre><code>myGridPanel.on({\n    cellclick: {fn: 'onCellClick', scope: this, single: true},\n    viewready: {fn: 'onViewReady', scope: panel}\n});\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"eventName","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes or the <em>name</em> of\nthe method within the specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">Ext.util.Observable.fireEvent</a> plus the <code>options</code> parameter described\nbelow.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> The options object will also be passed as the last argument to every\nevent handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":[{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","properties":null},{"tagname":"params","type":"Number","name":"delay","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event\n  fires.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Boolean","name":"single","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove\n  itself.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"buffer","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Number","name":"onFrame","doc":"<p>Causes the handler to be scheduled to run at the next\n  <a href=\"#!/api/Ext.Function-method-requestAnimationFrame\" rel=\"Ext.Function-method-requestAnimationFrame\" class=\"docClass\">animation frame event</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"target","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the\n  event was bubbled up from a child Observable.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","properties":null},{"tagname":"params","type":"String","name":"element","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">element</a>\n  to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the\n  Component is rendered.</p>\n\n\n\n\n<p>  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  var panel = new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n\n\n\n<p>In order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.</p>\n\n\n\n\n<pre><code> panel.body.un(...)\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"String","name":"delegate","doc":"<p>A simple selector to filter the event target or look for a descendant of the target.</p>\n\n\n\n\n<p>  The \"delegate\" option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n\n<p>  See the <em>delegate</em> example below.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null},{"tagname":"params","type":"Boolean","name":"capture","doc":"<p>When set to <code>true</code>, the listener is fired in the capture phase of the event propagation\n sequence, instead of the default bubble phase.</p>\n\n\n\n\n<p>  The <code>capture</code> option is only available on <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> instances (or\n  when attaching a listener to a <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a> via a Component using the\n  element option).</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopPropagation","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopPropagation\" rel=\"Ext.event.Event-method-stopPropagation\" class=\"docClass\">stopPropagation</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"preventDefault","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-preventDefault\" rel=\"Ext.event.Event-method-preventDefault\" class=\"docClass\">preventDefault</a> on the event\n  object before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Boolean","name":"stopEvent","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a>.</strong>\n  <code>true</code> to call <a href=\"#!/api/Ext.event.Event-method-stopEvent\" rel=\"Ext.event.Event-method-stopEvent\" class=\"docClass\">stopEvent</a> on the event object\n  before firing the handler.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Array","name":"args","doc":"<p>Optional set of arguments to pass to the handler function before the actual\nfired event arguments. For example, if <code>args</code> is set to <code>['foo', 42]</code>,\nthe event handler function will be called with an arguments list like this:</p>\n\n\n\n\n<pre><code> handler('foo', 42, &lt;actual event arguments&gt;...);\n</code></pre>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>","properties":null},{"tagname":"params","type":"Boolean","name":"destroyable","doc":"<p>When specified as <code>true</code>, the function returns a <code>destroyable</code> object. An object\n  which implements the <code>destroy</code> method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a>; particularly when\n  removing multiple listeners.  <em>NOTE</em> - not compatible when using the <em>element</em>\n  option.  See <a href=\"#!/api/Ext-method-un\" rel=\"Ext-method-un\" class=\"docClass\">un</a> for the proper syntax for removing listeners added using the\n  <em>element</em> config.</p>\n\n\n\n","default":"false","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","properties":null},{"tagname":"params","type":"Number","name":"priority","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.</p>\n\n\n\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null},{"tagname":"params","type":"String","name":"order","doc":"<p>A legacy option that is provided for backward compatibility.\n  It is recommended to use the <code>priority</code> option instead.  Available options are:</p>\n\n\n\n\n<ul>\n<li><code>'before'</code>: equal to a priority of <code>100</code></li>\n<li><code>'current'</code>: equal to a priority of <code>0</code> or default priority</li>\n<li><code>'after'</code>: equal to a priority of <code>-100</code></li>\n</ul>\n\n\n\n","default":"'current'","required":null,"deprecated":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","properties":null}]},{"tagname":"params","type":"String","name":"order","doc":"<p>A shortcut for the <code>order</code> event option.  Provided for backward compatibility.\n  Please use the <code>priority</code> event option instead.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":"'current'","optional":true,"properties":null},{"tagname":"params","type":"Object","name":"caller","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n\n\n\n<p><strong>Attaching multiple handlers in 1 call</strong></p>\n\n\n\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.</p>\n\n\n\n\n<pre><code>grid.on({\n    itemclick: 'onItemClick',\n    itemcontextmenu: grid.onItemContextmenu,\n    destroy: {\n        fn: function () {\n            // function called within the 'altCmp' scope instead of grid\n        },\n        scope: altCmp // unique scope for the destroy handler\n    },\n    scope: grid       // default scope - provided for example clarity\n});\n</code></pre>\n\n\n\n\n<p><strong>Delegate</strong></p>\n\n\n\n\n<p>This is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:</p>\n\n\n\n\n<pre><code>var panel = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'panel',\n    renderTo: document.body,\n    title: 'Delegate Handler Example',\n    frame: true,\n    height: 220,\n    width: 220,\n    html: '&lt;h1 class=\"myTitle\"&gt;BODY TITLE&lt;/h1&gt;Body content'\n});\n\n// The click handler will only be called when the click occurs on the\n// delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\npanel.on({\n    click: function (e) {\n        console.log(e.getTarget().innerHTML);\n    },\n    element: 'body',\n    delegate: 'h1.myTitle'\n });\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p><strong>Only when the <code>destroyable</code> option is specified.</strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes\n all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-on","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"The on method is shorthand for\naddListener. ...","html_type":null},{"tagname":"method","name":"onAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1321}],"doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends an after-event handler. ...","html_type":null},{"tagname":"method","name":"onBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1306}],"doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set\nto <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event to listen for.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The method the event invokes.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>An object containing handler configuration.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["addListener"],"readonly":null,"required":null,"template":null,"id":"method-onBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Appends a before-event handler. ...","html_type":null},{"tagname":"method","name":"onInvalidAssociationEntity","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":425}],"doc":"<p>Triggered when an associated item from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getModelIdentifier"],"readonly":null,"required":null,"template":true,"id":"method-onInvalidAssociationEntity","owner":"Ext.data.Session","overrides":null,"short_doc":"Triggered when an associated item from update references a record\nthat does not exist in the session. ...","html_type":null},{"tagname":"method","name":"onInvalidEntityCreate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":438}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> tries to create a record\nthat already exists.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getModelIdentifier"],"readonly":null,"required":null,"template":true,"id":"method-onInvalidEntityCreate","owner":"Ext.data.Session","overrides":null,"short_doc":"Triggered when an drop block from update tries to create a record\nthat already exists. ...","html_type":null},{"tagname":"method","name":"onInvalidEntityDrop","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":452}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getModelIdentifier"],"readonly":null,"required":null,"template":true,"id":"method-onInvalidEntityDrop","owner":"Ext.data.Session","overrides":null,"short_doc":"Triggered when an drop block from update references a record\nthat does not exist in the session. ...","html_type":null},{"tagname":"method","name":"onInvalidEntityRead","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":465}],"doc":"<p>Triggered when an drop block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> tries to create a record\nthat already exists.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getModelIdentifier"],"readonly":null,"required":null,"template":true,"id":"method-onInvalidEntityRead","owner":"Ext.data.Session","overrides":null,"short_doc":"Triggered when an drop block from update tries to create a record\nthat already exists. ...","html_type":null},{"tagname":"method","name":"onInvalidEntityUpdate","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":479}],"doc":"<p>Triggered when an update block from <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> references a record\nthat does not exist in the session.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the model.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"dropped","doc":"<p><code>true</code> if the record was dropped.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getModelIdentifier"],"readonly":null,"required":null,"template":true,"id":"method-onInvalidEntityUpdate","owner":"Ext.data.Session","overrides":null,"short_doc":"Triggered when an update block from update references a record\nthat does not exist in the session. ...","html_type":null},{"tagname":"method","name":"peekRecord","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":499}],"doc":"<p>Gets an existing record from the session. The record will <em>not</em> be created if it does\nnot exist.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.Session-method-getRecord\" rel=\"Ext.data.Session-method-getRecord\" class=\"docClass\">getRecord</a>.</p>\n","params":[{"tagname":"params","type":"String/Ext.Class","name":"type","doc":"<p>The <code>entityName</code> or the actual class of record to create.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"id","doc":"<p>The id of the record.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"deep","doc":"<p><code>true</code> to consult</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":{"type":"Ext.data.Model","name":"return","doc":"<p>The record, <code>null</code> if it does not exist.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["checkModelType","getParent","getSchema"],"readonly":null,"required":null,"template":null,"id":"method-peekRecord","owner":"Ext.data.Session","overrides":null,"short_doc":"Gets an existing record from the session. ...","html_type":null},{"tagname":"method","name":"prepareClass","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":192}],"doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","params":[{"tagname":"params","type":"Function","name":"T","doc":"<p>The class constructor to prepare.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.util.Observable","name":"mixin","doc":"<p>The mixin if being used as a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"data","doc":"<p>The raw class creation data if this is an extend.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-prepareClass","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Prepares a given class for observable instances. ...","html_type":null},{"tagname":"method","name":"readEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":1101}],"doc":"<p>Process a read block of entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to read.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["add","createRecord","onInvalidEntityRead","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-readEntities","owner":"Ext.data.Session","overrides":null,"short_doc":"Process a read block of entities from the update method. ...","html_type":null},{"tagname":"method","name":"relayEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1631}],"doc":"<p>Relays selected events from the specified Observable as if the events were fired\nby <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from\nstore. So you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).</p>\n","params":[{"tagname":"params","type":"Object","name":"origin","doc":"<p>The Observable whose events this object is to relay.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String[]/Object","name":"events","doc":"<p>Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});</p>\n\n<p>Would now redispatch the add event of this as a push event and the remove event\nas a pop event.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"prefix","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and\n'storeclear'.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method\nwhich, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["createRelayer","mon"],"readonly":null,"required":null,"template":null,"id":"method-relayEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Relays selected events from the specified Observable as if the events were fired\nby this. ...","html_type":null},{"tagname":"method","name":"removeAfterListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1387}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unAfter\" rel=\"Ext.mixin.Observable-method-unAfter\" class=\"docClass\">unAfter</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeAfterListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unAfter. ...","html_type":null},{"tagname":"method","name":"removeBeforeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1380}],"doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-unBefore\" rel=\"Ext.mixin.Observable-method-unBefore\" class=\"docClass\">unBefore</a>.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeBeforeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Alias for unBefore. ...","html_type":null},{"tagname":"method","name":"removeListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1230}],"doc":"<p>Removes an event handler.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["doRemoveListener"],"readonly":null,"required":null,"template":null,"id":"method-removeListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes an event handler. ...","html_type":null},{"tagname":"method","name":"removeManagedListener","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":605}],"doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.mixin.Observable-method-mon\" rel=\"Ext.mixin.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.util.Observable/Ext.dom.Element","name":"item","doc":"<p>The item from which to remove\na listener/listeners.</p>\n\n","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object/String","name":"ename","doc":"<p>The event name, or an object containing event name\nproperties.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe handler function.</p>\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>If the <code>ename</code> parameter was an event name, this is\nthe scope (<code>this</code> reference) in which the handler function is executed.</p>\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeManagedListener","removeManagedListenerItem"],"readonly":null,"required":null,"template":null,"id":"method-removeManagedListener","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes listeners that were added by the mon method. ...","html_type":null},{"tagname":"method","name":"removeManagedListenerItem","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1457}],"doc":"<p>Remove a single managed listener item</p>\n","params":[{"tagname":"params","type":"Boolean","name":"isClear","doc":"<p>True if this is being called during a clear</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"managedListener","doc":"<p>The managed listener item</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"item","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String","name":"ename","doc":"\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>See removeManagedListener for other args</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-removeManagedListenerItem","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Remove a single managed listener item ...","html_type":null},{"tagname":"method","name":"resolveListenerScope","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":667}],"doc":"<p>Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime.</p>\n","params":[{"tagname":"params","type":"Object","name":"defaultScope","doc":"<p>The default scope to return if none is found.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":"this","optional":true,"properties":null}],"return":{"type":"Object","name":"return","doc":"<p>The default event scope</p>\n\n\n\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resolveListenerScope","owner":"Ext.mixin.Observable","overrides":[{"name":"resolveListenerScope","owner":"Ext.mixin.Inheritable","link":"<a href=\"#!/api/Ext.mixin.Inheritable-method-resolveListenerScope\" rel=\"Ext.mixin.Inheritable-method-resolveListenerScope\" class=\"docClass\">Ext.mixin.Inheritable.resolveListenerScope</a>"},{"name":"resolveListenerScope","owner":"Ext.plugin.Abstract","link":"<a href=\"#!/api/Ext.plugin.Abstract-method-resolveListenerScope\" rel=\"Ext.plugin.Abstract-method-resolveListenerScope\" class=\"docClass\">Ext.plugin.Abstract.resolveListenerScope</a>"}],"short_doc":"Gets the default scope for firing late bound events (string names with\nno scope attached) at runtime. ...","html_type":null},{"tagname":"method","name":"resumeEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1576}],"doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvent\" rel=\"Ext.mixin.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain\nevent, this converse method will have to be called the same number of times for it\nto resume firing.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to resume.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"resumeEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1603}],"doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","params":[{"tagname":"params","type":"Boolean","name":"discardQueue","doc":"<p><code>true</code> to prevent any previously queued events from firing\nwhile we were suspended. See <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-resumeEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Resumes firing events (see suspendEvents). ...","html_type":null},{"tagname":"method","name":"save","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":534}],"doc":"<p>Save any changes in this session to a <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a> session.</p>\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.data.Session-event-dirtychange\" rel=\"Ext.data.Session-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["commit","getParent","visitData"],"readonly":null,"required":null,"template":null,"id":"method-save","owner":"Ext.data.Session","overrides":null,"short_doc":"Save any changes in this session to a parent session. ...","html_type":null},{"tagname":"method","name":"setAutoDestroy","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":76}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-autoDestroy\" rel=\"Ext.data.Session-cfg-autoDestroy\" class=\"docClass\">autoDestroy</a>.</p>\n","params":[{"tagname":null,"type":"Boolean","name":"autoDestroy","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":"5.0.1","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setAutoDestroy","owner":"Ext.data.Session","overrides":null,"short_doc":"Sets the value of autoDestroy. ...","html_type":null},{"tagname":"method","name":"setConfig","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1769}],"doc":"<p>Sets a single/multiple configuration options.</p>\n","params":[{"tagname":"params","type":"String/Object","name":"name","doc":"<p>The name of the property to set, or a set of key value\npairs to set.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"value","doc":"<p>The value to set for the name parameter.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>(private)</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setConfig","owner":"Ext.Base","overrides":null,"short_doc":"Sets a single/multiple configuration options. ...","html_type":null},{"tagname":"method","name":"setCrudProperties","autodetected":{"tagname":"cfg","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"type":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":86}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-crudProperties\" rel=\"Ext.data.Session-cfg-crudProperties\" class=\"docClass\">crudProperties</a>.</p>\n","params":[{"tagname":null,"type":"Object","name":"crudProperties","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":86,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setCrudProperties","owner":"Ext.data.Session","overrides":null,"short_doc":"Sets the value of crudProperties. ...","html_type":null},{"tagname":"method","name":"setDirty","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":23}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Dirty-cfg-dirty\" rel=\"Ext.mixin.Dirty-cfg-dirty\" class=\"docClass\">dirty</a>.</p>\n","params":[{"tagname":null,"type":"Boolean","name":"dirty","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Sets the value of dirty. ...","html_type":null},{"tagname":"method","name":"setListeners","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2051}],"doc":"<p>An alias for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.  In\nversions prior to 5.1, <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href=\"#!/api/Ext.mixin.Observable-method-on\" rel=\"Ext.mixin.Observable-method-on\" class=\"docClass\">on</a> method.</p>\n","params":[{"tagname":"params","type":"Object","name":"listeners","doc":"<p>The listeners</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setListeners","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"An alias for addListener. ...","html_type":null},{"tagname":"method","name":"setParent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":70}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[{"tagname":null,"type":"Ext.data.Session","name":"parent","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setParent","owner":"Ext.data.Session","overrides":null,"short_doc":"Sets the value of parent. ...","html_type":null},{"tagname":"method","name":"setSchema","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"default":true,"accessor":true,"evented":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":65}],"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.Session-cfg-schema\" rel=\"Ext.data.Session-cfg-schema\" class=\"docClass\">schema</a>.</p>\n","params":[{"tagname":null,"type":"String/Ext.data.schema.Schema","name":"schema","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Ext.data.schema.Schema\" rel=\"Ext.data.schema.Schema\" class=\"docClass\">Ext.data.schema.Schema</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-setSchema","owner":"Ext.data.Session","overrides":null,"short_doc":"Sets the value of schema. ...","html_type":null},{"tagname":"method","name":"spawn","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":557}],"doc":"<p>Create a child session with this session as the <a href=\"#!/api/Ext.data.Session-cfg-parent\" rel=\"Ext.data.Session-cfg-parent\" class=\"docClass\">parent</a>.</p>\n","params":[],"return":{"type":"Ext.data.Session","name":"return","doc":"<p>The copied session.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.data.Session\" rel=\"Ext.data.Session\" class=\"docClass\">Ext.data.Session</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSchema"],"readonly":null,"required":null,"template":null,"id":"method-spawn","owner":"Ext.data.Session","overrides":null,"short_doc":"Create a child session with this session as the parent. ...","html_type":null},{"tagname":"method","name":"statics","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1290}],"doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>, <code>this.statics()</code> is scope-independent and it always returns\nthe class from which it was called, regardless of what <code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        // always equals to 'Cat' no matter what 'this' refers to\n        // equivalent to: My.Cat.speciesName\n        alert(statics.speciesName);\n\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        // equivalent to: My.Cat.speciesName\n        cloned.groupName = this.statics().speciesName;\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard' // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","params":[],"return":{"type":"Ext.Class","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-statics","owner":"Ext.Base","overrides":null,"short_doc":"Get the reference to the class from which this object was instantiated. ...","html_type":null},{"tagname":"method","name":"suspendEvent","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1544}],"doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when\nrequested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.mixin.Observable-method-resumeEvent\" rel=\"Ext.mixin.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume\nfiring.</strong></p>\n","params":[{"tagname":"params","type":"String...","name":"eventName","doc":"<p>Multiple event names to suspend.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>...","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["_initEvent"],"readonly":null,"required":null,"template":null,"id":"method-suspendEvent","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends firing of the named event(s). ...","html_type":null},{"tagname":"method","name":"suspendEvents","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1530}],"doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","params":[{"tagname":"params","type":"Boolean","name":"queueSuspended","doc":"<p><code>true</code> to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-suspendEvents","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Suspends the firing of all events. ...","html_type":null},{"tagname":"method","name":"trackRecordState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":118}],"doc":"<p>This method is called to track a given record in the total number of dirty records\n(modified, created or dropped). See <code>untrackRecordState</code> and <code>clearRecordStates</code>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to track.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"initial","doc":"<p>Pass <code>true</code> the first time a record is introduced.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>Returns <code>true</code> if the state of dirty records has changed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["checkCounters","setDirty"],"readonly":null,"required":null,"template":null,"id":"method-trackRecordState","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"This method is called to track a given record in the total number of dirty records\n(modified, created or dropped). ...","html_type":null},{"tagname":"method","name":"un","autodetected":{"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":2033}],"doc":"<p>Shorthand for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","params":[{"tagname":"params","type":"String","name":"eventName","doc":"<p>The type of event the handler was associated with.</p>\n\n\n\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function","name":"fn","doc":"<p>The handler to remove. <strong>This must be a reference to the function\npassed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n\n\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a> or the listener will not be removed.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"eventOptions","doc":"<p>(private)</p>\n\n\n\n\n<p><strong>Convenience Syntax</strong></p>\n\n\n\n\n<p>You can use the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>\n<code>destroyable: true</code> config option in place of calling un().  For example:</p>\n\n\n\n\n<pre><code>var listeners = cmp.on({\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide,\n    destroyable: true\n});\n\n// Remove listeners\nlisteners.destroy();\n// or\ncmp.un(\n    scope: cmp,\n    afterrender: cmp.onAfterrender,\n    beforehide: cmp.onBeforeHide\n);\n</code></pre>\n\n\n\n\n<p><strong>Exception - DOM event handlers using the element config option</strong></p>\n\n\n\n\n<p>You must go directly through the element to detach an event handler attached using\nthe <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> <em>element</em> option.</p>\n\n\n\n\n<pre><code>panel.on({\n    element: 'body',\n    click: 'onBodyCLick'\n});\n\npanel.body.un({\n    click: 'onBodyCLick'\n});\n</code></pre>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-un","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Shorthand for removeListener. ...","html_type":null},{"tagname":"method","name":"unAfter","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1351}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unAfter","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unBefore","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Observable.js","linenr":1336}],"doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","params":[{"tagname":"params","type":"String/String[]/Object","name":"eventName","doc":"<p>The name of the event the handler\nwas associated with.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Function/String","name":"fn","doc":"<p>The handler to remove.</p>\n","html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"scope","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null},{"tagname":"params","type":"Object","name":"options","doc":"<p>Extra options object.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["removeListener"],"readonly":null,"required":null,"template":null,"id":"method-unBefore","owner":"Ext.mixin.Observable","overrides":null,"short_doc":"Removes a before-event handler. ...","html_type":null},{"tagname":"method","name":"unlink","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1941}],"doc":"<p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n","params":[{"tagname":"params","type":"String[]","name":"names","doc":"<p>The names of the linked objects to destroy.</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>[]","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"method-unlink","owner":"Ext.Base","overrides":null,"short_doc":"Destroys a given set of linked objects. ...","html_type":null},{"tagname":"method","name":"untrackRecordState","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":160}],"doc":"<p>This method is called to remove the tracking of a given record from the total number\nof dirty records (modified, created or dropped). The record passed to this method\nmust have been previously passed to <code>trackRecordState</code>.</p>\n","params":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The record to stop tracking.</p>\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Boolean","name":"return","doc":"<p>Returns <code>true</code> if the state of dirty records has changed.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["checkCounters","setDirty"],"readonly":null,"required":null,"template":null,"id":"method-untrackRecordState","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"This method is called to remove the tracking of a given record from the total number\nof dirty records (modified, crea...","html_type":null},{"tagname":"method","name":"update","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":568}],"doc":"<p>Complete a bulk update for this session.</p>\n","params":[{"tagname":"params","type":"Object","name":"data","doc":"<p>Data in the CRUD format (see the intro docs).</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":["<a href=\"#!/api/Ext.data.Session-event-dirtychange\" rel=\"Ext.data.Session-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["fireDirtyChange","getDirty","getSchema","resumeEvent","suspendEvent"],"readonly":null,"required":null,"template":null,"id":"method-update","owner":"Ext.data.Session","overrides":null,"short_doc":"Complete a bulk update for this session. ...","html_type":null},{"tagname":"method","name":"updateDirty","autodetected":{"tagname":"method","inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":79}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"dirty","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":79,"fires":["<a href=\"#!/api/Ext.mixin.Dirty-event-dirtychange\" rel=\"Ext.mixin.Dirty-event-dirtychange\" class=\"docClass\">dirtychange</a>"],"method_calls":["fireDirtyChange"],"readonly":null,"required":null,"template":null,"id":"method-updateDirty","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"updateEntities","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":1186}],"doc":"<p>Process an update block for entities from the <a href=\"#!/api/Ext.data.Session-method-update\" rel=\"Ext.data.Session-method-update\" class=\"docClass\">update</a> method.</p>\n","params":[{"tagname":"params","type":"Ext.Class","name":"entityType","doc":"<p>The entity type.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object[]","name":"items","doc":"<p>The data objects to update.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>[]","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["onInvalidEntityUpdate","peekRecord"],"readonly":null,"required":null,"template":null,"id":"method-updateEntities","owner":"Ext.data.Session","overrides":null,"short_doc":"Process an update block for entities from the update method. ...","html_type":null},{"tagname":"method","name":"visitData","autodetected":{"inheritdoc":true,"static":true,"private":true,"inheritable":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/data/Session.js","linenr":1248}],"doc":"<p>Walks the internal data tracked by this session and calls methods on the provided\n<code>visitor</code> object. The visitor can then accumulate whatever data it finds important.\nThe visitor object can provide a number of methods, but all are optional.</p>\n\n<p>This method does not enumerate associations since these can be traversed given the\nrecords that are enumerated. For many-to-many associations, however, this method\ndoes enumerate the changes because these changes are not \"owned\" by either side of\nsuch associations.</p>\n","params":[{"tagname":"params","type":"Object","name":"visitor","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":[{"tagname":"params","type":"Function","name":"onCleanRecord","doc":"<p>This method is called to describe a record\nthat is known but unchanged.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The unmodified record.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","properties":null}]},{"tagname":"params","type":"Function","name":"onDirtyRecord","doc":"<p>This method is called to describe a record\nthat has either been created, dropped or modified.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","properties":[{"tagname":"params","type":"Ext.data.Model","name":"record","doc":"<p>The modified record.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","properties":null}]},{"tagname":"params","type":"Function","name":"onMatrixChange","doc":"<p>This method is called to describe a\nchange in a many-to-many association (a \"matrix\").</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>","properties":[{"tagname":"params","type":"Ext.data.schema.Association","name":"association","doc":"<p>The object\ndescribing the many-to-many (\"matrix\") association.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Ext.data.schema.Association\" rel=\"Ext.data.schema.Association\" class=\"docClass\">Ext.data.schema.Association</a>","properties":null},{"tagname":"params","type":"Mixed","name":"leftId","doc":"<p>The <code>idProperty</code> of the record on the\n\"left\" of the association.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"Mixed","properties":null},{"tagname":"params","type":"Mixed","name":"rightId","doc":"<p>The <code>idProperty</code> of the record on the\n\"right\" of the association.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"Mixed","properties":null},{"tagname":"params","type":"Number","name":"state","doc":"<p>A negative number if the two records\nare being disassociated or a positive number if they are being associated. For\nexample, when adding User 10 to Group 20, this would be 1. When removing the User\nthis argument would be -1.</p>\n","default":null,"required":null,"deprecated":null,"html_type":"<a href=\"#!/api/Number\" rel=\"Number\" class=\"docClass\">Number</a>","properties":null}]}]}],"return":{"type":"Object","name":"return","doc":"<p>The visitor instance</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getSchema"],"readonly":null,"required":null,"template":null,"id":"method-visitData","owner":"Ext.data.Session","overrides":null,"short_doc":"Walks the internal data tracked by this session and calls methods on the provided\nvisitor object. ...","html_type":null},{"tagname":"method","name":"watchConfig","autodetected":{"inheritdoc":true,"static":true,"inheritable":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1841}],"doc":"<p>Watches config properties.</p>\n\n<pre><code> instance.watchConfig({\n     title: 'onTitleChange',\n     scope: me\n });\n</code></pre>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":"6.7.0","inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":[],"method_calls":["getConfigWatcher"],"readonly":null,"required":null,"template":null,"id":"method-watchConfig","owner":"Ext.Base","overrides":null,"short_doc":"Watches config properties. ...","html_type":null},{"tagname":"method","name":"addConfig","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1081}],"doc":"<p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n","params":[{"tagname":"params","type":"Object","name":"config","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Ext.Class","name":"mixinClass","doc":"<p>The mixin class if the configs are from a mixin.</p>\n","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","default":null,"optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator"],"readonly":null,"required":null,"template":null,"id":"static-method-addConfig","owner":"Ext.Base","overrides":null,"short_doc":"Adds new config properties to this class. ...","html_type":null},{"tagname":"method","name":"addInheritableStatics","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":515}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-addInheritableStatics","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMember","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":724}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"name","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"member","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"privacy","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMember","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"addMembers","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":560}],"doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The members to add to this class.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"isStatic","doc":"<p>Pass <code>true</code> if the members are static.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null},{"tagname":"params","type":"Boolean","name":"privacy","doc":"<p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":"false","optional":true,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addMembers","owner":"Ext.Base","overrides":null,"short_doc":"Add methods / properties to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"addStatics","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":491}],"doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-addStatics","owner":"Ext.Base","overrides":null,"short_doc":"Add / override static properties of this class. ...","html_type":null},{"tagname":"method","name":"borrow","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":746}],"doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","params":[{"tagname":"params","type":"Ext.Base","name":"fromClass","doc":"<p>The class to borrow members from</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Array/String","name":"members","doc":"<p>The names of the members to borrow</p>\n","html_type":"<a href=\"#!/api/Array\" rel=\"Array\" class=\"docClass\">Array</a>/<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addMembers"],"readonly":null,"required":null,"template":null,"id":"static-method-borrow","owner":"Ext.Base","overrides":null,"short_doc":"Borrow another class' members to the prototype of this class. ...","html_type":null},{"tagname":"method","name":"callParent","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":946}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callParent","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"callSuper","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":960}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"args","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":true,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-callSuper","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"create","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":126}],"doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","params":[],"return":{"type":"Object","name":"return","doc":"<p>the created instance.</p>\n","properties":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-create","owner":"Ext.Base","overrides":null,"short_doc":"Create a new instance of this Class. ...","html_type":null},{"tagname":"method","name":"createAlias","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1145}],"doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","params":[{"tagname":"params","type":"String/Object","name":"alias","doc":"<p>The new method name, or an object to set multiple aliases.\nSee <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"String/Object","name":"origin","doc":"<p>The original method name</p>\n","html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>/<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-createAlias","owner":"Ext.Base","overrides":null,"short_doc":"Create aliases for existing prototype methods. ...","html_type":null},{"tagname":"method","name":"extend","autodetected":{"inheritdoc":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":399}],"doc":"\n","params":[{"tagname":"params","type":"Object","name":"parentClass","doc":"\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["getConfigurator","hasOwnProperty"],"readonly":null,"required":null,"template":null,"id":"static-method-extend","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"getConfigurator","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1112}],"doc":"<p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n","params":[],"return":{"type":"Ext.Configurator","name":"return","doc":"\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getConfigurator","owner":"Ext.Base","overrides":null,"short_doc":"Returns the Ext.Configurator for this class. ...","html_type":null},{"tagname":"method","name":"getName","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":1126}],"doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","params":[],"return":{"type":"String","name":"return","doc":"<p>className</p>\n","properties":null,"html_type":"<a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-getName","owner":"Ext.Base","overrides":null,"short_doc":"Get the current class' name in string format. ...","html_type":null},{"tagname":"method","name":"mixin","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":975}],"doc":"<p>Used internally by the mixins pre-processor</p>\n","params":[{"tagname":null,"type":"Object","name":"name","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"mixinClass","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addConfig","addInheritableStatics","hasOwnProperty","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-mixin","owner":"Ext.Base","overrides":null,"short_doc":"Used internally by the mixins pre-processor ...","html_type":null},{"tagname":"method","name":"onExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":477}],"doc":"\n","params":[{"tagname":null,"type":"Object","name":"fn","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null},{"tagname":null,"type":"Object","name":"scope","doc":null,"html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":true,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-onExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"method","name":"override","autodetected":{"inheritdoc":true,"private":true,"linenr":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":796}],"doc":"<p>Override members of this class. Overridden methods can be invoked via\nmethod!callParent.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","params":[{"tagname":"params","type":"Object","name":"members","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":{"type":"Ext.Base","name":"return","doc":"<p>this class</p>\n","properties":null,"html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":["addCachedConfig","addConfig","addInheritableStatics","addMembers","addPlatformConfig","mixin"],"readonly":null,"required":null,"template":null,"id":"static-method-override","owner":"Ext.Base","overrides":null,"short_doc":"Override members of this class. ...","html_type":null},{"tagname":"method","name":"triggerExtended","autodetected":{"inheritdoc":true,"linenr":true,"params":true,"chainable":true,"fires":true,"method_calls":true},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/class/Base.js","linenr":452}],"doc":"\n","params":[],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":true,"protected":null,"chainable":false,"since":null,"inheritdoc":null,"static":true,"deprecated":null,"inheritable":true,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"static-method-triggerExtended","owner":"Ext.Base","overrides":null,"short_doc":" ...","html_type":null},{"tagname":"event","name":"dirtychange","autodetected":{},"files":[{"filename":"C:/Users/Administrator/Desktop/Ext.JS TS Types Generator v1.3.0/tmp/src-core/mixin/Dirty.js","linenr":11}],"doc":"<p>Fires when a change in the object's <a href=\"#!/api/Ext.mixin.Dirty-cfg-dirty\" rel=\"Ext.mixin.Dirty-cfg-dirty\" class=\"docClass\">dirty</a> state is detected.</p>\n\n<p><strong>Note:</strong> In order for this event to fire, the class that mixes in this mixin\nmust be <code><a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Observable</a></code>.</p>\n","params":[{"tagname":"params","type":"Ext.Base","name":"this","doc":"\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Boolean","name":"dirty","doc":"<p>Whether or not the object is now dirty.</p>\n","html_type":"<a href=\"#!/api/Boolean\" rel=\"Boolean\" class=\"docClass\">Boolean</a>","default":null,"optional":null,"properties":null},{"tagname":"params","type":"Object","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"<a href=\"#!/api/Object\" rel=\"Object\" class=\"docClass\">Object</a>","default":null,"optional":null,"properties":null}],"return":null,"type":null,"throws":null,"default":null,"properties":null,"private":null,"protected":null,"chainable":null,"since":null,"inheritdoc":null,"static":null,"deprecated":null,"inheritable":null,"linenr":null,"fires":null,"method_calls":null,"readonly":null,"required":null,"template":null,"id":"event-dirtychange","owner":"Ext.mixin.Dirty","overrides":null,"short_doc":"Fires when a change in the object's dirty state is detected. ...","html_type":null}],"code_type":"ext_define","id":"class-Ext.data.Session","component":false,"short_doc":"This class manages models and their associations. ...","deprecated":null}